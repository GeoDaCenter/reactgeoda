{"version":3,"file":"static/chunks/493.352ec1c729671337.js","mappings":"6eAMA,IAAMA,EAAe,CAAC,QAAS,SAAU,QAAQ,CAO3CC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAAoB,CAClCC,OAAQ,CACNC,MAAO,CACLC,QAAS,CAAC,WAAW,CACrBC,QAAS,CAAC,UAAU,CACpBC,YAAaP,EACbQ,aAAcR,CAChB,EACAS,YAAa,CACXC,OAAQ,CAAC,CAACA,OAAQV,CAAY,EAAE,CAChC,YAAa,CAAC,CAACW,KAAM,CAAC,UAAWX,EAAa,EAAE,CAChD,WAAY,CAAC,qBAAqB,CAEtC,CACF,GAEO,SAASY,IAAG,QAAAC,EAAAC,UAAAC,MAAA,CAAAC,EAAA,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAGD,CAAAA,CAAHC,EAAA,CAAAH,SAAA,CAAAG,EAAuB,CACxC,OAAOhB,EAAQiB,CAAAA,EAAAA,EAAAA,CAAAA,EAAKF,GACtB,wDC/BO,IAAMG,EAAqB,CAChCC,MAAO,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACD,CACDC,gBAAiB,mBACjBC,UAAW,CAAC,EACZC,MAAO,CACLD,UAAW,CACTF,MAAO,SACT,EACAI,aAAc,CACZJ,MAAO,SACT,CACF,EACAK,KAAM,CACJC,UAAW,CACTnB,YAAa,CACf,EACAoB,UAAW,CACTC,MAAO,CACT,EACAC,WAAY,EACZC,OAAQ,SACRC,OAAQ,EACV,EACAC,MAAO,CACLN,UAAW,CACTnB,YAAa,CACf,EACAoB,UAAW,CACTC,MAAO,CACT,EACAC,WAAY,EACZC,OAAQ,SACRC,OAAQ,EACV,EACAE,IAAK,CACHP,UAAW,CACTQ,eAAgB,EAChBC,eAAgB,MAClB,CACF,EACAC,IAAK,CACHV,UAAW,CACTnB,YAAa,EACb8B,YAAa,MACf,CACF,EACAC,QAAS,CACPZ,UAAW,CACTnB,YAAa,EACb8B,YAAa,MACf,CACF,EACAE,QAAS,CACPb,UAAW,CACTW,YAAa,OACbjB,MAAO,OACPf,QAAS,CACX,CACF,EACAmC,SAAU,CACRd,UAAW,CACTnB,YAAa,EACb8B,YAAa,MACf,CACF,EACAI,OAAQ,CACNf,UAAW,CACTnB,YAAa,EACb8B,YAAa,MACf,CACF,EACAK,OAAQ,CACNhB,UAAW,CACTnB,YAAa,EACb8B,YAAa,MACf,CACF,EACAM,MAAO,CACLjB,UAAW,CACTnB,YAAa,EACb8B,YAAa,MACf,CACF,EACAO,YAAa,CACXlB,UAAW,CACTN,MAAO,UACPyB,OAAQ,UACRR,YAAa,UACbS,aAAc,UACdvC,YAAa,CACf,CACF,EACAwC,MAAO,CACLrB,UAAW,CACTnB,YAAa,EACb8B,YAAa,MACf,EACAV,UAAW,CACTC,MAAO,EACPR,MAAO,SACT,EACAS,WAAY,EACZC,OAAQ,SACRC,OAAQ,GACRX,MAAO,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACD,CACD4B,MAAO,CACL5B,MAAO,SACT,CACF,EACA6B,IAAK,CACHvB,UAAW,CACTwB,UAAW,OACXb,YAAa,OACb9B,YAAa,EACf,EACAyC,MAAO,CACL5B,MAAO,MACT,EACA+B,SAAU,CACRzB,UAAW,CACTwB,UAAW,sBACXb,YAAa,OACb9B,YAAa,CACf,EACAyC,MAAO,CACL5B,MAAO,cACT,CACF,CACF,EACAgC,IAAK,CACH1B,UAAW,CACTwB,UAAW,OACXb,YAAa,OACb9B,YAAa,EACf,EACAyC,MAAO,CACL5B,MAAO,MACT,EACA+B,SAAU,CACRzB,UAAW,CACTwB,UAAW,sBACXb,YAAa,OACb9B,YAAa,CACf,EACAyC,MAAO,CACL5B,MAAO,cACT,CACF,CACF,EACAiC,aAAc,CACZC,SAAU,CACRC,KAAM,GACN5B,UAAW,CACTP,MAAO,SACT,CACF,EACAoC,SAAU,CACRD,KAAM,GACN5B,UAAW,CACTP,MAAO,SACT,CACF,EACAqC,UAAW,CACTF,KAAM,GACNnC,MAAO,SACT,EACAsC,UAAW,CACTH,KAAM,GACN5B,UAAW,CACTP,MAAO,CAAC,OAAO,CAEnB,EACAuC,UAAW,CACTJ,KAAM,GACNK,UAAW,CACTxC,MAAO,CAAC,UAAU,CAEtB,CACF,EACAyC,UAAW,CACTP,SAAU,CACRC,KAAM,G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","sources":["webpack://_N_E/./src/components/common/cn.ts","webpack://_N_E/./src/components/plots/echarts-theme.ts","webpack://_N_E/../../loaders.gl/modules/arrow/src/geoarrow/convert-geojson-feature-to-arrow.ts","webpack://_N_E/../../loaders.gl/modules/loader-utils/src/lib/files/blob-file.ts","webpack://_N_E/../../loaders.gl/modules/core/src/lib/filesystems/browser-filesystem.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/streaming/binary-chunk-reader.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/parsers/parse-shp-header.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/parsers/parse-shp-geometry.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/parsers/parse-shp.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/shp-loader.ts","webpack://_N_E/../../loaders.gl/modules/gis/src/lib/binary-features/transform.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/parsers/parse-shx.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/streaming/zip-batch-iterators.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/parsers/parse-dbf.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/dbf-loader.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/lib/parsers/parse-shapefile.ts","webpack://_N_E/../../loaders.gl/modules/shapefile/src/shapefile-loader.ts","webpack://_N_E/../../loaders.gl/modules/gis/src/lib/binary-features/extract-geometry-info.ts","webpack://_N_E/../../loaders.gl/modules/gis/src/lib/binary-features/geojson-to-flat-geojson.ts","webpack://_N_E/../../loaders.gl/modules/gis/src/lib/binary-features/geojson-to-binary.ts","webpack://_N_E/../../loaders.gl/modules/json/src/geojson-loader.ts","webpack://_N_E/./src/utils/file-utils.ts","webpack://_N_E/./src/utils/project-utils.ts","webpack://_N_E/./src/components/chat/prompt-input.tsx","webpack://_N_E/./src/components/chat/voice-chat-button.tsx","webpack://_N_E/./src/components/chat/prompt-input-with-bottom-actions.tsx","webpack://_N_E/./src/components/chatgpt/custom-lisa-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-histogram-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-scatter-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-bubblechart-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-boxplot-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-parallel-coordinate-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-spreg-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-map-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-create-variable-message.tsx","webpack://_N_E/./src/components/chatgpt/custom-messages.tsx","webpack://_N_E/./src/components/chat/message-card.tsx","webpack://_N_E/./src/hooks/use-chatgpt.ts","webpack://_N_E/./src/components/chatgpt/chatgpt-component.tsx","webpack://_N_E/./src/components/common/chart-insight.tsx","webpack://_N_E/./src/components/common/color-selector.tsx","webpack://_N_E/./src/components/common/create-button.tsx","webpack://_N_E/./src/components/common/dataset-selector.tsx","webpack://_N_E/./src/components/common/kepler-map-container.tsx","webpack://_N_E/./src/components/common/right-panel-template.tsx","webpack://_N_E/./src/components/common/splitter.tsx","webpack://_N_E/./src/components/common/variable-selector.tsx","webpack://_N_E/./src/components/common/warning-box.tsx","webpack://_N_E/./src/components/dashboard/text-toobar-plugin.tsx","webpack://_N_E/./src/components/dashboard/text-cell.tsx","webpack://_N_E/./src/components/navigator/geoda-logo.tsx","webpack://_N_E/./src/components/navigator/navitagor-icons.tsx","webpack://_N_E/./src/components/buttons/theme-switch.tsx","webpack://_N_E/./src/components/buttons/dashboard-switch.tsx","webpack://_N_E/./src/components/icons/add.tsx","webpack://_N_E/./src/components/navigator/index.tsx","webpack://_N_E/./src/components/table/table-container.tsx","webpack://_N_E/./src/components/save-project-modal.tsx","webpack://_N_E/./src/components/panel/chat-panel.tsx","webpack://_N_E/./src/components/main-container.tsx","webpack://_N_E/./src/components/icons/upload.tsx","webpack://_N_E/./src/components/open-file-modal.tsx","webpack://_N_E/./src/components/panel/settings-panel.tsx","webpack://_N_E/./src/components/weights/weights-creation.tsx","webpack://_N_E/./src/components/weights/weights-panel.tsx","webpack://_N_E/./src/components/lisa/univariate-lisa-config.tsx","webpack://_N_E/./src/utils/lisa-functions.ts","webpack://_N_E/./src/actions/lisa-actions.ts","webpack://_N_E/./src/components/lisa/local-moran-panel.tsx","webpack://_N_E/./src/components/lisa/local-g-panel.tsx","webpack://_N_E/./src/components/lisa/quantile-lisa-panel.tsx","webpack://_N_E/./src/components/lisa/local-geary-panel.tsx","webpack://_N_E/./src/components/lisa/lisa-panel.tsx","webpack://_N_E/./src/components/plots/histogram-panel.tsx","webpack://_N_E/./src/components/common/multivariable-selector.tsx","webpack://_N_E/./src/components/plots/boxplot-panel.tsx","webpack://_N_E/./src/components/plots/parallel-coordinate-panel.tsx","webpack://_N_E/./src/components/spreg/spreg-panel.tsx","webpack://_N_E/./src/components/plots/scatterplot-panel.tsx","webpack://_N_E/./src/components/plots/bubble-chart-panel.tsx","webpack://_N_E/./src/components/dashboard/dashboard-panel.tsx","webpack://_N_E/./src/components/common/vertical-steps.tsx","webpack://_N_E/./src/components/spatial-operations/spatial-count-panel.tsx","webpack://_N_E/./src/components/spatial-operations/spatial-assign-panel.tsx","webpack://_N_E/./src/components/spatial-operations/spatial-join-panel.tsx","webpack://_N_E/./src/components/panel/panel-container.tsx","webpack://_N_E/./src/components/plots/box-plot.tsx","webpack://_N_E/./src/utils/bubblechart-utils.ts","webpack://_N_E/./src/components/plots/bubble-chart-plot.tsx","webpack://_N_E/./src/components/plots/echarts-updater.tsx","webpack://_N_E/./src/components/plots/histogram-plot.tsx","webpack://_N_E/./src/utils/plots/parallel-coordinate-utils.ts","webpack://_N_E/./src/components/plots/parallel-coordinate-plot.tsx","webpack://_N_E/./src/components/plots/plot-management.tsx","webpack://_N_E/./src/utils/plots/scatterplot-utils.ts","webpack://_N_E/./src/components/plots/scatter-plot.tsx","webpack://_N_E/./src/components/table/duckdb-table.tsx","webpack://_N_E/./src/components/table/preview-data-table.tsx","webpack://_N_E/./src/components/weights/weights-management.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import type {ClassValue} from 'clsx';\n\n// eslint-disable-next-line no-duplicate-imports\nimport clsx from 'clsx';\nimport {extendTailwindMerge} from 'tailwind-merge';\n\nconst COMMON_UNITS = ['small', 'medium', 'large'];\n\n/**\n * We need to extend the tailwind merge to include NextUI's custom classes.\n *\n * So we can use classes like `text-small` or `text-default-500` and override them.\n */\nconst twMerge = extendTailwindMerge({\n  extend: {\n    theme: {\n      opacity: ['disabled'],\n      spacing: ['divider'],\n      borderWidth: COMMON_UNITS,\n      borderRadius: COMMON_UNITS\n    },\n    classGroups: {\n      shadow: [{shadow: COMMON_UNITS}],\n      'font-size': [{text: ['tiny', ...COMMON_UNITS]}],\n      'bg-image': ['bg-stripe-gradient']\n    }\n  }\n});\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","export const ECHARTS_DARK_THEME = {\n  color: [\n    '#dd6b66',\n    '#759aa0',\n    '#e69d87',\n    '#8dc1a9',\n    '#ea7e53',\n    '#eedd78',\n    '#73a373',\n    '#73b9bc',\n    '#7289ab',\n    '#91ca8c',\n    '#f49f42'\n  ],\n  backgroundColor: 'rgba(24,24,27,1)',\n  textStyle: {},\n  title: {\n    textStyle: {\n      color: '#eeeeee'\n    },\n    subtextStyle: {\n      color: '#aaaaaa'\n    }\n  },\n  line: {\n    itemStyle: {\n      borderWidth: 1\n    },\n    lineStyle: {\n      width: 2\n    },\n    symbolSize: 4,\n    symbol: 'circle',\n    smooth: false\n  },\n  radar: {\n    itemStyle: {\n      borderWidth: 1\n    },\n    lineStyle: {\n      width: 2\n    },\n    symbolSize: 4,\n    symbol: 'circle',\n    smooth: false\n  },\n  bar: {\n    itemStyle: {\n      barBorderWidth: 0,\n      barBorderColor: '#ccc'\n    }\n  },\n  pie: {\n    itemStyle: {\n      borderWidth: 0,\n      borderColor: '#ccc'\n    }\n  },\n  scatter: {\n    itemStyle: {\n      borderWidth: 0,\n      borderColor: '#ccc'\n    }\n  },\n  boxplot: {\n    itemStyle: {\n      borderColor: '#ccc',\n      color: '#CCC',\n      opacity: 1\n    }\n  },\n  parallel: {\n    itemStyle: {\n      borderWidth: 0,\n      borderColor: '#ccc'\n    }\n  },\n  sankey: {\n    itemStyle: {\n      borderWidth: 0,\n      borderColor: '#ccc'\n    }\n  },\n  funnel: {\n    itemStyle: {\n      borderWidth: 0,\n      borderColor: '#ccc'\n    }\n  },\n  gauge: {\n    itemStyle: {\n      borderWidth: 0,\n      borderColor: '#ccc'\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      color: '#fd1050',\n      color0: '#0cf49b',\n      borderColor: '#fd1050',\n      borderColor0: '#0cf49b',\n      borderWidth: 1\n    }\n  },\n  graph: {\n    itemStyle: {\n      borderWidth: 0,\n      borderColor: '#ccc'\n    },\n    lineStyle: {\n      width: 1,\n      color: '#aaaaaa'\n    },\n    symbolSize: 4,\n    symbol: 'circle',\n    smooth: false,\n    color: [\n      '#dd6b66',\n      '#759aa0',\n      '#e69d87',\n      '#8dc1a9',\n      '#ea7e53',\n      '#eedd78',\n      '#73a373',\n      '#73b9bc',\n      '#7289ab',\n      '#91ca8c',\n      '#f49f42'\n    ],\n    label: {\n      color: '#eeeeee'\n    }\n  },\n  map: {\n    itemStyle: {\n      areaColor: '#eee',\n      borderColor: '#444',\n      borderWidth: 0.5\n    },\n    label: {\n      color: '#000'\n    },\n    emphasis: {\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)',\n        borderColor: '#444',\n        borderWidth: 1\n      },\n      label: {\n        color: 'rgb(100,0,0)'\n      }\n    }\n  },\n  geo: {\n    itemStyle: {\n      areaColor: '#eee',\n      borderColor: '#444',\n      borderWidth: 0.5\n    },\n    label: {\n      color: '#000'\n    },\n    emphasis: {\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)',\n        borderColor: '#444',\n        borderWidth: 1\n      },\n      label: {\n        color: 'rgb(100,0,0)'\n      }\n    }\n  },\n  categoryAxis: {\n    axisLine: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisTick: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisLabel: {\n      show: true,\n      color: '#eeeeee'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: ['#333']\n      }\n    },\n    splitArea: {\n      show: false,\n      areaStyle: {\n        color: ['#eeeeee']\n      }\n    }\n  },\n  valueAxis: {\n    axisLine: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisTick: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisLabel: {\n      show: true,\n      color: '#eeeeee'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: ['#333']\n      }\n    },\n    splitArea: {\n      show: false,\n      areaStyle: {\n        color: ['#eeeeee']\n      }\n    }\n  },\n  logAxis: {\n    axisLine: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisTick: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisLabel: {\n      show: true,\n      color: '#eeeeee'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: ['#aaaaaa']\n      }\n    },\n    splitArea: {\n      show: false,\n      areaStyle: {\n        color: ['#eeeeee']\n      }\n    }\n  },\n  timeAxis: {\n    axisLine: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisTick: {\n      show: true,\n      lineStyle: {\n        color: '#eeeeee'\n      }\n    },\n    axisLabel: {\n      show: true,\n      color: '#eeeeee'\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: ['#aaaaaa']\n      }\n    },\n    splitArea: {\n      show: false,\n      areaStyle: {\n        color: ['#eeeeee']\n      }\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      borderColor: '#999999'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#666666'\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: '#eeeeee'\n    }\n  },\n  tooltip: {\n    axisPointer: {\n      label: {\n        color: '#333333'\n      },\n      lineStyle: {\n        color: '#cccccc',\n        width: '1'\n      },\n      crossStyle: {\n        color: '#cccccc',\n        width: '1'\n      }\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: '#eeeeee',\n      width: 1\n    },\n    itemStyle: {\n      color: '#dd6b66',\n      borderWidth: 1\n    },\n    controlStyle: {\n      color: '#eeeeee',\n      borderColor: '#eeeeee',\n      borderWidth: 0.5\n    },\n    checkpointStyle: {\n      color: '#e43c59',\n      borderColor: '#c23531'\n    },\n    label: {\n      color: '#eeeeee'\n    },\n    emphasis: {\n      itemStyle: {\n        color: '#a9334c'\n      },\n      controlStyle: {\n        color: '#eeeeee',\n        borderColor: '#eeeeee',\n        borderWidth: 0.5\n      },\n      label: {\n        color: '#eeeeee'\n      }\n    }\n  },\n  visualMap: {\n    color: ['#bf444c', '#d88273', '#f6efa6']\n  },\n  dataZoom: {\n    backgroundColor: 'rgba(47,69,84,0)',\n    dataBackgroundColor: 'rgba(255,255,255,0.3)',\n    fillerColor: 'rgba(167,183,204,0.4)',\n    handleColor: '#a7b7cc',\n    handleSize: '100%',\n    textStyle: {\n      color: '#eeeeee'\n    }\n  },\n  markPoint: {\n    label: {\n      color: '#eeeeee'\n    },\n    emphasis: {\n      label: {\n        color: '#eeeeee'\n      }\n    }\n  }\n};\n","import {\n  Float64 as ArrowFloat,\n  FixedSizeList,\n  Field as ArrowField,\n  List as ArrowList,\n  Vector as ArrowVector,\n  makeBuilder\n} from 'apache-arrow';\nimport {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon,\n  Feature,\n  GeoJsonObject\n} from 'geojson';\n\n/**\n * Arrow Field and geometry vector\n */\nexport type GeoArrowReturnType = {\n  field: ArrowField;\n  geometry: ArrowVector;\n};\n\n// type guard to check if feature is a GeoJSON Feature or Geometry\nexport function isFeature(json: unknown): json is Feature {\n  return Boolean((json as Feature).type === 'Feature');\n}\n\n/**\n * Convert GeoJson Features to GeoArrow\n * @param name\n * @param features\n * @returns GeoArrowReturnType\n */\nexport function geojsonFeaturesToArrow(\n  name: string,\n  features: Array<Feature | GeoJsonObject>\n): GeoArrowReturnType {\n  // get the geometry type by iterating all features\n  // if one geometry is multi-, then the whole geometry is multi-\n  let geometryType = '';\n  for (let i = 0; i < features.length; i++) {\n    const feature = features[i];\n    const geometry = isFeature(feature) ? feature.geometry : feature;\n    if (i === 0) {\n      geometryType = geometry.type;\n    }\n    if (geometry.type.includes('Multi')) {\n      geometryType = geometry.type;\n      break;\n    }\n  }\n  if (geometryType === 'Point') {\n    return geojsonPointToArrow(name, features);\n  } else if (geometryType === 'MultiPoint') {\n    return geojsonMultiPointToArrow(name, features);\n  } else if (geometryType === 'LineString') {\n    return geojsonLineStringToArrow(name, features);\n  } else if (geometryType === 'MultiLineString') {\n    return geojsonMultiLineStringToArrow(name, features);\n  } else if (geometryType === 'Polygon') {\n    return geojsonPolygonToArrow(name, features);\n  } else if (geometryType === 'MultiPolygon') {\n    return geojsonMultiPolygonToArrow(name, features);\n  }\n  throw new Error('Unsupported geometry type');\n}\n\n/**\n * convert GeoJSON Point to geoarrow\n * @param name geometry field name\n * @param points GeoJSON Points\n * @returns GeoArrowReturnType\n */\nexport function geojsonPointToArrow(\n  name: string,\n  points: Array<Feature | GeoJsonObject>\n): GeoArrowReturnType {\n  const firstPoint = isFeature(points[0]) ? points[0].geometry : points[0];\n  // get dimension from the first point\n  const dimension = (firstPoint as Point).coordinates.length;\n  const pointFieldName = dimension === 2 ? 'xy' : 'xyz';\n\n  // get point type\n  const nullable = false;\n  const coordType = new ArrowFloat();\n  const pointType = new FixedSizeList(\n    dimension,\n    new ArrowField(pointFieldName, coordType, nullable)\n  );\n\n  // create a field\n  const metaData: Map<string, string> = new Map([['ARROW:extension:name', 'geoarrow.point']]);\n  const field = new ArrowField(name, pointType, nullable, metaData);\n\n  // make geoarrow builder\n  const builder = makeBuilder({\n    type: pointType,\n    nullValues: [null]\n  });\n\n  // fill builder with coordinates\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i];\n    const geometry = isFeature(point) ? point.geometry : point;\n    const coords = (geometry as Point).coordinates;\n    // @ts-ignore\n    builder.append(coords);\n  }\n\n  // build geometry vector\n  const geometry = builder.finish().toVector();\n\n  return {\n    field,\n    geometry\n  };\n}\n\n/**\n * convert GeoJSON Point to arrow.Vector\n */\nexport function geojsonMultiPointToArrow(\n  name: string,\n  points: Array<Feature | GeoJsonObject>\n): GeoArrowReturnType {\n  const firstPoint = isFeature(points[0]) ? points[0].geometry : points[0];\n  // get dimension from the first multipoint\n  const dimension = (firstPoint as MultiPoint).coordinates[0].length;\n  const pointFieldName = dimension === 2 ? 'xy' : 'xyz';\n\n  // get multipoint type\n  const nullable = false;\n  const coordType = new ArrowFloat();\n  const pointType = new FixedSizeList(\n    dimension,\n    new ArrowField(pointFieldName, coordType, nullable)\n  );\n\n  const multiPointType = new ArrowList(new ArrowField('points', pointType, nullable));\n\n  // create a field\n  const metaData: Map<string, string> = new Map([['ARROW:extension:name', 'geoarrow.multipoint']]);\n  const field = new ArrowField(name, multiPointType, nullable, metaData);\n\n  // make geoarrow builder\n  const builder = makeBuilder({\n    type: multiPointType,\n    nullValues: [null]\n  });\n\n  // const pointBuilder = builder.getChildAt(0);\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i];\n    const geometry = isFeature(point) ? point.geometry : point;\n    const coords = (geometry as MultiPoint).coordinates;\n    // @ts-ignore\n    builder.append(coords);\n  }\n\n  const geometry = builder.finish().toVector();\n\n  return {\n    field,\n    geometry\n  };\n}\n\n/**\n * Convert GeoJSON LineString to arrow.Data\n */\nexport function geojsonLineStringToArrow(\n  name: string,\n  lines: Array<Feature | GeoJsonObject>\n): GeoArrowReturnType {\n  const firstLine = isFeature(lines[0]) ? lines[0].geometry : lines[0];\n  // get dimension from the first line\n  const dimension = (firstLine as LineString).coordinates[0].length;\n  const pointFieldName = dimension === 2 ? 'xy' : 'xyz';\n\n  // get line type\n  const nullable = false;\n  const coordType = new ArrowFloat();\n  const pointType = new FixedSizeList(\n    dimension,\n    new ArrowField(pointFieldName, coordType, nullable)\n  );\n  const lineType = new ArrowList(new ArrowField('points', pointType, nullable));\n\n  // create a field\n  const metaData: Map<string, string> = new Map([['ARROW:extension:name', 'geoarrow.linestring']]);\n  const field = new ArrowField(name, lineType, nullable, metaData);\n\n  // make geoarrow builder\n  const builder = makeBuilder({\n    type: lineType,\n    nullValues: [null]\n  });\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const geometry = isFeature(line) ? line.geometry : line;\n    const coords = (geometry as LineString).coordinates;\n    // @ts-ignore\n    builder.append(coords);\n  }\n\n  const geometry = builder.finish().toVector();\n\n  return {\n    field,\n    geometry\n  };\n}\n\n/**\n * Convert GeoJSON MultiLineString to arrow.Vector\n */\nexport function geojsonMultiLineStringToArrow(\n  name: string,\n  lines: Array<Feature | GeoJsonObject>\n): GeoArrowReturnType {\n  const firstLine = isFeature(lines[0]) ? lines[0].geometry : lines[0];\n  // get dimension from the first line\n  const dimension = (firstLine as MultiLineString).coordinates[0].length;\n  const pointFieldName = dimension === 2 ? 'xy' : 'xyz';\n\n  // get multi-line data type\n  const nullable = false;\n  const coordType = new ArrowFloat();\n  const pointType = new FixedSizeList(\n    dimension,\n    new ArrowField(pointFieldName, coordType, nullable)\n  );\n  const lineType = new ArrowList(new ArrowField('points', pointType, nullable));\n  const multiLineType = new ArrowList(new ArrowField('lines', lineType, nullable));\n\n  // create a field\n  const metaData: Map<string, string> = new Map([\n    ['ARROW:extension:name', 'geoarrow.multilinestring']\n  ]);\n  const field = new ArrowField(name, multiLineType, nullable, metaData);\n\n  // make geoarrow builder\n  const builder = makeBuilder({\n    type: multiLineType,\n    nullValues: [null]\n  });\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const geometry = isFeature(line) ? line.geometry : line;\n    const coords = (geometry as MultiLineString).coordinates;\n    // @ts-ignore\n    builder.append(coords);\n  }\n\n  const geometry = builder.finish().toVector();\n\n  return {\n    field,\n    geometry\n  };\n}\n\n/**\n * Convert GeoJSON Polygon to arrow.Data\n */\nexport function geojsonPolygonToArrow(\n  name: string,\n  polygons: Array<Feature | GeoJsonObject>\n): GeoArrowReturnType {\n  const firstPolygon = isFeature(polygons[0]) ? polygons[0].geometry : polygons[0];\n  // get dimension from the first polygon\n  const dimension = (firstPolygon as Polygon).coordinates[0][0].length;\n  const pointFieldName = dimension === 2 ? 'xy' : 'xyz';\n\n  // get polygon data type\n  const nullable = false;\n  const coordType = new ArrowFloat();\n  const pointType = new FixedSizeList(\n    dimension,\n    new ArrowField(pointFieldName, coordType, nullable)\n  );\n  const ringType = new ArrowList(new ArrowField('points', pointType, nullable));\n  const polygonType = new ArrowList(new ArrowField('rings', ringType, nullable));\n\n  // create a field\n  const metaData = new Map<string, string>([['ARROW:extension:name', 'geoarrow.polygon']]);\n  const field = new ArrowField(name, polygonType, nullable, metaData);\n\n  // make geoarrow builder\n  const builder = makeBuilder({\n    type: polygonType,\n    nullValues: [null]\n  });\n\n  for (let i = 0; i < polygons.length; i++) {\n    const poly = polygons[i];\n    const geometry = isFeature(poly) ? poly.geometry : poly;\n    const coords = (geometry as Polygon).coordinates;\n    // @ts-ignore\n    builder.append(coords);\n  }\n\n  const geometry = builder.finish().toVector();\n\n  return {\n    field,\n    geometry\n  };\n}\n\n// type guard to check if a Geometry is Polygon or MultiPolygon\nexport function isPolygon(geometry: GeoJsonObject): geometry is Polygon | MultiPolygon {\n  return geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n}\n\n/**\n * Convert GeoJSON MultiPolygon to arrow.Vector\n */\nexport function geojsonMultiPolygonToArrow(\n  name: string,\n  polygons: Array<Feature | GeoJsonObject>\n): GeoArrowReturnType {\n  const firstPolygon = isFeature(polygons[0]) ? polygons[0].geometry : polygons[0];\n  // get dimension from the first polygon\n  const dimension =\n    (firstPolygon as MultiPolygon).coordinates[0][0][0].length ||\n    (firstPolygon as Polygon).coordinates[0][0].length;\n  const pointFieldName = dimension === 2 ? 'xy' : 'xyz';\n\n  // get polygon data type\n  const nullable = false;\n  const coordType = new ArrowFloat();\n  const pointType = new FixedSizeList(\n    dimension,\n    new ArrowField(pointFieldName, coordType, nullable)\n  );\n  const ringType = new ArrowList(new ArrowField('points', pointType, nullable));\n  const polygonType = new ArrowList(new ArrowField('rings', ringType, nullable));\n  const multiPolygonType = new ArrowList(new ArrowField('polygons', polygonType, nullable));\n\n  // create a field\n  const metaData = new Map<string, string>([['ARROW:extension:name', 'geoarrow.multipolygon']]);\n  const field = new ArrowField(name, multiPolygonType, nullable, metaData);\n\n  // make geoarrow builder\n  const builder = makeBuilder({\n    type: multiPolygonType,\n    nullValues: [null]\n  });\n\n  for (let i = 0; i < polygons.length; i++) {\n    const poly = polygons[i];\n    const geometry = isFeature(poly) ? poly.geometry : poly;\n    const coords =\n      geometry.type === 'MultiPolygon'\n        ? (geometry as MultiPolygon).coordinates\n        : [(geometry as Polygon).coordinates];\n    // @ts-ignore\n    builder.append(coords);\n  }\n\n  const geometry = builder.finish().toVector();\n\n  return {\n    field,\n    geometry\n  };\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ReadableFile} from './file';\n\n/**\n * BlobFile provides a \"file like interface\" to the data in a Blob or File object\n */\nexport class BlobFile implements ReadableFile {\n  readonly handle: Blob;\n  readonly size: number;\n  readonly bigsize: bigint;\n  readonly url: string;\n\n  constructor(blob: Blob | File | ArrayBuffer) {\n    this.handle = blob instanceof ArrayBuffer ? new Blob([blob]) : blob;\n    this.size = blob instanceof ArrayBuffer ? blob.byteLength : blob.size;\n    this.bigsize = BigInt(this.size);\n    this.url = blob instanceof File ? blob.name : '';\n  }\n\n  async close() {}\n\n  async stat() {\n    return {\n      size: this.handle.size,\n      bigsize: BigInt(this.handle.size),\n      isDirectory: false\n    };\n  }\n\n  async read(start: number, length: number): Promise<ArrayBuffer> {\n    const arrayBuffer = await this.handle.slice(start, start + length).arrayBuffer();\n    return arrayBuffer;\n  }\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {FileSystem, ReadableFile} from '@loaders.gl/loader-utils';\nimport {BlobFile} from '@loaders.gl/loader-utils';\n\ntype BrowserFileSystemOptions = {\n  fetch?: typeof fetch;\n};\n\n/**\n * FileSystem adapter for a browser FileList.\n * Holds a list of browser 'File' objects.\n */\nexport class BrowserFileSystem implements FileSystem {\n  private _fetch: typeof fetch;\n  private files: {[filename: string]: File} = {};\n  private lowerCaseFiles: {[filename: string]: File} = {};\n  private usedFiles: {[filename: string]: boolean} = {};\n\n  /**\n   * A FileSystem API wrapper around a list of browser 'File' objects\n   * @param files\n   * @param options\n   */\n  constructor(files: FileList | File[], options?: BrowserFileSystemOptions) {\n    this._fetch = options?.fetch || fetch;\n\n    for (let i = 0; i < files.length; ++i) {\n      const file = files[i];\n      this.files[file.name] = file;\n      this.lowerCaseFiles[file.name.toLowerCase()] = file;\n      this.usedFiles[file.name] = false;\n    }\n\n    this.fetch = this.fetch.bind(this);\n  }\n\n  // implements IFileSystem\n\n  /**\n   * Implementation of fetch against this file system\n   * Delegates to global fetch for http{s}:// or data://\n   */\n  async fetch(path: string, options?: RequestInit): Promise<Response> {\n    // Fallback to handle https:/http:/data: etc fetches\n    if (path.includes('://')) {\n      return this._fetch(path, options);\n    }\n\n    // Local fetches are served from the list of files\n    const file = this.files[path];\n    if (!file) {\n      return new Response(path, {status: 400, statusText: 'NOT FOUND'});\n    }\n\n    const headers = new Headers(options?.headers);\n    const range = headers.get('Range');\n    const bytes = range && /bytes=($1)-($2)/.exec(range);\n\n    if (bytes) {\n      const start = parseInt(bytes[1]);\n      const end = parseInt(bytes[2]);\n      // The trick when reading File objects is to read successive \"slices\" of the File\n      // Per spec https://w3c.github.io/FileAPI/, slicing a File should only update the start and end fields\n      // Actually reading from file should happen in `readAsArrayBuffer` (and as far we can tell it does)\n      const data = await file.slice(start, end).arrayBuffer();\n      const response = new Response(data);\n      Object.defineProperty(response, 'url', {value: path});\n      return response;\n    }\n\n    // return makeResponse()\n    const response = new Response(file);\n    Object.defineProperty(response, 'url', {value: path});\n    return response;\n  }\n\n  /**\n   * List filenames in this filesystem\n   * @param dirname\n   * @returns\n   */\n  async readdir(dirname?: string): Promise<string[]> {\n    const files: string[] = [];\n    for (const path in this.files) {\n      files.push(path);\n    }\n    // TODO filter by dirname\n    return files;\n  }\n\n  /**\n   * Return information (size) about files in this file system\n   */\n  async stat(path: string, options?: object): Promise<{size: number}> {\n    const file = this.files[path];\n    if (!file) {\n      throw new Error(path);\n    }\n    return {size: file.size};\n  }\n\n  /**\n   * Just removes the file from the list\n   */\n  async unlink(path: string): Promise<void> {\n    delete this.files[path];\n    delete this.lowerCaseFiles[path];\n    this.usedFiles[path] = true;\n  }\n\n  // implements IRandomAccessFileSystem\n\n  // RANDOM ACCESS\n  async openReadableFile(pathname: string, flags: unknown): Promise<ReadableFile> {\n    return new BlobFile(this.files[pathname]);\n  }\n\n  // PRIVATE\n\n  // Supports case independent paths, and file usage tracking\n  _getFile(path: string, used: boolean): File {\n    // Prefer case match, but fall back to case independent.\n    const file = this.files[path] || this.lowerCaseFiles[path];\n    if (file && used) {\n      this.usedFiles[path] = true;\n    }\n    return file;\n  }\n}\n/*\n   * Read a range into a buffer\n   * @todo - handle position memory\n   * @param buffer is the buffer that the data (read from the fd) will be written to.\n   * @param offset is the offset in the buffer to start writing at.\n   * @param length is an integer specifying the number of bytes to read.\n   * @param position is an argument specifying where to begin reading from in the file. If position is null, data will be read from the current file position, and the file position will be updated. If position is an integer, the file position will remain unchanged.\n   *\n  async read(\n    fd: any,\n    buffer: ArrayBuffer,\n    offset: number = 0,\n    length: number = buffer.byteLength,\n    position: number | null = null\n  ): Promise<{bytesRead: number; buffer: ArrayBuffer}> {\n    const file = fd as File;\n    const startPosition = 0; // position\n    const arrayBuffer = await file.slice(startPosition, startPosition + length).arrayBuffer();\n    // copy into target buffer\n    return {bytesRead: length, buffer: arrayBuffer};\n  }\n\n  async close(fd: number): Promise<void> {\n    // NO OP\n  }\n\n  // fstat(fd: number): Promise<object>; // Stat\n  */\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport type BinaryChunkReaderOptions = {\n  maxRewindBytes: number;\n};\n\nexport class BinaryChunkReader {\n  offset: number;\n  arrayBuffers: ArrayBuffer[];\n  ended: boolean;\n  maxRewindBytes: number;\n\n  constructor(options?: BinaryChunkReaderOptions) {\n    const {maxRewindBytes = 0} = options || {};\n\n    /** current global offset into current array buffer*/\n    this.offset = 0;\n    /** current buffer from iterator */\n    this.arrayBuffers = [];\n    this.ended = false;\n\n    /** bytes behind offset to hold on to */\n    this.maxRewindBytes = maxRewindBytes;\n  }\n  /**\n   * @param arrayBuffer\n   */\n  write(arrayBuffer: ArrayBuffer): void {\n    this.arrayBuffers.push(arrayBuffer);\n  }\n\n  end(): void {\n    this.arrayBuffers = [];\n    this.ended = true;\n  }\n\n  /**\n   * Has enough bytes available in array buffers\n   *\n   * @param bytes Number of bytes\n   * @return boolean\n   */\n  hasAvailableBytes(bytes: number): boolean {\n    let bytesAvailable = -this.offset;\n    for (const arrayBuffer of this.arrayBuffers) {\n      bytesAvailable += arrayBuffer.byteLength;\n      if (bytesAvailable >= bytes) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Find offsets of byte ranges within this.arrayBuffers\n   *\n   * @param  bytes Byte length to read\n   * @return Arrays with byte ranges pointing to this.arrayBuffers, Output type is nested array, e.g. [ [0, [1, 2]], ...]\n   */\n  findBufferOffsets(bytes: number): any[] | null {\n    let offset = -this.offset;\n    const selectedBuffers: any = [];\n\n    for (let i = 0; i < this.arrayBuffers.length; i++) {\n      const buf = this.arrayBuffers[i];\n\n      // Current buffer isn't long enough to reach global offset\n      if (offset + buf.byteLength <= 0) {\n        offset += buf.byteLength;\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      // Find start/end offsets for this buffer\n      // When offset < 0, need to skip over Math.abs(offset) bytes\n      // When offset > 0, implies bytes in previous buffer, start at 0\n      const start = offset <= 0 ? Math.abs(offset) : 0;\n      let end: number;\n\n      // Length of requested bytes is contained in current buffer\n      if (start + bytes <= buf.byteLength) {\n        end = start + bytes;\n        selectedBuffers.push([i, [start, end]]);\n        return selectedBuffers;\n      }\n\n      // Will need to look into next buffer\n      end = buf.byteLength;\n      selectedBuffers.push([i, [start, end]]);\n\n      // Need to read fewer bytes in next iter\n      bytes -= buf.byteLength - start;\n      offset += buf.byteLength;\n    }\n\n    // Should only finish loop if exhausted all arrays\n    return null;\n  }\n\n  /**\n   * Get the required number of bytes from the iterator\n   *\n   * @param bytes Number of bytes\n   * @return DataView with data\n   */\n  getDataView(bytes: number): DataView | null {\n    const bufferOffsets = this.findBufferOffsets(bytes);\n    // return `null` if not enough data, except if end() already called, in\n    // which case throw an error.\n    if (!bufferOffsets && this.ended) {\n      throw new Error('binary data exhausted');\n    }\n\n    if (!bufferOffsets) {\n      return null;\n    }\n\n    // If only one arrayBuffer needed, return DataView directly\n    if (bufferOffsets.length === 1) {\n      const [bufferIndex, [start, end]] = bufferOffsets[0];\n      const arrayBuffer = this.arrayBuffers[bufferIndex];\n      const view = new DataView(arrayBuffer, start, end - start);\n\n      this.offset += bytes;\n      this.disposeBuffers();\n      return view;\n    }\n\n    // Concatenate portions of multiple ArrayBuffers\n    const view = new DataView(this._combineArrayBuffers(bufferOffsets));\n    this.offset += bytes;\n    this.disposeBuffers();\n    return view;\n  }\n\n  /**\n   * Dispose of old array buffers\n   */\n  disposeBuffers(): void {\n    while (\n      this.arrayBuffers.length > 0 &&\n      this.offset - this.maxRewindBytes >= this.arrayBuffers[0].byteLength\n    ) {\n      this.offset -= this.arrayBuffers[0].byteLength;\n      this.arrayBuffers.shift();\n    }\n  }\n\n  /**\n   * Copy multiple ArrayBuffers into one contiguous ArrayBuffer\n   *\n   * In contrast to concatenateArrayBuffers, this only copies the necessary\n   * portions of the source arrays, rather than first copying the entire arrays\n   * then taking a part of them.\n   *\n   * @param bufferOffsets List of internal array offsets\n   * @return New contiguous ArrayBuffer\n   */\n  _combineArrayBuffers(bufferOffsets: any[]): ArrayBufferLike {\n    let byteLength: number = 0;\n    for (const bufferOffset of bufferOffsets) {\n      const [start, end] = bufferOffset[1];\n      byteLength += end - start;\n    }\n\n    const result = new Uint8Array(byteLength);\n\n    // Copy the subarrays\n    let resultOffset: number = 0;\n    for (const bufferOffset of bufferOffsets) {\n      const [bufferIndex, [start, end]] = bufferOffset;\n      const sourceArray = new Uint8Array(this.arrayBuffers[bufferIndex]);\n      result.set(sourceArray.subarray(start, end), resultOffset);\n      resultOffset += end - start;\n    }\n\n    return result.buffer;\n  }\n  /**\n   * @param bytes\n   */\n  skip(bytes: number): void {\n    this.offset += bytes;\n  }\n  /**\n   * @param bytes\n   */\n  rewind(bytes: number): void {\n    // TODO - only works if offset is already set\n    this.offset -= bytes;\n  }\n}\n","export interface SHPHeader {\n  /** SHP Magic number */\n  magic: number;\n\n  /** Number of bytes in file */\n  length: number;\n  version: number;\n  type: number;\n  bbox: {\n    minX: number;\n    minY: number;\n    minZ: number;\n    minM: number;\n    maxX: number;\n    maxY: number;\n    maxZ: number;\n    maxM: number;\n  };\n}\n\nconst LITTLE_ENDIAN = true;\nconst BIG_ENDIAN = false;\nconst SHP_MAGIC_NUMBER = 0x0000270a;\n\n/**\n * Extract the binary header\n * Note: Also used by SHX\n * @param headerView\n * @returns SHPHeader\n */\nexport function parseSHPHeader(headerView: DataView): SHPHeader {\n  // Note: The SHP format switches endianness between fields!\n  // https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf\n  const header = {\n    magic: headerView.getInt32(0, BIG_ENDIAN),\n    // Length is stored as # of 2-byte words; multiply by 2 to get # of bytes\n    length: headerView.getInt32(24, BIG_ENDIAN) * 2,\n    version: headerView.getInt32(28, LITTLE_ENDIAN),\n    type: headerView.getInt32(32, LITTLE_ENDIAN),\n    bbox: {\n      minX: headerView.getFloat64(36, LITTLE_ENDIAN),\n      minY: headerView.getFloat64(44, LITTLE_ENDIAN),\n      minZ: headerView.getFloat64(68, LITTLE_ENDIAN),\n      minM: headerView.getFloat64(84, LITTLE_ENDIAN),\n      maxX: headerView.getFloat64(52, LITTLE_ENDIAN),\n      maxY: headerView.getFloat64(60, LITTLE_ENDIAN),\n      maxZ: headerView.getFloat64(76, LITTLE_ENDIAN),\n      maxM: headerView.getFloat64(92, LITTLE_ENDIAN)\n    }\n  };\n  if (header.magic !== SHP_MAGIC_NUMBER) {\n    // eslint-disable-next-line\n    console.error(`SHP file: bad magic number ${header.magic}`);\n  }\n  if (header.version !== 1000) {\n    // eslint-disable-next-line\n    console.error(`SHP file: bad version ${header.version}`);\n  }\n  return header;\n}\n","import {BinaryGeometry, BinaryGeometryType} from '@loaders.gl/schema';\nimport {SHPLoaderOptions} from './types';\n\nconst LITTLE_ENDIAN = true;\n\n/**\n * Parse individual record\n *\n * @param view Record data\n * @return Binary Geometry Object\n */\n// eslint-disable-next-line complexity\nexport function parseRecord(view: DataView, options?: SHPLoaderOptions): BinaryGeometry | null {\n  const {_maxDimensions = 4} = options?.shp || {};\n\n  let offset = 0;\n  const type: number = view.getInt32(offset, LITTLE_ENDIAN);\n  offset += Int32Array.BYTES_PER_ELEMENT;\n\n  switch (type) {\n    case 0:\n      // Null Shape\n      return parseNull();\n    case 1:\n      // Point\n      return parsePoint(view, offset, Math.min(2, _maxDimensions));\n    case 3:\n      // PolyLine\n      return parsePoly(view, offset, Math.min(2, _maxDimensions), 'LineString');\n    case 5:\n      // Polygon\n      return parsePoly(view, offset, Math.min(2, _maxDimensions), 'Polygon');\n    case 8:\n      // MultiPoint\n      return parseMultiPoint(view, offset, Math.min(2, _maxDimensions));\n    // GeometryZ can have 3 or 4 dimensions, since the M is not required to\n    // exist\n    case 11:\n      // PointZ\n      return parsePoint(view, offset, Math.min(4, _maxDimensions));\n    case 13:\n      // PolyLineZ\n      return parsePoly(view, offset, Math.min(4, _maxDimensions), 'LineString');\n    case 15:\n      // PolygonZ\n      return parsePoly(view, offset, Math.min(4, _maxDimensions), 'Polygon');\n    case 18:\n      // MultiPointZ\n      return parseMultiPoint(view, offset, Math.min(4, _maxDimensions));\n    case 21:\n      // PointM\n      return parsePoint(view, offset, Math.min(3, _maxDimensions));\n    case 23:\n      // PolyLineM\n      return parsePoly(view, offset, Math.min(3, _maxDimensions), 'LineString');\n    case 25:\n      // PolygonM\n      return parsePoly(view, offset, Math.min(3, _maxDimensions), 'Polygon');\n    case 28:\n      // MultiPointM\n      return parseMultiPoint(view, offset, Math.min(3, _maxDimensions));\n    default:\n      throw new Error(`unsupported shape type: ${type}`);\n  }\n}\n\n// TODO handle null\n/**\n * Parse Null geometry\n *\n * @return null\n */\nfunction parseNull(): null {\n  return null;\n}\n\n/**\n * Parse point geometry\n *\n * @param view Geometry data\n * @param offset Offset in view\n * @param dim Dimension size\n */\nfunction parsePoint(view: DataView, offset: number, dim: number): BinaryGeometry {\n  let positions: Float64Array;\n  [positions, offset] = parsePositions(view, offset, 1, dim);\n\n  return {\n    positions: {value: positions, size: dim},\n    type: 'Point'\n  };\n}\n\n/**\n * Parse MultiPoint geometry\n *\n * @param view Geometry data\n * @param offset Offset in view\n * @param dim Input dimension\n * @return Binary geometry object\n */\nfunction parseMultiPoint(view: DataView, offset: number, dim: number): BinaryGeometry {\n  // skip parsing box\n  offset += 4 * Float64Array.BYTES_PER_ELEMENT;\n\n  const nPoints = view.getInt32(offset, LITTLE_ENDIAN);\n  offset += Int32Array.BYTES_PER_ELEMENT;\n\n  let xyPositions: Float64Array | null = null;\n  let mPositions: Float64Array | null = null;\n  let zPositions: Float64Array | null = null;\n  [xyPositions, offset] = parsePositions(view, offset, nPoints, 2);\n\n  // Parse Z coordinates\n  if (dim === 4) {\n    // skip parsing range\n    offset += 2 * Float64Array.BYTES_PER_ELEMENT;\n    [zPositions, offset] = parsePositions(view, offset, nPoints, 1);\n  }\n\n  // Parse M coordinates\n  if (dim >= 3) {\n    // skip parsing range\n    offset += 2 * Float64Array.BYTES_PER_ELEMENT;\n    [mPositions, offset] = parsePositions(view, offset, nPoints, 1);\n  }\n\n  const positions = concatPositions(xyPositions, mPositions, zPositions);\n\n  return {\n    positions: {value: positions, size: dim},\n    type: 'Point'\n  };\n}\n\n/**\n * Polygon and PolyLine parsing\n *\n * @param view Geometry data\n * @param offset Offset in view\n * @param dim Input dimension\n * @param type Either 'Polygon' or 'Polyline'\n * @return Binary geometry object\n */\n// eslint-disable-next-line max-statements\nfunction parsePoly(\n  view: DataView,\n  offset: number,\n  dim: number,\n  type: BinaryGeometryType\n): BinaryGeometry {\n  // skip parsing bounding box\n  offset += 4 * Float64Array.BYTES_PER_ELEMENT;\n\n  const nParts = view.getInt32(offset, LITTLE_ENDIAN);\n  offset += Int32Array.BYTES_PER_ELEMENT;\n  const nPoints = view.getInt32(offset, LITTLE_ENDIAN);\n  offset += Int32Array.BYTES_PER_ELEMENT;\n\n  // Create longer indices array by 1 because output format is expected to\n  // include the last index as the total number of positions\n  const bufferOffset = view.byteOffset + offset;\n  const bufferLength = nParts * Int32Array.BYTES_PER_ELEMENT;\n  const ringIndices = new Int32Array(nParts + 1);\n  ringIndices.set(new Int32Array(view.buffer.slice(bufferOffset, bufferOffset + bufferLength)));\n  ringIndices[nParts] = nPoints;\n  offset += nParts * Int32Array.BYTES_PER_ELEMENT;\n\n  let xyPositions: Float64Array | null = null;\n  let mPositions: Float64Array | null = null;\n  let zPositions: Float64Array | null = null;\n  [xyPositions, offset] = parsePositions(view, offset, nPoints, 2);\n\n  // Parse Z coordinates\n  if (dim === 4) {\n    // skip parsing range\n    offset += 2 * Float64Array.BYTES_PER_ELEMENT;\n    [zPositions, offset] = parsePositions(view, offset, nPoints, 1);\n  }\n\n  // Parse M coordinates\n  if (dim >= 3) {\n    // skip parsing range\n    offset += 2 * Float64Array.BYTES_PER_ELEMENT;\n    [mPositions, offset] = parsePositions(view, offset, nPoints, 1);\n  }\n\n  const positions = concatPositions(xyPositions, mPositions, zPositions);\n\n  // parsePoly only accepts type = LineString or Polygon\n  if (type === 'LineString') {\n    return {\n      type,\n      positions: {value: positions, size: dim},\n      pathIndices: {value: ringIndices, size: 1}\n    };\n  }\n\n  // for every ring, determine sign of polygon\n  // Use only 2D positions for ring calc\n  const polygonIndices: number[] = [];\n  for (let i = 1; i < ringIndices.length; i++) {\n    const startRingIndex = ringIndices[i - 1];\n    const endRingIndex = ringIndices[i];\n    // @ts-ignore\n    const ring = xyPositions.subarray(startRingIndex * 2, endRingIndex * 2);\n    const sign = getWindingDirection(ring);\n\n    // A positive sign implies clockwise\n    // A clockwise ring is a filled ring\n    if (sign > 0) {\n      polygonIndices.push(startRingIndex);\n    }\n  }\n\n  polygonIndices.push(nPoints);\n\n  return {\n    type,\n    positions: {value: positions, size: dim},\n    primitivePolygonIndices: {value: ringIndices, size: 1},\n    // TODO: Dynamically choose Uint32Array over Uint16Array only when\n    // necessary. I believe the implementation requires nPoints to be the\n    // largest value in the array, so you should be able to use Uint32Array only\n    // when nPoints > 65535.\n    polygonIndices: {value: new Uint32Array(polygonIndices), size: 1}\n  };\n}\n\n/**\n * Parse a contiguous block of positions into a Float64Array\n *\n * @param view  Geometry data\n * @param offset  Offset in view\n * @param nPoints Number of points\n * @param dim     Input dimension\n * @return Data and offset\n */\nfunction parsePositions(\n  view: DataView,\n  offset: number,\n  nPoints: number,\n  dim: number\n): [Float64Array, number] {\n  const bufferOffset = view.byteOffset + offset;\n  const bufferLength = nPoints * dim * Float64Array.BYTES_PER_ELEMENT;\n  return [\n    new Float64Array(view.buffer.slice(bufferOffset, bufferOffset + bufferLength)),\n    offset + bufferLength\n  ];\n}\n\n/**\n * Concatenate and interleave positions arrays\n * xy positions are interleaved; mPositions, zPositions are their own arrays\n *\n * @param xyPositions 2d positions\n * @param mPositions  M positions\n * @param zPositions  Z positions\n * @return Combined interleaved positions\n */\n// eslint-disable-next-line complexity\nfunction concatPositions(\n  xyPositions: Float64Array,\n  mPositions: Float64Array | null,\n  zPositions: Float64Array | null\n): Float64Array {\n  if (!(mPositions || zPositions)) {\n    return xyPositions;\n  }\n\n  let arrayLength = xyPositions.length;\n  let nDim = 2;\n\n  if (zPositions && zPositions.length) {\n    arrayLength += zPositions.length;\n    nDim++;\n  }\n\n  if (mPositions && mPositions.length) {\n    arrayLength += mPositions.length;\n    nDim++;\n  }\n\n  const positions = new Float64Array(arrayLength);\n  for (let i = 0; i < xyPositions.length / 2; i++) {\n    positions[nDim * i] = xyPositions[i * 2];\n    positions[nDim * i + 1] = xyPositions[i * 2 + 1];\n  }\n\n  if (zPositions && zPositions.length) {\n    for (let i = 0; i < zPositions.length; i++) {\n      // If Z coordinates exist; used as third coord in positions array\n      positions[nDim * i + 2] = zPositions[i];\n    }\n  }\n\n  if (mPositions && mPositions.length) {\n    for (let i = 0; i < mPositions.length; i++) {\n      // M is always last, either 3rd or 4th depending on if Z exists\n      positions[nDim * i + (nDim - 1)] = mPositions[i];\n    }\n  }\n\n  return positions;\n}\n\n/**\n * Returns the direction of the polygon path\n * A positive number is clockwise.\n * A negative number is counter clockwise.\n *\n * @param positions\n * @return Sign of polygon ring\n */\nfunction getWindingDirection(positions: Float64Array): number {\n  return Math.sign(getSignedArea(positions));\n}\n\n/**\n * Get signed area of flat typed array of 2d positions\n *\n * @param positions\n * @return Signed area of polygon ring\n */\nfunction getSignedArea(positions: Float64Array): number {\n  let area = 0;\n\n  // Rings are closed according to shapefile spec\n  const nCoords = positions.length / 2 - 1;\n  for (let i = 0; i < nCoords; i++) {\n    area +=\n      (positions[i * 2] + positions[(i + 1) * 2]) *\n      (positions[i * 2 + 1] - positions[(i + 1) * 2 + 1]);\n  }\n\n  return area / 2;\n}\n","import type {BinaryGeometry} from '@loaders.gl/schema';\nimport {BinaryChunkReader} from '../streaming/binary-chunk-reader';\nimport {parseSHPHeader, SHPHeader} from './parse-shp-header';\nimport {parseRecord} from './parse-shp-geometry';\nimport {SHPLoaderOptions} from './types';\n\nconst LITTLE_ENDIAN = true;\nconst BIG_ENDIAN = false;\n\nconst SHP_HEADER_SIZE = 100;\n// According to the spec, the record header is just 8 bytes, but here we set it\n// to 12 so that we can also access the record's type\nconst SHP_RECORD_HEADER_SIZE = 12;\n\nconst STATE = {\n  EXPECTING_HEADER: 0,\n  EXPECTING_RECORD: 1,\n  END: 2,\n  ERROR: 3\n};\n\ntype SHPResult = {\n  geometries: (BinaryGeometry | null)[];\n  header?: SHPHeader;\n  error?: string;\n  progress: {\n    bytesUsed: number;\n    bytesTotal: number;\n    rows: number;\n  };\n  currentIndex: number;\n};\n\nclass SHPParser {\n  options?: SHPLoaderOptions = {};\n  binaryReader = new BinaryChunkReader({maxRewindBytes: SHP_RECORD_HEADER_SIZE});\n  state = STATE.EXPECTING_HEADER;\n  result: SHPResult = {\n    geometries: [],\n    // Initialize with number values to make TS happy\n    // These are initialized for real in STATE.EXPECTING_HEADER\n    progress: {\n      bytesTotal: NaN,\n      bytesUsed: NaN,\n      rows: NaN\n    },\n    currentIndex: NaN\n  };\n\n  constructor(options?: SHPLoaderOptions) {\n    this.options = options;\n  }\n\n  write(arrayBuffer: ArrayBuffer) {\n    this.binaryReader.write(arrayBuffer);\n    this.state = parseState(this.state, this.result, this.binaryReader, this.options);\n  }\n\n  end() {\n    this.binaryReader.end();\n    this.state = parseState(this.state, this.result, this.binaryReader, this.options);\n    // this.result.progress.bytesUsed = this.binaryReader.bytesUsed();\n    if (this.state !== STATE.END) {\n      this.state = STATE.ERROR;\n      this.result.error = 'SHP incomplete file';\n    }\n  }\n}\n\nexport function parseSHP(arrayBuffer: ArrayBuffer, options?: SHPLoaderOptions): BinaryGeometry[] {\n  const shpParser = new SHPParser(options);\n  shpParser.write(arrayBuffer);\n  shpParser.end();\n\n  // @ts-ignore\n  return shpParser.result;\n}\n\n/**\n * @param asyncIterator\n * @param options\n * @returns\n */\nexport async function* parseSHPInBatches(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options?: SHPLoaderOptions\n): AsyncGenerator<BinaryGeometry | object> {\n  const parser = new SHPParser(options);\n  let headerReturned = false;\n  for await (const arrayBuffer of asyncIterator) {\n    parser.write(arrayBuffer);\n    if (!headerReturned && parser.result.header) {\n      headerReturned = true;\n      yield parser.result.header;\n    }\n\n    if (parser.result.geometries.length > 0) {\n      yield parser.result.geometries;\n      parser.result.geometries = [];\n    }\n  }\n  parser.end();\n  if (parser.result.geometries.length > 0) {\n    yield parser.result.geometries;\n  }\n\n  return;\n}\n\n/**\n * State-machine parser for SHP data\n *\n * Note that whenever more data is needed, a `return`, not a `break`, is\n * necessary, as the `break` keeps the context within `parseState`, while\n * `return` releases context so that more data can be written into the\n * BinaryChunkReader.\n *\n * @param  state Current state\n * @param  result An object to hold result data\n * @param  binaryReader\n * @return State at end of current parsing\n */\n/* eslint-disable complexity, max-depth */\nfunction parseState(\n  state: number,\n  result: SHPResult,\n  binaryReader: BinaryChunkReader,\n  options?: SHPLoaderOptions\n): number {\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    try {\n      switch (state) {\n        case STATE.ERROR:\n        case STATE.END:\n          return state;\n\n        case STATE.EXPECTING_HEADER:\n          // Parse initial file header\n          const dataView = binaryReader.getDataView(SHP_HEADER_SIZE);\n          if (!dataView) {\n            return state;\n          }\n\n          result.header = parseSHPHeader(dataView);\n          result.progress = {\n            bytesUsed: 0,\n            bytesTotal: result.header.length,\n            rows: 0\n          };\n          // index numbering starts at 1\n          result.currentIndex = 1;\n          state = STATE.EXPECTING_RECORD;\n          break;\n\n        case STATE.EXPECTING_RECORD:\n          while (binaryReader.hasAvailableBytes(SHP_RECORD_HEADER_SIZE)) {\n            const recordHeaderView = binaryReader.getDataView(SHP_RECORD_HEADER_SIZE) as DataView;\n            const recordHeader = {\n              recordNumber: recordHeaderView.getInt32(0, BIG_ENDIAN),\n              // 2 byte words; includes the four words of record header\n              byteLength: recordHeaderView.getInt32(4, BIG_ENDIAN) * 2,\n              // This is actually part of the record, not the header...\n              type: recordHeaderView.getInt32(8, LITTLE_ENDIAN)\n            };\n\n            if (!binaryReader.hasAvailableBytes(recordHeader.byteLength - 4)) {\n              binaryReader.rewind(SHP_RECORD_HEADER_SIZE);\n              return state;\n            }\n\n            const invalidRecord =\n              recordHeader.byteLength < 4 ||\n              recordHeader.type !== result.header?.type ||\n              recordHeader.recordNumber !== result.currentIndex;\n\n            // All records must have at least four bytes (for the record shape type)\n            if (invalidRecord) {\n              // Malformed record, try again, advancing just 4 bytes\n              // Note: this is a rewind because binaryReader.getDataView above\n              // moved the pointer forward 12 bytes, so rewinding 8 bytes still\n              // leaves us 4 bytes ahead\n              binaryReader.rewind(SHP_RECORD_HEADER_SIZE - 4);\n            } else {\n              // Note: type is actually part of the record, not the header, so\n              // rewind 4 bytes before reading record\n              binaryReader.rewind(4);\n\n              const recordView = binaryReader.getDataView(recordHeader.byteLength) as DataView;\n              const geometry = parseRecord(recordView, options);\n              result.geometries.push(geometry);\n\n              result.currentIndex++;\n              result.progress.rows = result.currentIndex - 1;\n            }\n          }\n\n          if (binaryReader.ended) {\n            state = STATE.END;\n          }\n\n          return state;\n\n        default:\n          state = STATE.ERROR;\n          result.error = `illegal parser state ${state}`;\n          return state;\n      }\n    } catch (error) {\n      state = STATE.ERROR;\n      result.error = `SHP parsing failed: ${(error as Error)?.message}`;\n      return state;\n    }\n  }\n}\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {parseSHP, parseSHPInBatches} from './lib/parsers/parse-shp';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport const SHP_MAGIC_NUMBER = [0x00, 0x00, 0x27, 0x0a];\n\n/**\n * SHP file loader\n */\nexport const SHPWorkerLoader: Loader = {\n  name: 'SHP',\n  id: 'shp',\n  module: 'shapefile',\n  version: VERSION,\n  worker: true,\n  category: 'geometry',\n  extensions: ['shp'],\n  mimeTypes: ['application/octet-stream'],\n  // ISSUE: This also identifies SHX files, which are identical to SHP for the first 100 bytes...\n  tests: [new Uint8Array(SHP_MAGIC_NUMBER).buffer],\n  options: {\n    shp: {\n      _maxDimensions: 4\n    }\n  }\n};\n\n/** SHP file loader */\nexport const SHPLoader: LoaderWithParser = {\n  ...SHPWorkerLoader,\n  parse: async (arrayBuffer, options?) => parseSHP(arrayBuffer, options),\n  parseSync: parseSHP,\n  parseInBatches: (\n    arrayBufferIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n    options\n  ) => parseSHPInBatches(arrayBufferIterator, options)\n};\n","import type {BinaryFeatureCollection, BinaryGeometry, Feature} from '@loaders.gl/schema';\n\ntype TransformCoordinate = (coord: number[]) => number[];\n\n/**\n * Apply transformation to every coordinate of binary features\n * @param  binaryFeatures binary features\n * @param  transformCoordinate Function to call on each coordinate\n * @return Transformed binary features\n */\nexport function transformBinaryCoords(\n  binaryFeatures: BinaryFeatureCollection,\n  transformCoordinate: TransformCoordinate\n): BinaryFeatureCollection {\n  if (binaryFeatures.points) {\n    transformBinaryGeometryPositions(binaryFeatures.points, transformCoordinate);\n  }\n  if (binaryFeatures.lines) {\n    transformBinaryGeometryPositions(binaryFeatures.lines, transformCoordinate);\n  }\n  if (binaryFeatures.polygons) {\n    transformBinaryGeometryPositions(binaryFeatures.polygons, transformCoordinate);\n  }\n  return binaryFeatures;\n}\n\n/** Transform one binary geometry */\nfunction transformBinaryGeometryPositions(binaryGeometry: BinaryGeometry, fn: TransformCoordinate) {\n  const {positions} = binaryGeometry;\n  for (let i = 0; i < positions.value.length; i += positions.size) {\n    // @ts-ignore inclusion of bigint causes problems\n    const coord: Array<number> = Array.from(positions.value.subarray(i, i + positions.size));\n    const transformedCoord = fn(coord);\n    // @ts-ignore typescript typing for .set seems to require bigint?\n    positions.value.set(transformedCoord, i);\n  }\n}\n\n/**\n * Apply transformation to every coordinate of GeoJSON features\n *\n * @param  features Array of GeoJSON features\n * @param  fn       Function to call on each coordinate\n * @return          Transformed GeoJSON features\n */\nexport function transformGeoJsonCoords(\n  features: Feature[],\n  fn: (coord: number[]) => number[]\n): Feature[] {\n  for (const feature of features) {\n    // @ts-ignore\n    feature.geometry.coordinates = coordMap(feature.geometry.coordinates, fn);\n  }\n  return features;\n}\n\nfunction coordMap(array: unknown, fn: (coord: number[]) => number[]): unknown[] {\n  if (isCoord(array)) {\n    return fn(array as number[]);\n  }\n\n  return (array as unknown[]).map((item) => {\n    return coordMap(item, fn);\n  });\n}\n\nfunction isCoord(array: unknown) {\n  return Array.isArray(array) && Number.isFinite(array[0]) && Number.isFinite(array[1]);\n}\n","import {parseSHPHeader} from './parse-shp-header';\n\nexport interface SHXOutput {\n  offsets: Int32Array;\n  lengths: Int32Array;\n}\n\nconst SHX_HEADER_SIZE = 100;\nconst BIG_ENDIAN = false;\n\n/**\n * @param arrayBuffer\n * @returns SHXOutput\n */\nexport function parseShx(arrayBuffer: ArrayBuffer): SHXOutput {\n  // SHX header is identical to SHP Header\n  const headerView = new DataView(arrayBuffer, 0, SHX_HEADER_SIZE);\n  const header = parseSHPHeader(headerView);\n  const contentLength = header.length - SHX_HEADER_SIZE;\n\n  const contentView = new DataView(arrayBuffer, SHX_HEADER_SIZE, contentLength);\n\n  const offsets = new Int32Array(contentLength);\n  const lengths = new Int32Array(contentLength);\n\n  for (let i = 0; i < contentLength / 8; i++) {\n    offsets[i] = contentView.getInt32(i * 8, BIG_ENDIAN);\n    lengths[i] = contentView.getInt32(i * 8 + 4, BIG_ENDIAN);\n  }\n\n  return {\n    offsets,\n    lengths\n  };\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {ObjectRowTableBatch, ArrayRowTableBatch} from '@loaders.gl/schema';\n\ntype RowTableBatch = ObjectRowTableBatch | ArrayRowTableBatch;\n\n/**\n * Zip two iterators together\n *\n * @param iterator1\n * @param iterator2\n */\nexport async function* zipBatchIterators(\n  iterator1: AsyncIterator<RowTableBatch> | Iterator<RowTableBatch>,\n  iterator2: AsyncIterator<RowTableBatch> | Iterator<RowTableBatch>,\n  shape: 'object-row-table' | 'array-row-table'\n): AsyncGenerator<RowTableBatch, void, unknown> {\n  const batch1Data: unknown[] = [];\n  const batch2Data: unknown[] = [];\n  let iterator1Done: boolean = false;\n  let iterator2Done: boolean = false;\n\n  // TODO - one could let all iterators flow at full speed using `Promise.race`\n  // however we might end up with a big temporary buffer\n  while (!iterator1Done && !iterator2Done) {\n    if (batch1Data.length === 0 && !iterator1Done) {\n      const {value, done} = await iterator1.next();\n      if (done) {\n        iterator1Done = true;\n      } else {\n        // @ts-expect-error\n        batch1Data.push(...value);\n      }\n    }\n    if (batch2Data.length === 0 && !iterator2Done) {\n      const {value, done} = await iterator2.next();\n      if (done) {\n        iterator2Done = true;\n      } else {\n        batch2Data.push(...value);\n      }\n    }\n\n    const batchData = extractBatchData(batch1Data, batch2Data);\n    if (batchData) {\n      yield {\n        batchType: 'data',\n        shape,\n        length: batchData.length,\n        data: batchData\n      };\n    }\n  }\n}\n\n/**\n * Extract batch of same length from two batches\n *\n * @param batch1\n * @param batch2\n * @return array | null\n */\nfunction extractBatchData(batch1: any[], batch2: any[]): any[] | null {\n  const batchLength: number = Math.min(batch1.length, batch2.length);\n  if (batchLength === 0) {\n    return null;\n  }\n\n  // Non interleaved arrays\n  const batch: any[] = [batch1.slice(0, batchLength), batch2.slice(0, batchLength)];\n\n  // Modify the 2 batches\n  batch1.splice(0, batchLength);\n  batch2.splice(0, batchLength);\n  return batch;\n}\n","import {Field, ObjectRowTable} from '@loaders.gl/schema';\nimport {BinaryChunkReader} from '../streaming/binary-chunk-reader';\nimport {\n  DBFLoaderOptions,\n  DBFResult,\n  DBFTableOutput,\n  DBFHeader,\n  DBFRowsOutput,\n  DBFField\n} from './types';\n\nconst LITTLE_ENDIAN = true;\nconst DBF_HEADER_SIZE = 32;\n\nenum STATE {\n  START = 0, // Expecting header\n  FIELD_DESCRIPTORS = 1,\n  FIELD_PROPERTIES = 2,\n  END = 3,\n  ERROR = 4\n}\n\nclass DBFParser {\n  binaryReader = new BinaryChunkReader();\n  textDecoder: TextDecoder;\n  state = STATE.START;\n  result: DBFResult = {\n    data: []\n  };\n\n  constructor(options: {encoding: string}) {\n    this.textDecoder = new TextDecoder(options.encoding);\n  }\n\n  /**\n   * @param arrayBuffer\n   */\n  write(arrayBuffer: ArrayBuffer): void {\n    this.binaryReader.write(arrayBuffer);\n    this.state = parseState(this.state, this.result, this.binaryReader, this.textDecoder);\n    // this.result.progress.bytesUsed = this.binaryReader.bytesUsed();\n\n    // important events:\n    // - schema available\n    // - first rows available\n    // - all rows available\n  }\n\n  end(): void {\n    this.binaryReader.end();\n    this.state = parseState(this.state, this.result, this.binaryReader, this.textDecoder);\n    // this.result.progress.bytesUsed = this.binaryReader.bytesUsed();\n    if (this.state !== STATE.END) {\n      this.state = STATE.ERROR;\n      this.result.error = 'DBF incomplete file';\n    }\n  }\n}\n\n/**\n * @param arrayBuffer\n * @param options\n * @returns DBFTable or rows\n */\nexport function parseDBF(\n  arrayBuffer: ArrayBuffer,\n  options: DBFLoaderOptions = {}\n): DBFRowsOutput | DBFTableOutput | ObjectRowTable {\n  const {encoding = 'latin1'} = options.dbf || {};\n\n  const dbfParser = new DBFParser({encoding});\n  dbfParser.write(arrayBuffer);\n  dbfParser.end();\n\n  const {data, schema} = dbfParser.result;\n  const shape = options?.dbf?.shape;\n  switch (shape) {\n    case 'object-row-table': {\n      const table: ObjectRowTable = {\n        shape: 'object-row-table',\n        schema,\n        data\n      };\n      return table;\n    }\n    case 'table':\n      return {schema, rows: data};\n    case 'rows':\n    default:\n      return data;\n  }\n}\n/**\n * @param asyncIterator\n * @param options\n */\nexport async function* parseDBFInBatches(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options: DBFLoaderOptions = {}\n): AsyncIterable<DBFHeader | DBFRowsOutput | DBFTableOutput> {\n  const {encoding = 'latin1'} = options.dbf || {};\n\n  const parser = new DBFParser({encoding});\n  let headerReturned = false;\n  for await (const arrayBuffer of asyncIterator) {\n    parser.write(arrayBuffer);\n    if (!headerReturned && parser.result.dbfHeader) {\n      headerReturned = true;\n      yield parser.result.dbfHeader;\n    }\n\n    if (parser.result.data.length > 0) {\n      yield parser.result.data;\n      parser.result.data = [];\n    }\n  }\n  parser.end();\n  if (parser.result.data.length > 0) {\n    yield parser.result.data;\n  }\n}\n/**\n * https://www.dbase.com/Knowledgebase/INT/db7_file_fmt.htm\n * @param state\n * @param result\n * @param binaryReader\n * @param textDecoder\n * @returns\n */\n/* eslint-disable complexity, max-depth */\nfunction parseState(\n  state: STATE,\n  result: DBFResult,\n  binaryReader: BinaryChunkReader,\n  textDecoder: TextDecoder\n): STATE {\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    try {\n      switch (state) {\n        case STATE.ERROR:\n        case STATE.END:\n          return state;\n\n        case STATE.START:\n          // Parse initial file header\n          // DBF Header\n          const dataView = binaryReader.getDataView(DBF_HEADER_SIZE);\n          if (!dataView) {\n            return state;\n          }\n          result.dbfHeader = parseDBFHeader(dataView);\n          result.progress = {\n            bytesUsed: 0,\n            rowsTotal: result.dbfHeader.nRecords,\n            rows: 0\n          };\n          state = STATE.FIELD_DESCRIPTORS;\n          break;\n\n        case STATE.FIELD_DESCRIPTORS:\n          // Parse DBF field descriptors (schema)\n          const fieldDescriptorView = binaryReader.getDataView(\n            // @ts-ignore\n            result.dbfHeader.headerLength - DBF_HEADER_SIZE\n          );\n          if (!fieldDescriptorView) {\n            return state;\n          }\n\n          result.dbfFields = parseFieldDescriptors(fieldDescriptorView, textDecoder);\n          result.schema = {\n            fields: result.dbfFields.map((dbfField) => makeField(dbfField)),\n            metadata: {}\n          };\n\n          state = STATE.FIELD_PROPERTIES;\n\n          // TODO(kyle) Not exactly sure why start offset needs to be headerLength + 1?\n          // parsedbf uses ((fields.length + 1) << 5) + 2;\n          binaryReader.skip(1);\n          break;\n\n        case STATE.FIELD_PROPERTIES:\n          const {recordLength = 0, nRecords = 0} = result?.dbfHeader || {};\n          while (result.data.length < nRecords) {\n            const recordView = binaryReader.getDataView(recordLength - 1);\n            if (!recordView) {\n              return state;\n            }\n            // Note: Avoid actually reading the last byte, which may not be present\n            binaryReader.skip(1);\n\n            // @ts-ignore\n            const row = parseRow(recordView, result.dbfFields, textDecoder);\n            result.data.push(row);\n            // @ts-ignore\n            result.progress.rows = result.data.length;\n          }\n          state = STATE.END;\n          break;\n\n        default:\n          state = STATE.ERROR;\n          result.error = `illegal parser state ${state}`;\n          return state;\n      }\n    } catch (error) {\n      state = STATE.ERROR;\n      result.error = `DBF parsing failed: ${(error as Error).message}`;\n      return state;\n    }\n  }\n}\n\n/**\n * @param headerView\n */\nfunction parseDBFHeader(headerView: DataView): DBFHeader {\n  return {\n    // Last updated date\n    year: headerView.getUint8(1) + 1900,\n    month: headerView.getUint8(2),\n    day: headerView.getUint8(3),\n    // Number of records in data file\n    nRecords: headerView.getUint32(4, LITTLE_ENDIAN),\n    // Length of header in bytes\n    headerLength: headerView.getUint16(8, LITTLE_ENDIAN),\n    // Length of each record\n    recordLength: headerView.getUint16(10, LITTLE_ENDIAN),\n    // Not sure if this is usually set\n    languageDriver: headerView.getUint8(29)\n  };\n}\n\n/**\n * @param view\n */\nfunction parseFieldDescriptors(view: DataView, textDecoder: TextDecoder): DBFField[] {\n  // NOTE: this might overestimate the number of fields if the \"Database\n  // Container\" container exists and is included in the headerLength\n  const nFields = (view.byteLength - 1) / 32;\n  const fields: DBFField[] = [];\n  let offset = 0;\n  for (let i = 0; i < nFields; i++) {\n    const name = textDecoder\n      .decode(new Uint8Array(view.buffer, view.byteOffset + offset, 11))\n      // eslint-disable-next-line no-control-regex\n      .replace(/\\u0000/g, '');\n\n    fields.push({\n      name,\n      dataType: String.fromCharCode(view.getUint8(offset + 11)),\n      fieldLength: view.getUint8(offset + 16),\n      decimal: view.getUint8(offset + 17)\n    });\n    offset += 32;\n  }\n  return fields;\n}\n\n/*\n * @param {BinaryChunkReader} binaryReader\nfunction parseRows(binaryReader, fields, nRecords, recordLength, textDecoder) {\n  const rows = [];\n  for (let i = 0; i < nRecords; i++) {\n    const recordView = binaryReader.getDataView(recordLength - 1);\n    binaryReader.skip(1);\n    // @ts-ignore\n    rows.push(parseRow(recordView, fields, textDecoder));\n  }\n  return rows;\n}\n */\n\n/**\n *\n * @param view\n * @param fields\n * @param textDecoder\n * @returns\n */\nfunction parseRow(\n  view: DataView,\n  fields: DBFField[],\n  textDecoder: TextDecoder\n): {[key: string]: any} {\n  const out: {[key: string]: string | number | boolean | null} = {};\n  let offset = 0;\n  for (const field of fields) {\n    const text = textDecoder.decode(\n      new Uint8Array(view.buffer, view.byteOffset + offset, field.fieldLength)\n    );\n    out[field.name] = parseField(text, field.dataType);\n    offset += field.fieldLength;\n  }\n\n  return out;\n}\n\n/**\n * Should NaN be coerced to null?\n * @param text\n * @param dataType\n * @returns Field depends on a type of the data\n */\nfunction parseField(text: string, dataType: string): string | number | boolean | null {\n  switch (dataType) {\n    case 'B':\n      return parseNumber(text);\n    case 'C':\n      return parseCharacter(text);\n    case 'F':\n      return parseNumber(text);\n    case 'N':\n      return parseNumber(text);\n    case 'O':\n      return parseNumber(text);\n    case 'D':\n      return parseDate(text);\n    case 'L':\n      return parseBoolean(text);\n    default:\n      throw new Error('Unsupported data type');\n  }\n}\n\n/**\n * Parse YYYYMMDD to date in milliseconds\n * @param str YYYYMMDD\n * @returns new Date as a number\n */\nfunction parseDate(str: any): number {\n  return Date.UTC(str.slice(0, 4), parseInt(str.slice(4, 6), 10) - 1, str.slice(6, 8));\n}\n\n/**\n * Read boolean value\n * any of Y, y, T, t coerce to true\n * any of N, n, F, f coerce to false\n * otherwise null\n * @param value\n * @returns boolean | null\n */\nfunction parseBoolean(value: string): boolean | null {\n  return /^[nf]$/i.test(value) ? false : /^[yt]$/i.test(value) ? true : null;\n}\n\n/**\n * Return null instead of NaN\n * @param text\n * @returns number | null\n */\nfunction parseNumber(text: string): number | null {\n  const number = parseFloat(text);\n  return isNaN(number) ? null : number;\n}\n\n/**\n *\n * @param text\n * @returns string | null\n */\nfunction parseCharacter(text: string): string | null {\n  return text.trim() || null;\n}\n\n/**\n * Create a standard Arrow-style `Field` from field descriptor.\n * TODO - use `fieldLength` and `decimal` to generate smaller types?\n * @param param0\n * @returns Field\n */\n// eslint-disable\nfunction makeField({name, dataType, fieldLength, decimal}: DBFField): Field {\n  switch (dataType) {\n    case 'B':\n      return {name, type: 'float64', nullable: true, metadata: {}};\n    case 'C':\n      return {name, type: 'utf8', nullable: true, metadata: {}};\n    case 'F':\n      return {name, type: 'float64', nullable: true, metadata: {}};\n    case 'N':\n      return {name, type: 'float64', nullable: true, metadata: {}};\n    case 'O':\n      return {name, type: 'float64', nullable: true, metadata: {}};\n    case 'D':\n      return {name, type: 'timestamp-millisecond', nullable: true, metadata: {}};\n    case 'L':\n      return {name, type: 'bool', nullable: true, metadata: {}};\n    default:\n      throw new Error('Unsupported data type');\n  }\n}\n","import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {parseDBF, parseDBFInBatches} from './lib/parsers/parse-dbf';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * DBFLoader - DBF files are used to contain non-geometry columns in Shapefiles\n */\nexport const DBFWorkerLoader: Loader = {\n  name: 'DBF',\n  id: 'dbf',\n  module: 'shapefile',\n  version: VERSION,\n  worker: true,\n  category: 'table',\n  extensions: ['dbf'],\n  mimeTypes: ['application/x-dbf'],\n  options: {\n    dbf: {\n      encoding: 'latin1'\n    }\n  }\n};\n\n/** DBF file loader */\nexport const DBFLoader: LoaderWithParser = {\n  ...DBFWorkerLoader,\n  parse: async (arrayBuffer, options) => parseDBF(arrayBuffer, options),\n  parseSync: parseDBF,\n  parseInBatches(arrayBufferIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>, options) {\n    return parseDBFInBatches(arrayBufferIterator, options);\n  }\n};\n","// import type {Feature} from '@loaders.gl/gis';\nimport {LoaderContext, parseInBatchesFromContext, parseFromContext} from '@loaders.gl/loader-utils';\nimport {binaryToGeometry, transformGeoJsonCoords} from '@loaders.gl/gis';\nimport type {\n  BinaryGeometry,\n  Geometry,\n  ObjectRowTable,\n  ObjectRowTableBatch\n} from '@loaders.gl/schema';\nimport {Proj4Projection} from '@math.gl/proj4';\n\nimport type {SHXOutput} from './parse-shx';\nimport type {SHPHeader} from './parse-shp-header';\nimport type {ShapefileLoaderOptions} from './types';\nimport {parseShx} from './parse-shx';\nimport {zipBatchIterators} from '../streaming/zip-batch-iterators';\nimport {SHPLoader} from '../../shp-loader';\nimport {DBFLoader} from '../../dbf-loader';\n\ntype Feature = any;\ninterface ShapefileOutput {\n  encoding?: string;\n  prj?: string;\n  shx?: SHXOutput;\n  header: SHPHeader;\n  data: object[];\n}\n/**\n * Parsing of file in batches\n */\n// eslint-disable-next-line max-statements, complexity\nexport async function* parseShapefileInBatches(\n  asyncIterator: AsyncIterable<ArrayBuffer> | Iterable<ArrayBuffer>,\n  options?: ShapefileLoaderOptions,\n  context?: LoaderContext\n): AsyncIterable<ShapefileOutput> {\n  const {reproject = false, _targetCrs = 'WGS84'} = options?.gis || {};\n  const {shx, cpg, prj} = await loadShapefileSidecarFiles(options, context);\n\n  // parse geometries\n  const shapeIterable = await parseInBatchesFromContext(\n    asyncIterator,\n    SHPLoader,\n    options,\n    context!\n  );\n\n  const shapeIterator: AsyncIterator<any> =\n    shapeIterable[Symbol.asyncIterator]?.() || shapeIterable[Symbol.iterator]?.();\n\n  // parse properties\n  let propertyIterator: AsyncIterator<any> | null = null;\n  const dbfResponse = await context?.fetch(replaceExtension(context?.url || '', 'dbf'));\n  if (dbfResponse?.ok) {\n    const propertyIterable = await parseInBatchesFromContext(\n      dbfResponse,\n      DBFLoader,\n      {\n        ...options,\n        dbf: {encoding: cpg || 'latin1'}\n      },\n      context!\n    );\n    propertyIterator =\n      propertyIterable[Symbol.asyncIterator]?.() || propertyIterable[Symbol.iterator]();\n  }\n\n  // When `options.metadata` is `true`, there's an extra initial `metadata`\n  // object before the iterator starts. zipBatchIterators expects to receive\n  // batches of Array objects, and will fail with non-iterable batches, so it's\n  // important to skip over the first batch.\n  let shapeHeader = (await shapeIterator.next()).value;\n  if (shapeHeader && shapeHeader.batchType === 'metadata') {\n    shapeHeader = (await shapeIterator.next()).value;\n  }\n\n  let dbfHeader: {batchType?: string} = {};\n  if (propertyIterator) {\n    dbfHeader = (await propertyIterator.next()).value;\n    if (dbfHeader && dbfHeader.batchType === 'metadata') {\n      dbfHeader = (await propertyIterator.next()).value;\n    }\n  }\n\n  const zippedIterator: AsyncIterator<ObjectRowTableBatch> = propertyIterator\n    ? zipBatchIterators(shapeIterator, propertyIterator, 'object-row-table')\n    : shapeIterator;\n\n  const zippedBatchIterable: AsyncIterable<ObjectRowTableBatch> = {\n    [Symbol.asyncIterator]() {\n      return zippedIterator;\n    }\n  };\n\n  for await (const batch of zippedBatchIterable) {\n    let geometries: any;\n    let properties: any;\n    if (!propertyIterator) {\n      geometries = batch;\n    } else {\n      [geometries, properties] = batch.data;\n    }\n\n    const geojsonGeometries = parseGeometries(geometries);\n    let features = joinProperties(geojsonGeometries, properties);\n    if (reproject) {\n      // @ts-ignore\n      features = reprojectFeatures(features, prj, _targetCrs);\n    }\n    yield {\n      encoding: cpg,\n      prj,\n      shx,\n      header: shapeHeader,\n      data: features\n    };\n  }\n}\n\n/**\n * Parse shapefile\n *\n * @param arrayBuffer\n * @param options\n * @param context\n * @returns output of shapefile\n */\nexport async function parseShapefile(\n  arrayBuffer: ArrayBuffer,\n  options?: ShapefileLoaderOptions,\n  context?: LoaderContext\n): Promise<ShapefileOutput> {\n  const {reproject = false, _targetCrs = 'WGS84'} = options?.gis || {};\n  const {shx, cpg, prj} = await loadShapefileSidecarFiles(options, context);\n\n  // parse geometries\n  const {header, geometries} = await parseFromContext(arrayBuffer, SHPLoader, options, context!); // {shp: shx}\n\n  const geojsonGeometries = parseGeometries(geometries);\n\n  // parse properties\n  let propertyTable: ObjectRowTable | undefined;\n\n  const dbfResponse = await context?.fetch(replaceExtension(context?.url!, 'dbf'));\n  if (dbfResponse?.ok) {\n    propertyTable = await parseFromContext(\n      dbfResponse as any,\n      DBFLoader,\n      {dbf: {shape: 'object-row-table', encoding: cpg || 'latin1'}},\n      context!\n    );\n  }\n\n  let features = joinProperties(geojsonGeometries, propertyTable?.data || []);\n  if (reproject) {\n    features = reprojectFeatures(features, prj, _targetCrs);\n  }\n\n  switch (options?.shapefile?.shape) {\n    case 'geojson-table':\n      return {\n        // @ts-expect-error\n        shape: 'geojson-table',\n        type: 'FeatureCollection',\n        encoding: cpg,\n        schema: propertyTable?.schema || {metadata: {}, fields: []},\n        prj,\n        shx,\n        header,\n        features\n      };\n    default:\n      return {\n        encoding: cpg,\n        prj,\n        shx,\n        header,\n        data: features\n      };\n  }\n}\n\n/**\n * Parse geometries\n *\n * @param geometries\n * @returns geometries as an array\n */\nfunction parseGeometries(geometries: BinaryGeometry[]): Geometry[] {\n  const geojsonGeometries: any[] = [];\n  for (const geom of geometries) {\n    geojsonGeometries.push(binaryToGeometry(geom));\n  }\n  return geojsonGeometries;\n}\n\n/**\n * Join properties and geometries into features\n *\n * @param geometries [description]\n * @param  properties [description]\n * @return [description]\n */\nfunction joinProperties(geometries: Geometry[], properties: object[]): Feature[] {\n  const features: Feature[] = [];\n  for (let i = 0; i < geometries.length; i++) {\n    const geometry = geometries[i];\n    const feature: Feature = {\n      type: 'Feature',\n      geometry,\n      // properties can be undefined if dbfResponse above was empty\n      properties: (properties && properties[i]) || {}\n    };\n    features.push(feature);\n  }\n\n  return features;\n}\n\n/**\n * Reproject GeoJSON features to output CRS\n *\n * @param features parsed GeoJSON features\n * @param sourceCrs source coordinate reference system\n * @param targetCrs †arget coordinate reference system\n * @return Reprojected Features\n */\nfunction reprojectFeatures(features: Feature[], sourceCrs?: string, targetCrs?: string): Feature[] {\n  if (!sourceCrs && !targetCrs) {\n    return features;\n  }\n\n  const projection = new Proj4Projection({from: sourceCrs || 'WGS84', to: targetCrs || 'WGS84'});\n  return transformGeoJsonCoords(features, (coord) => projection.project(coord));\n}\n\n/**\n *\n * @param options\n * @param context\n * @returns Promise\n */\n// eslint-disable-next-line max-statements\nexport async function loadShapefileSidecarFiles(\n  options?: ShapefileLoaderOptions,\n  context?: LoaderContext\n): Promise<{\n  shx?: SHXOutput;\n  cpg?: string;\n  prj?: string;\n}> {\n  // Attempt a parallel load of the small sidecar files\n  // @ts-ignore context must be defined\n  const {url, fetch} = context;\n  const shxPromise = fetch(replaceExtension(url, 'shx'));\n  const cpgPromise = fetch(replaceExtension(url, 'cpg'));\n  const prjPromise = fetch(replaceExtension(url, 'prj'));\n  await Promise.all([shxPromise, cpgPromise, prjPromise]);\n\n  let shx: SHXOutput | undefined;\n  let cpg: string | undefined;\n  let prj: string | undefined;\n\n  const shxResponse = await shxPromise;\n  if (shxResponse.ok) {\n    const arrayBuffer = await shxResponse.arrayBuffer();\n    shx = parseShx(arrayBuffer);\n  }\n\n  const cpgResponse = await cpgPromise;\n  if (cpgResponse.ok) {\n    cpg = await cpgResponse.text();\n  }\n\n  const prjResponse = await prjPromise;\n  if (prjResponse.ok) {\n    prj = await prjResponse.text();\n  }\n\n  return {\n    shx,\n    cpg,\n    prj\n  };\n}\n\n/**\n * Replace the extension at the end of a path.\n *\n * Matches the case of new extension with the case of the original file extension,\n * to increase the chance of finding files without firing off a request storm looking for various case combinations\n *\n * NOTE: Extensions can be both lower and uppercase\n * per spec, extensions should be lower case, but that doesn't mean they always are. See:\n * calvinmetcalf/shapefile-js#64, mapserver/mapserver#4712\n * https://trac.osgeo.org/mapserver/ticket/166\n */\nexport function replaceExtension(url: string, newExtension: string): string {\n  const baseName = basename(url);\n  const extension = extname(url);\n  const isUpperCase = extension === extension.toUpperCase();\n  if (isUpperCase) {\n    newExtension = newExtension.toUpperCase();\n  }\n  return `${baseName}.${newExtension}`;\n}\n\n// NOTE - this gives the entire path minus extension (i.e. NOT same as path.basename)\n/**\n * @param url\n * @returns string\n */\nfunction basename(url: string): string {\n  const extIndex = url && url.lastIndexOf('.');\n  if (typeof extIndex === 'number') {\n    return extIndex >= 0 ? url.substr(0, extIndex) : '';\n  }\n  return extIndex;\n}\n/**\n * @param url\n * @returns string\n */\nfunction extname(url: string): string {\n  const extIndex = url && url.lastIndexOf('.');\n  if (typeof extIndex === 'number') {\n    return extIndex >= 0 ? url.substr(extIndex + 1) : '';\n  }\n  return extIndex;\n}\n","import type {LoaderOptions, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {SHP_MAGIC_NUMBER} from './shp-loader';\nimport {parseShapefile, parseShapefileInBatches} from './lib/parsers/parse-shapefile';\nimport {Batch, GeoJSONTable} from '@loaders.gl/schema';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type ShapefileLoaderOptions = LoaderOptions & {\n  shapefile?: {\n    shape?: 'geojson-table' | 'v3';\n  };\n};\n\n/**\n * Shapefile loader\n * @note Shapefile is multifile format and requires providing additional files\n */\nexport const ShapefileLoader: LoaderWithParser<GeoJSONTable, Batch, ShapefileLoaderOptions> = {\n  name: 'Shapefile',\n  id: 'shapefile',\n  module: 'shapefile',\n  version: VERSION,\n  category: 'geometry',\n  extensions: ['shp'],\n  mimeTypes: ['application/octet-stream'],\n  tests: [new Uint8Array(SHP_MAGIC_NUMBER).buffer],\n  options: {\n    shapefile: {\n      shape: 'v3'\n    },\n    shp: {\n      _maxDimensions: 4\n    }\n  },\n  // @ts-expect-error\n  parse: parseShapefile,\n  // @ts-expect-error\n  parseInBatches: parseShapefileInBatches\n};\n","import {Feature, GeojsonGeometryInfo} from '@loaders.gl/schema';\n\n/**\n *  Initial scan over GeoJSON features\n *  Counts number of coordinates of each geometry type and\n *  keeps track of the max coordinate dimensions\n */\n// eslint-disable-next-line complexity, max-statements\nexport function extractGeometryInfo(features: Feature[]): GeojsonGeometryInfo {\n  // Counts the number of _positions_, so [x, y, z] counts as one\n  let pointPositionsCount = 0;\n  let pointFeaturesCount = 0;\n  let linePositionsCount = 0;\n  let linePathsCount = 0;\n  let lineFeaturesCount = 0;\n  let polygonPositionsCount = 0;\n  let polygonObjectsCount = 0;\n  let polygonRingsCount = 0;\n  let polygonFeaturesCount = 0;\n  const coordLengths = new Set<number>();\n\n  for (const feature of features) {\n    const geometry = feature.geometry;\n    switch (geometry.type) {\n      case 'Point':\n        pointFeaturesCount++;\n        pointPositionsCount++;\n        coordLengths.add(geometry.coordinates.length);\n        break;\n      case 'MultiPoint':\n        pointFeaturesCount++;\n        pointPositionsCount += geometry.coordinates.length;\n        for (const point of geometry.coordinates) {\n          coordLengths.add(point.length);\n        }\n        break;\n      case 'LineString':\n        lineFeaturesCount++;\n        linePositionsCount += geometry.coordinates.length;\n        linePathsCount++;\n\n        for (const coord of geometry.coordinates) {\n          coordLengths.add(coord.length);\n        }\n        break;\n      case 'MultiLineString':\n        lineFeaturesCount++;\n        for (const line of geometry.coordinates) {\n          linePositionsCount += line.length;\n          linePathsCount++;\n\n          // eslint-disable-next-line max-depth\n          for (const coord of line) {\n            coordLengths.add(coord.length);\n          }\n        }\n        break;\n      case 'Polygon':\n        polygonFeaturesCount++;\n        polygonObjectsCount++;\n        polygonRingsCount += geometry.coordinates.length;\n        const flattened = geometry.coordinates.flat();\n        polygonPositionsCount += flattened.length;\n\n        for (const coord of flattened) {\n          coordLengths.add(coord.length);\n        }\n        break;\n      case 'MultiPolygon':\n        polygonFeaturesCount++;\n        for (const polygon of geometry.coordinates) {\n          polygonObjectsCount++;\n          polygonRingsCount += polygon.length;\n          const flattened = polygon.flat();\n          polygonPositionsCount += flattened.length;\n\n          // eslint-disable-next-line max-depth\n          for (const coord of flattened) {\n            coordLengths.add(coord.length);\n          }\n        }\n        break;\n      default:\n        throw new Error(`Unsupported geometry type: ${geometry.type}`);\n    }\n  }\n\n  return {\n    coordLength: coordLengths.size > 0 ? Math.max(...coordLengths) : 2,\n\n    pointPositionsCount,\n    pointFeaturesCount,\n    linePositionsCount,\n    linePathsCount,\n    lineFeaturesCount,\n    polygonPositionsCount,\n    polygonObjectsCount,\n    polygonRingsCount,\n    polygonFeaturesCount\n  };\n}\n","import {getPolygonSignedArea} from '@math.gl/polygon';\n\nimport {Feature, Position, FlatFeature} from '@loaders.gl/schema';\n\n/**\n * Options for `geojsonToFlatGeojson`\n */\nexport type GeojsonToFlatGeojsonOptions = {\n  coordLength: number;\n  fixRingWinding: boolean;\n};\n\n// Coordinates defining a Point\ntype PointCoordinates = Position;\n// Coordinates defining a LineString\ntype LineStringCoordinates = Position[];\n// Coordinates defining a Polygon\ntype PolygonCoordinates = Position[][];\n\n/**\n * Convert GeoJSON features to Flat GeoJSON features\n *\n * @param features\n * @param options\n * @returns an Array of Flat GeoJSON features\n */\nexport function geojsonToFlatGeojson(\n  features: Feature[],\n  options: GeojsonToFlatGeojsonOptions = {coordLength: 2, fixRingWinding: true}\n): FlatFeature[] {\n  return features.map((feature) => flattenFeature(feature, options));\n}\n\n/**\n * Helper function to copy Point values from `coordinates` into `data` & `indices`\n *\n * @param coordinates\n * @param data\n * @param indices\n * @param options\n */\nfunction flattenPoint(\n  coordinates: PointCoordinates,\n  data: number[],\n  indices: number[],\n  options: GeojsonToFlatGeojsonOptions\n) {\n  indices.push(data.length);\n  data.push(...coordinates);\n\n  // Pad up to coordLength\n  for (let i = coordinates.length; i < options.coordLength; i++) {\n    data.push(0);\n  }\n}\n\n/**\n * Helper function to copy LineString values from `coordinates` into `data` & `indices`\n *\n * @param coordinates\n * @param data\n * @param indices\n * @param options\n */\nfunction flattenLineString(\n  coordinates: LineStringCoordinates,\n  data: number[],\n  indices: number[],\n  options: GeojsonToFlatGeojsonOptions\n) {\n  indices.push(data.length);\n  for (const c of coordinates) {\n    data.push(...c);\n\n    // Pad up to coordLength\n    for (let i = c.length; i < options.coordLength; i++) {\n      data.push(0);\n    }\n  }\n}\n\n/**\n * Helper function to copy Polygon values from `coordinates` into `data` & `indices` & `areas`\n *\n * @param coordinates\n * @param data\n * @param indices\n * @param areas\n * @param options\n */\nfunction flattenPolygon(\n  coordinates: PolygonCoordinates,\n  data: number[],\n  indices: number[][],\n  areas: number[][],\n  options: GeojsonToFlatGeojsonOptions\n) {\n  let count = 0;\n  const ringAreas: number[] = [];\n  const polygons: number[] = [];\n  for (const lineString of coordinates) {\n    const lineString2d = lineString.map((p) => p.slice(0, 2));\n    let area = getPolygonSignedArea(lineString2d.flat());\n    const ccw = area < 0;\n\n    // Exterior ring must be CCW and interior rings CW\n    if (options.fixRingWinding && ((count === 0 && !ccw) || (count > 0 && ccw))) {\n      lineString.reverse();\n      area = -area;\n    }\n    ringAreas.push(area);\n    flattenLineString(lineString, data, polygons, options);\n    count++;\n  }\n\n  if (count > 0) {\n    areas.push(ringAreas);\n    indices.push(polygons);\n  }\n}\n\n/**\n * Flatten single GeoJSON feature into Flat GeoJSON\n *\n * @param feature\n * @param options\n * @returns A Flat GeoJSON feature\n */\nfunction flattenFeature(feature: Feature, options: GeojsonToFlatGeojsonOptions): FlatFeature {\n  const {geometry} = feature;\n  if (geometry.type === 'GeometryCollection') {\n    throw new Error('GeometryCollection type not supported');\n  }\n  const data = [];\n  const indices = [];\n  let areas;\n  let type;\n\n  switch (geometry.type) {\n    case 'Point':\n      type = 'Point';\n      flattenPoint(geometry.coordinates, data, indices, options);\n      break;\n    case 'MultiPoint':\n      type = 'Point';\n      geometry.coordinates.map((c) => flattenPoint(c, data, indices, options));\n      break;\n    case 'LineString':\n      type = 'LineString';\n      flattenLineString(geometry.coordinates, data, indices, options);\n      break;\n    case 'MultiLineString':\n      type = 'LineString';\n      geometry.coordinates.map((c) => flattenLineString(c, data, indices, options));\n      break;\n    case 'Polygon':\n      type = 'Polygon';\n      areas = [];\n      flattenPolygon(geometry.coordinates, data, indices, areas, options);\n      break;\n    case 'MultiPolygon':\n      type = 'Polygon';\n      areas = [];\n      geometry.coordinates.map((c) => flattenPolygon(c, data, indices, areas, options));\n      break;\n    default:\n      throw new Error(`Unknown type: ${type}`);\n  }\n\n  return {...feature, geometry: {type, indices, data, areas}};\n}\n","import type {Feature} from '@loaders.gl/schema';\nimport type {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {extractGeometryInfo} from './extract-geometry-info';\nimport {geojsonToFlatGeojson} from './geojson-to-flat-geojson';\nimport {flatGeojsonToBinary} from './flat-geojson-to-binary';\n\n/**\n * Options for `geojsonToBinary`\n */\nexport type GeojsonToBinaryOptions = {\n  fixRingWinding: boolean;\n  numericPropKeys?: string[];\n  PositionDataType?: Float32ArrayConstructor | Float64ArrayConstructor;\n  triangulate?: boolean;\n};\n\n/**\n * Convert GeoJSON features to flat binary arrays\n *\n * @param features\n * @param options\n * @returns features in binary format, grouped by geometry type\n */\nexport function geojsonToBinary(\n  features: Feature[],\n  options: GeojsonToBinaryOptions = {fixRingWinding: true, triangulate: true}\n): BinaryFeatureCollection {\n  const geometryInfo = extractGeometryInfo(features);\n  const coordLength = geometryInfo.coordLength;\n  const {fixRingWinding} = options;\n  const flatFeatures = geojsonToFlatGeojson(features, {coordLength, fixRingWinding});\n  return flatGeojsonToBinary(flatFeatures, geometryInfo, {\n    numericPropKeys: options.numericPropKeys,\n    PositionDataType: options.PositionDataType || Float32Array,\n    triangulate: options.triangulate\n  });\n}\n","// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {GeoJSON, GeoJSONTable, TableBatch} from '@loaders.gl/schema';\nimport type {JSONLoaderOptions} from './json-loader';\nimport {geojsonToBinary} from '@loaders.gl/gis';\n// import {parseJSONSync} from './lib/parsers/parse-json';\nimport {parseJSONInBatches} from './lib/parsers/parse-json-in-batches';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\nexport type GeoJSONLoaderOptions = JSONLoaderOptions & {\n  geojson?: {\n    shape?: 'object-row-table';\n  };\n  gis?: {\n    format?: 'geojson' | 'binary';\n  };\n};\n\n/**\n * GeoJSON loader\n */\nexport const GeoJSONWorkerLoader: Loader<GeoJSON, TableBatch, GeoJSONLoaderOptions> = {\n  name: 'GeoJSON',\n  id: 'geojson',\n  module: 'geojson',\n  version: VERSION,\n  worker: true,\n  extensions: ['geojson'],\n  mimeTypes: ['application/geo+json'],\n  category: 'geometry',\n  text: true,\n  options: {\n    geojson: {\n      shape: 'object-row-table'\n    },\n    json: {\n      shape: 'object-row-table',\n      jsonpaths: ['$', '$.features']\n    },\n    gis: {\n      format: 'geojson'\n    }\n  }\n};\n\nexport const GeoJSONLoader: LoaderWithParser<GeoJSON, TableBatch, GeoJSONLoaderOptions> = {\n  ...GeoJSONWorkerLoader,\n  // @ts-expect-error\n  parse,\n  // @ts-expect-error\n  parseTextSync,\n  parseInBatches\n};\n\nasync function parse(arrayBuffer: ArrayBuffer, options?: GeoJSONLoaderOptions) {\n  return parseTextSync(new TextDecoder().decode(arrayBuffer), options);\n}\n\nfunction parseTextSync(text: string, options?: GeoJSONLoaderOptions) {\n  // Apps can call the parse method directly, we so apply default options here\n  options = {...GeoJSONLoader.options, ...options};\n  options.geojson = {...GeoJSONLoader.options.geojson, ...options.geojson};\n  options.gis = options.gis || {};\n\n  let geojson;\n  try {\n    geojson = JSON.parse(text);\n  } catch {\n    geojson = {};\n  }\n\n  const table: GeoJSONTable = {\n    shape: 'geojson-table',\n    // TODO - deduce schema from geojson\n    // TODO check that parsed data is of type FeatureCollection\n    type: 'FeatureCollection',\n    features: geojson?.features || []\n  };\n\n  switch (options.gis.format) {\n    case 'binary':\n      return geojsonToBinary(table.features);\n    default:\n      return table;\n  }\n}\n\nfunction parseInBatches(asyncIterator, options): AsyncIterable<TableBatch> {\n  // Apps can call the parse method directly, we so apply default options here\n  options = {...GeoJSONLoader.options, ...options};\n  options.json = {...GeoJSONLoader.options.geojson, ...options.geojson};\n\n  const geojsonIterator = parseJSONInBatches(asyncIterator, options);\n\n  switch (options.gis.format) {\n    case 'binary':\n      return makeBinaryGeometryIterator(geojsonIterator);\n    default:\n      return geojsonIterator as AsyncIterable<TableBatch>;\n  }\n}\n\nasync function* makeBinaryGeometryIterator(geojsonIterator) {\n  for await (const batch of geojsonIterator) {\n    batch.data = geojsonToBinary(batch.data);\n    yield batch;\n  }\n}\n","import {ALL_FIELD_TYPES, DATASET_FORMATS} from '@kepler.gl/constants';\nimport {Field} from '@kepler.gl/types';\nimport {Feature} from 'geojson';\nimport {geojsonFeaturesToArrow, ArrowLoader} from '@loaders.gl/arrow';\nimport {\n  Field as ArrowField,\n  Float64 as ArrowFloat,\n  Int32 as ArrowInteger,\n  Bool as ArrowBool,\n  List as ArrowList,\n  Utf8 as ArrowString,\n  makeVector,\n  vectorFromArray,\n  Vector as ArrowVector,\n  Schema as ArrowSchema,\n  Table as ArrowTable,\n  makeBuilder,\n  RecordBatch as ArrowRecordBatch\n} from 'apache-arrow';\nimport {generateHashIdFromString} from '@kepler.gl/utils';\nimport {_BrowserFileSystem as BrowserFileSystem, parseInBatches} from '@loaders.gl/core';\nimport {ShapefileLoader} from '@loaders.gl/shapefile';\nimport {CSVLoader} from '@loaders.gl/csv';\nimport {_GeoJSONLoader as GeoJSONLoader} from '@loaders.gl/json';\nimport {\n  FileCacheItem,\n  ProcessFileDataContent,\n  isArrowData,\n  makeProgressIterator,\n  processFileData,\n  readBatch,\n  readFileInBatches\n} from '@kepler.gl/processors';\nimport {ProcessDropFilesOutput} from './project-utils';\n\nconst CSV_LOADER_OPTIONS = {\n  shape: 'object-row-table',\n  dynamicTyping: false // not working for now\n};\n\nconst ARROW_LOADER_OPTIONS = {\n  shape: 'arrow-table'\n};\n\nconst JSON_LOADER_OPTIONS = {\n  shape: 'object-row-table',\n  // instruct loaders.gl on what json paths to stream\n  jsonpaths: [\n    '$', // JSON Row array\n    '$.features', // GeoJSON\n    '$.datasets' // KeplerGL JSON\n  ]\n};\n\nconst SHAPEFILE_LOADER_OPTIONS = {\n  // TODO: loaders.gl only support shape: 'geojson-table' for now\n  shape: 'object-row-table'\n};\n\nexport async function loadArrowFile(file: File) {\n  // const batches = await readFileInBatches({file, fileCache, loaders, loadOptions});\n  const loadOptions = {\n    arrow: ARROW_LOADER_OPTIONS,\n    metadata: true,\n    gis: {reproject: true}\n  };\n  const loaders = [ArrowLoader];\n  const batchIterator = await parseInBatches(file, loaders, loadOptions);\n  const progressIterator = makeProgressIterator(batchIterator, {size: file.size});\n  const batches = readBatch(progressIterator, file.name);\n\n  let result = await batches.next();\n  let content: ProcessFileDataContent = {data: [], fileName: ''};\n  let parsedData: FileCacheItem[] = [];\n\n  while (!result.done) {\n    content = result.value as ProcessFileDataContent;\n    result = await batches.next();\n    if (result.done) {\n      parsedData = await processFileData({\n        content,\n        fileCache: []\n      });\n      break;\n    }\n  }\n\n  const arrowTable = new ArrowTable(content.data as ArrowRecordBatch[]);\n  return {\n    fileName: content.fileName,\n    dataId: parsedData[0].info.id,\n    arrowTable,\n    arrowFormatData: parsedData[0]\n  };\n}\n\n/**\n * Handle dropped files, and return the file name, arrowTable and arrowFormatData\n * We assume that only one dataset will be dropped at a time\n * @param files The files dropped by user\n * @returns\n */\nexport async function loadDroppedFile(files: File[]): Promise<ProcessDropFilesOutput> {\n  const loaders = [ShapefileLoader, CSVLoader, ArrowLoader, GeoJSONLoader];\n  const fileCache: FileCacheItem[] = [];\n  const droppedFilesFS = new BrowserFileSystem(files);\n\n  // otherwise check if there is a file with extension .shp\n  const shpFile = files.find(file => file.name.endsWith('.shp'));\n  // use shpFile if it exists, otherwise use the first file\n  const file = shpFile || files[0];\n\n  const loadOptions = {\n    csv: CSV_LOADER_OPTIONS,\n    arrow: ARROW_LOADER_OPTIONS,\n    json: JSON_LOADER_OPTIONS,\n    shapefile: SHAPEFILE_LOADER_OPTIONS,\n    metadata: true,\n    fetch: droppedFilesFS.fetch,\n    gis: {reproject: true},\n    shp: {_maxDimensions: Number.MAX_SAFE_INTEGER}\n  };\n\n  const batches = await readFileInBatches({file, fileCache, loaders, loadOptions});\n  let result = await batches.next();\n  let content: ProcessFileDataContent = {data: [], fileName: ''};\n  let parsedData: FileCacheItem[] = [];\n\n  // let totalRowCount = 0;\n  while (!result.done) {\n    // get progress\n    // totalRowCount += result.value.progress.rowCountInBatch;\n    content = result.value as ProcessFileDataContent;\n    result = await batches.next();\n    if (result.done) {\n      if (shpFile) {\n        // content.data is Feature[] array, so we need to convert it to JSON shape\n        // {type: \"FeatureCollection\", features: Feature[]}\n        content.data = {\n          type: 'FeatureCollection',\n          features: content.data as Feature[]\n        };\n      }\n      parsedData = await processFileData({\n        content,\n        fileCache: []\n      });\n      break;\n    }\n  }\n\n  if (isArrowData(content.data)) {\n    const arrowTable = new ArrowTable(content.data as ArrowRecordBatch[]);\n    return {datasets: [{fileName: content.fileName, arrowTable, arrowFormatData: parsedData[0]}]};\n  }\n\n  // convert other spatial data format e.g. GeoJSON, Shapefile to arrow table\n  return {\n    datasets: [\n      {\n        fileName: content.fileName,\n        ...convertFileCacheItemToArrowTable(parsedData[0])\n      }\n    ]\n  };\n}\n\n/**\n * Read FileCacheItem, and use the file extension info.label to get the file type,\n * if the file type is not arrow, then convert the data.rows to ArrowTable using the data.fields info.\n */\nexport function convertFileCacheItemToArrowTable(fileCacheItem: FileCacheItem) {\n  const {data} = fileCacheItem;\n  // get column values from data.rows\n  const columnValues: unknown[][] = [];\n  for (let i = 0; i < data.rows.length; i++) {\n    const row = data.rows[i];\n    for (let j = 0; j < row.length; j++) {\n      columnValues[j] = columnValues[j] || [];\n      columnValues[j].push(row[j]);\n    }\n  }\n  // get field and vector from data.fields and columnValues\n  const fields: ArrowField[] = [];\n  const vectors: {[key: string]: ArrowVector} = {};\n  // const arrowColumns: {[key: string]: ArrowData} = {};\n\n  for (let i = 0; i < data.fields.length; i++) {\n    const field: Field = data.fields[i];\n    const {name, type} = field;\n    const {arrowField, arrowVector} = KeplerFieldTypeToArrowFieldType(name, type, columnValues[i]);\n    fields.push(arrowField);\n    vectors[name] = arrowVector;\n    // arrowColumns[name] = arrowVector.data[0];\n  }\n  // make a new ArrowTable\n  const schema = new ArrowSchema(fields);\n  // construct arrow Batches from vectors\n  // const batches = new ArrowRecordBatch(arrowColumns);\n  // @ts-ignore TODO fix me\n  const arrowTable = new ArrowTable(schema, vectors);\n  // append metadata from geoarrow fields to fileCacheItem.data.fields for geometry field\n  for (let i = 0; i < fields.length; i++) {\n    const field = fields[i];\n    if (data.fields[i].type === ALL_FIELD_TYPES.geojson) {\n      const metadata = field.metadata;\n      if (metadata) {\n        data.fields[i].metadata = metadata;\n      }\n    }\n  }\n  // set fileCacheItem.cols\n  const cols = [...Array(arrowTable.numCols).keys()].map(i => arrowTable.getChildAt(i));\n  fileCacheItem.data.cols = cols;\n  // remove fileCacheItem.data.rows\n  delete fileCacheItem.data.rows;\n  fileCacheItem.data.rows = [];\n  // change fileCacheItem.info.format to arrow\n  fileCacheItem.info.format = DATASET_FORMATS.arrow;\n  // generate unique id using fileName string\n  const id = generateHashIdFromString(fileCacheItem.info.label);\n  fileCacheItem.info.id = id;\n  // fileCacheItem.data.fields = [fileCacheItem.data.fields[0]];\n  return {arrowTable, arrowFormatData: fileCacheItem};\n}\n\nfunction KeplerFieldTypeToArrowFieldType(name: string, type: string, values: unknown[]) {\n  if (type === ALL_FIELD_TYPES.real) {\n    const arrowField = new ArrowField(name, new ArrowFloat());\n    const arrowVector = makeVector(new Float64Array(values as number[]));\n    return {arrowField, arrowVector};\n  } else if (type === ALL_FIELD_TYPES.integer) {\n    const arrowField = new ArrowField(name, new ArrowInteger());\n    const arrowVector = makeVector(new Int32Array(values as number[]));\n    return {arrowField, arrowVector};\n  } else if (type === ALL_FIELD_TYPES.boolean) {\n    const arrowField = new ArrowField(name, new ArrowBool());\n    const arrowVector = makeVector(new Uint8Array(values as number[]));\n    return {arrowField, arrowVector};\n    // NOTE: kepler.gl use new Date(raw value) for date and timestamp type, so we need to store raw values here\n    // } else if (type === ALL_FIELD_TYPES.date) {\n    //   const arrowField = new ArrowField(name, new ArrowDate(ArrowDateUnit.DAY));\n    //   // @ts-ignore fix me\n    //   const arrowVector = vectorFromArray(values.map(v => new Date(v)));\n    //   return {arrowField, arrowVector};\n    // } else if (type === ALL_FIELD_TYPES.timestamp) {\n    //   const arrowField = new ArrowField(name, new TimestampSecond());\n    //   const arrowVector = vectorFromArray(\n    //     // @ts-ignore fix me\n    //     values.map(v => new Date(v)),\n    //     new TimestampSecond()\n    //   );\n    //   return {arrowField, arrowVector};\n  } else if (type === ALL_FIELD_TYPES.array) {\n    const arrowField = new ArrowField(\n      name,\n      new ArrowList(new ArrowField(`${name}-list`, new ArrowFloat()))\n    );\n    const arrowVector = vectorFromArray(values);\n    return {arrowField, arrowVector};\n  } else if (type === ALL_FIELD_TYPES.geojson) {\n    // convert geojson column to arrow vector\n    const {field, geometry} = geojsonFeaturesToArrow(name, values as Feature[]);\n    return {arrowField: field, arrowVector: geometry};\n  } else {\n    const arrowField = new ArrowField(name, new ArrowString());\n    const utf8Builder = makeBuilder({type: new ArrowString(), nullValues: [null, 'n/a']});\n    for (let i = 0; i < values.length; i++) {\n      utf8Builder.append(values[i] as string);\n    }\n    const arrowVector = utf8Builder.finish().toVector();\n    return {arrowField, arrowVector};\n  }\n}\n\n// function to convert arraybuffer to base64 string\nexport function arrayBufferToBase64(buffer: ArrayBuffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n\n// function to convert base64 string to arraybuffer\nexport function base64ToArrayBuffer(base64: string) {\n  var binary_string = atob(base64);\n  var len = binary_string.length;\n  var bytes = new Uint8Array(len);\n  for (var i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\n// download string to file in browser using anchor tag\nexport function downloadStringToFile(content: string, fileName: string, contentType: string) {\n  const a = document.createElement('a');\n  const file = new Blob([content], {type: contentType});\n  a.href = URL.createObjectURL(file);\n  a.download = fileName;\n  a.click();\n  URL.revokeObjectURL(a.href);\n}\n","import {arrayBufferToBase64, base64ToArrayBuffer, loadArrowFile} from './file-utils';\nimport {SavedConfigV1} from '@kepler.gl/schemas';\nimport {GeoDaState} from '@/store';\nimport {WeightsMeta} from 'geoda-wasm';\nimport {Table as ArrowTable, tableToIPC} from 'apache-arrow';\nimport {DATASET_FORMATS} from '@kepler.gl/constants';\nimport {WeightsProps} from '@/reducers/weights-reducer';\nimport {DatasetProps} from '@/reducers/file-reducer';\n\ntype SavedWeightsProps = {\n  weightsMeta: WeightsMeta;\n  weights: string;\n  offsets: string;\n  isNew?: boolean;\n  datasetId: string;\n};\n\nexport type LoadedGeoDaConfig = {\n  ai: GeoDaState['root']['ai'];\n  uiState: GeoDaState['root']['uiState'];\n  weights: WeightsProps[];\n  plots: GeoDaState['root']['plots'];\n  regressions: GeoDaState['root']['regressions'];\n  dashboard: GeoDaState['root']['dashboard'];\n};\n\nexport type SavedGeoDaConfig = {\n  ai: GeoDaState['root']['ai'];\n  uiState: GeoDaState['root']['uiState'];\n  weights: Array<SavedWeightsProps>;\n  plots: GeoDaState['root']['plots'];\n  regressions: GeoDaState['root']['regressions'];\n  dashboard: GeoDaState['root']['dashboard'];\n};\n\nexport type GeoDaProject = {\n  datasets: Array<{\n    fileName: string;\n    arrowTable: string;\n    dataId: string;\n  }>;\n  keplerConfig: SavedConfigV1['config'];\n  geodaConfig: SavedGeoDaConfig;\n};\n\nexport type ProcessDropFilesOutput = {\n  datasets: Array<DatasetProps>;\n  keplerConfig?: SavedConfigV1['config'];\n  geodaConfig?: LoadedGeoDaConfig;\n};\n\nfunction getDataFormat(fileName: string) {\n  const suffix = fileName.split('.').pop()?.toLocaleLowerCase();\n\n  if (suffix === 'arrow') {\n    return DATASET_FORMATS.arrow;\n  } else if (suffix === 'geojson') {\n    return DATASET_FORMATS.geojson;\n  } else if (suffix === 'shp') {\n    return DATASET_FORMATS.arrow;\n  } else if (suffix === 'csv') {\n    return DATASET_FORMATS.csv;\n  }\n  return '';\n}\n\nexport async function loadGeoDaProject(geodaFile: File): Promise<ProcessDropFilesOutput> {\n  const geodaFileContent = await geodaFile.text();\n  const geodaFileData: GeoDaProject = JSON.parse(geodaFileContent);\n\n  // process datasets\n  const datasets: Array<DatasetProps> = [];\n  for (let i = 0; i < geodaFileData.datasets.length; i++) {\n    const dataset = geodaFileData.datasets[i];\n    // convert arrowTable from base64 string to ArrayBuffer\n    const arrowTableBuffer = Buffer.from(dataset.arrowTable, 'base64').buffer;\n    // TODO: this could be simplified as\n    // const apacheArrowTable = arrow.tableFromIPC([new Uint8Array(arrayBuffer)]);\n    // update the file name if it is not ended with .arrow, otherwise the kepler.gl will read it according to the file suffix\n    const fileName = dataset.fileName.endsWith('.arrow')\n      ? dataset.fileName\n      : `${dataset.fileName}.arrow`;\n    // create a File object from the ArrayBuffer\n    const arrowFile = new File([arrowTableBuffer], fileName);\n    // load arrow file\n    const {arrowTable, arrowFormatData} = await loadArrowFile(arrowFile);\n    datasets.push({\n      fileName: dataset.fileName,\n      dataId: dataset.dataId,\n      arrowTable,\n      arrowFormatData: {\n        ...arrowFormatData,\n        info: {\n          ...arrowFormatData.info,\n          // restore the original file name if it is not ended with .arrow\n          label: dataset.fileName,\n          id: dataset.dataId,\n          format: getDataFormat(dataset.fileName)\n        }\n      }\n    });\n  }\n\n  // load geodaConfig\n  const geodaConfig = loadGeoDaConfig(geodaFileData.geodaConfig);\n\n  return {\n    datasets,\n    keplerConfig: geodaFileData.keplerConfig,\n    geodaConfig\n  };\n}\n\nfunction saveWeights(weights: WeightsProps[]): SavedWeightsProps[] {\n  // save the weights.data as base64 string\n  const savedWeights = weights.map((w: WeightsProps) => {\n    const values = w.weights;\n    const offsets: number[] = [];\n    // flat the values from number[][] to number[], and get the offsets of each row\n    const flatValues = values.reduce((accu, value) => {\n      const offset = accu.length;\n      offsets.push(offset);\n      accu.push(...value);\n      return accu;\n    }, []);\n\n    return {\n      ...w,\n      weights: arrayBufferToBase64(new Uint32Array(flatValues).buffer),\n      offsets: arrayBufferToBase64(new Uint32Array(offsets).buffer)\n    };\n  });\n\n  return savedWeights;\n}\n\nfunction loadWeights(savedWeights: SavedWeightsProps[]): WeightsProps[] {\n  const weights: WeightsProps[] = savedWeights.map((w: SavedWeightsProps) => {\n    const valuesString = w.weights;\n    const offsetsString = w.offsets;\n    const values = new Uint32Array(base64ToArrayBuffer(valuesString));\n    const offsets = new Uint32Array(base64ToArrayBuffer(offsetsString));\n    const neighbors = [];\n\n    for (let i = 0; i < offsets.length; i++) {\n      const start = offsets[i];\n      const end = i + 1 < offsets.length ? offsets[i + 1] : values.length;\n      const neighborIds = values.slice(start, end);\n      neighbors.push(Array.from(neighborIds));\n    }\n\n    return {\n      datasetId: w.datasetId,\n      weightsMeta: w.weightsMeta,\n      weights: neighbors,\n      ...(w.isNew ? {isNew: w.isNew} : {})\n    };\n  });\n\n  return weights;\n}\n\nexport function saveGeoDaConfig(root: GeoDaState['root']): SavedGeoDaConfig {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {datasets, ...geodaConfig} = root;\n\n  // save the weights as ArrayBuffer in format of base64 string\n  const savedWeights = saveWeights(geodaConfig.weights);\n\n  const outputConfig = {\n    ...geodaConfig,\n    uiState: {\n      ...geodaConfig.uiState,\n      showSaveProjectModal: false\n    },\n    weights: savedWeights\n  };\n\n  return outputConfig;\n}\n\n/**\n * Load the GeoDa config from the saved GeoDa config\n * @param geodaConfig The saved GeoDa config\n * @returns LoadedGeoDaConfig\n */\nexport function loadGeoDaConfig(geodaConfig: SavedGeoDaConfig): LoadedGeoDaConfig {\n  // load the weights from base64 string to ArrayBuffer\n  const weights = loadWeights(geodaConfig.weights);\n\n  const updatedTextItems = geodaConfig.dashboard.textItems?.map(item => {\n    return {\n      ...item,\n      content: JSON.stringify(item.content) || ''\n    };\n  });\n\n  return {\n    ai: geodaConfig.ai,\n    uiState: geodaConfig.uiState,\n    weights,\n    plots: geodaConfig.plots,\n    regressions: geodaConfig.regressions,\n    // @ts-ignore textItems is not correctly typed since content has to be string instead of EditorState JSON object when loading from file\n    dashboard: {\n      ...geodaConfig.dashboard,\n      ...(updatedTextItems ? {textItems: updatedTextItems} : {})\n    }\n  };\n}\n\n/**\n * Convert the Apache Arrow table to base64 string\n * @param arrowTable Apache Arrow table\n * @returns Base64 string of the Apache Arrow table\n */\nexport function getArrowTableAsBase64(arrowTable: ArrowTable) {\n  const bufferArray = tableToIPC(arrowTable);\n  return arrayBufferToBase64(bufferArray.buffer);\n}\n","'use client';\n\nimport type {TextAreaProps} from '@nextui-org/react';\n\nimport React from 'react';\n// eslint-disable-next-line no-duplicate-imports\nimport {Textarea} from '@nextui-org/react';\n\nimport {cn} from '../common/cn';\n\nconst PromptInput = React.forwardRef<HTMLTextAreaElement, TextAreaProps>(\n  ({classNames = {}, ...props}, ref) => {\n    return (\n      <Textarea\n        ref={ref}\n        aria-label=\"Prompt\"\n        className=\"min-h-[40px]\"\n        classNames={{\n          ...classNames,\n          label: cn('hidden', classNames?.label),\n          input: cn('py-0', classNames?.input)\n        }}\n        minRows={1}\n        placeholder=\"Enter a prompt here\"\n        radius=\"lg\"\n        variant=\"bordered\"\n        {...props}\n      />\n    );\n  }\n);\n\nexport default PromptInput;\n\nPromptInput.displayName = 'PromptInput';\n","import {Button} from '@nextui-org/react';\nimport {Icon} from '@iconify/react';\nimport {useAudioRecorder} from 'react-audio-voice-recorder';\nimport {useEffect, useState} from 'react';\n\nexport default function VoiceChatButton({\n  onRecordingComplete\n}: {\n  onRecordingComplete: (voice: Blob) => Promise<void>;\n}) {\n  const [shouldSave, setShouldSave] = useState(false);\n\n  const {isRecording, recordingBlob, startRecording, stopRecording} = useAudioRecorder(\n    {\n      noiseSuppression: true,\n      echoCancellation: true\n    },\n    err => console.table(err) // onNotAllowedOrFound\n  );\n\n  const onTalkClicked = async () => {\n    if (isRecording) {\n      stopRecording();\n      setShouldSave(true);\n    } else {\n      startRecording();\n    }\n  };\n\n  useEffect(() => {\n    if (shouldSave && recordingBlob) {\n      onRecordingComplete(recordingBlob);\n      setShouldSave(false);\n    }\n  }, [onRecordingComplete, recordingBlob, shouldSave]);\n\n  return (\n    <Button\n      size=\"sm\"\n      startContent={<Icon className=\"text-default-500\" icon=\"solar:soundwave-linear\" width={18} />}\n      endContent={\n        isRecording && (\n          <svg\n            className=\"h-4 w-4 animate-spin text-current\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <circle className=\"opacity-75\" cx=\"12\" cy=\"12\" r=\"4\" strokeWidth=\"0\" fill=\"red\" />\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"1\"\n            />\n            <path\n              className=\"opacity-50\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              fill=\"currentColor\"\n              strokeWidth=\"2\"\n            />\n          </svg>\n        )\n      }\n      variant=\"flat\"\n      onClick={onTalkClicked}\n    >\n      Talk to Ask\n    </Button>\n  );\n}\n","'use client';\n\nimport React from 'react';\n\nimport {Button, Tooltip, ScrollShadow, Badge} from '@nextui-org/react';\nimport {Icon} from '@iconify/react';\n\nimport {cn} from '../common/cn';\n\nimport PromptInput from './prompt-input';\nimport VoiceChatButton from './voice-chat-button';\n\ntype PromptInputWithBottomActionsProps = {\n  onSendMessage: (message: string) => void;\n  onVoiceMessage: (voice: Blob) => Promise<string>;\n  onScreenshotClick?: () => void;\n  onRemoveScreenshot?: () => void;\n  enableAttachFile?: boolean;\n  screenCaptured?: string;\n  defaultPromptText?: string;\n};\n\nexport default function Component({\n  onSendMessage,\n  onVoiceMessage,\n  onScreenshotClick,\n  onRemoveScreenshot,\n  enableAttachFile,\n  screenCaptured,\n  defaultPromptText = ''\n}: PromptInputWithBottomActionsProps) {\n  const ideas = [\n    {\n      title: 'Create a quantile map ',\n      description: 'using variable X'\n    },\n    {\n      title: 'Create a histogram ',\n      description: 'using variable X'\n    },\n    {\n      title: 'Create a spatial weights ',\n      description: 'queen, rook, or k-nearest neighbor'\n    },\n    {\n      title: 'Run regression analysis ',\n      description: 'Y ~ X1 + X2 + X3'\n    }\n  ];\n\n  const [prompt, setPrompt] = React.useState<string>(defaultPromptText);\n\n  const onSendClick = () => {\n    onSendMessage(prompt);\n    setPrompt('');\n  };\n\n  const [isShiftPressed, setIsShiftPressed] = React.useState(false);\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.shiftKey) {\n      setIsShiftPressed(true);\n    }\n    if (event.key === 'Enter' && isShiftPressed) {\n      if (prompt.length > 0) {\n        onSendClick();\n      }\n      // prevent new line\n      event.preventDefault();\n    }\n  };\n\n  const onKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.shiftKey) {\n      setIsShiftPressed(false);\n    }\n  };\n\n  const onClickIdea = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const {textContent} = e.currentTarget;\n    setPrompt(textContent || '');\n  };\n\n  const onRecordingComplete = async (voiceBlob: Blob) => {\n    const voice = await onVoiceMessage(voiceBlob);\n    setPrompt(voice);\n  };\n\n  return (\n    <div className=\"flex w-full flex-col gap-4\">\n      <ScrollShadow hideScrollBar className=\"flex flex-nowrap gap-2\" orientation=\"horizontal\">\n        <div className=\"flex gap-2\">\n          {ideas.map(({title, description}, index) => (\n            <Button\n              onClick={onClickIdea}\n              key={index}\n              className=\"flex h-14 flex-col items-start gap-0\"\n              variant=\"flat\"\n            >\n              <p>{title}</p>\n              <p className=\"text-default-500\">{description}</p>\n            </Button>\n          ))}\n        </div>\n      </ScrollShadow>\n      <form className=\"flex w-full flex-col items-start rounded-medium bg-default-100 transition-colors hover:bg-default-200/70\">\n        <div className=\"group flex gap-2 px-4 pt-4\">\n          {screenCaptured && screenCaptured.length > 0 && (\n            <Badge\n              isOneChar\n              className=\"opacity-0 group-hover:opacity-100\"\n              content={\n                <Button\n                  isIconOnly\n                  radius=\"full\"\n                  size=\"sm\"\n                  variant=\"light\"\n                  onPress={onRemoveScreenshot}\n                >\n                  <Icon className=\"text-foreground\" icon=\"iconamoon:close-thin\" width={16} />\n                </Button>\n              }\n            >\n              <img\n                className=\"h-14 w-14 rounded-small border-small border-default-200/50 object-cover\"\n                src={screenCaptured}\n              />\n            </Badge>\n          )}\n        </div>\n        <PromptInput\n          classNames={{\n            inputWrapper: '!bg-transparent shadow-none',\n            innerWrapper: 'relative',\n            input: 'pt-1 pl-2 pb-6 !pr-10 text-medium'\n          }}\n          endContent={\n            <div className=\"flex items-end gap-2\">\n              <Tooltip showArrow content=\"Send message\">\n                <Button\n                  isIconOnly\n                  color={!prompt ? 'default' : 'primary'}\n                  isDisabled={!prompt}\n                  radius=\"lg\"\n                  size=\"sm\"\n                  variant=\"solid\"\n                  onClick={onSendClick}\n                >\n                  <Icon\n                    className={cn(\n                      '[&>path]:stroke-[2px]',\n                      !prompt ? 'text-default-600' : 'text-primary-foreground'\n                    )}\n                    icon=\"solar:arrow-up-linear\"\n                    width={20}\n                  />\n                </Button>\n              </Tooltip>\n            </div>\n          }\n          minRows={3}\n          radius=\"lg\"\n          value={prompt}\n          variant=\"flat\"\n          onValueChange={setPrompt}\n          onKeyDown={onKeyDown}\n          onKeyUp={onKeyUp}\n        />\n        <div className=\"flex w-full items-center justify-between  gap-2 overflow-scroll px-4 pb-4\">\n          <div className=\"flex w-full gap-1 md:gap-3\">\n            <Button\n              size=\"sm\"\n              startContent={\n                <Icon\n                  className=\"text-default-500\"\n                  icon=\"solar:gallery-minimalistic-linear\"\n                  width={18}\n                />\n              }\n              variant=\"flat\"\n              onClick={onScreenshotClick}\n            >\n              Take a Screenshot to Ask\n            </Button>\n            <VoiceChatButton onRecordingComplete={onRecordingComplete} />\n            {enableAttachFile && (\n              <Button\n                size=\"sm\"\n                startContent={\n                  <Icon className=\"text-default-500\" icon=\"solar:paperclip-linear\" width={18} />\n                }\n                variant=\"flat\"\n              >\n                Attach\n              </Button>\n            )}\n          </div>\n          <p className=\"py-1 text-tiny text-default-400\">{prompt.length}/2000</p>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import {useMemo, useState} from 'react';\nimport {ALL_FIELD_TYPES} from '@kepler.gl/constants';\nimport {Field} from '@kepler.gl/types';\nimport {addLayer, addTableColumn, reorderLayer} from '@kepler.gl/actions';\n\nimport {LisaCallbackOutput} from '@/ai/assistant/callbacks/callback-lisa';\nimport {MAP_ID} from '@/constants';\nimport {createUniqueValuesMap} from '@/utils/mapping-functions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {KeplerMapContainer} from '../common/kepler-map-container';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomLisaOutput(\n  functionOutput: CustomFunctionOutputProps<unknown, unknown>\n): functionOutput is LisaCallbackOutput {\n  return functionOutput.type === 'lisa';\n}\n\n/**\n * Custom LISA Message\n */\nexport const CustomLocalMoranMessage = ({\n  functionOutput,\n  functionArgs\n}: {\n  functionOutput: LisaCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n\n  const lm = functionOutput.data;\n  const {\n    datasetId,\n    variableName,\n    permutations,\n    clusters: metaDataOfClusters\n  } = functionOutput.result;\n\n  // use selector to get layerOrder\n  const layerOrder = useSelector((state: GeoDaState) => state.keplerGl[MAP_ID].visState.layerOrder);\n\n  // get dataset from redux store\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  const updateLayer = useMemo(() => {\n    if (!lm) {\n      return null;\n    }\n\n    // get unique values from clusters\n    const uniqueValues = Array.from(new Set(lm.clusters));\n\n    // create new field\n    const newFieldName = `lm_${variableName}`;\n    const fieldsLength = keplerDataset.fields.length;\n    const newField: Field = {\n      id: newFieldName,\n      name: newFieldName,\n      displayName: newFieldName,\n      format: '',\n      type: ALL_FIELD_TYPES.integer,\n      analyzerType: 'INT',\n      fieldIdx: fieldsLength,\n      valueAccessor: (d: any) => {\n        return keplerDataset.dataContainer.valueAt(d.index, fieldsLength);\n      }\n    };\n\n    // Add a new column without data first, so it can avoid error from deduceTypeFromArray()\n    dispatch(addTableColumn(keplerDataset.id, newField, lm.clusters));\n\n    const hexColors = metaDataOfClusters.map(cluster => cluster.color);\n    const legendLabels = metaDataOfClusters.map(cluster => cluster.label);\n\n    const label = `lisa_${variableName}_${permutations}`;\n    // create custom scale map\n    const newLayer = createUniqueValuesMap({\n      dataset: keplerDataset,\n      uniqueValues: uniqueValues,\n      hexColors,\n      legendLabels,\n      mappingType: label,\n      colorFieldName: newFieldName\n    });\n\n    // dispatch to add new layer in kepler.gl\n    dispatch(addLayer(newLayer, datasetId));\n\n    // remove newLayer from layerOrder\n    const otherLayers = layerOrder.filter((id: string) => id !== newLayer.id);\n\n    // dispatch to hide the layer in the layerOrder\n    dispatch(reorderLayer([...otherLayers]));\n\n    return newLayer.id;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, functionArgs, lm]);\n\n  const [hide, setHide] = useState(false);\n\n  // handle click event\n  const onClick = () => {\n    if (!lm) {\n      console.error('Local Moran data is unavailable or invalid.');\n      return;\n    }\n\n    // find other layers except updateLayer\n    const otherLayers = layerOrder.filter((id: string) => id !== updateLayer);\n    // new order of layers\n    const newOrder = [updateLayer, ...otherLayers];\n    dispatch(reorderLayer(newOrder));\n\n    // hide the button once clicked\n    setHide(true);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {!hide && (\n        <>\n          <div className=\"pointer-events-none h-[180px] w-full\">\n            {updateLayer && <KeplerMapContainer layerId={updateLayer} mapIndex={1} />}\n          </div>\n        </>\n      )}\n      <CustomCreateButton onClick={onClick} hide={hide} label=\"Click to Add This Map\" />\n    </div>\n  );\n};\n","import {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {addPlot} from '@/actions/plot-actions';\nimport {HistogramCallbackOutput} from '@/ai/assistant/callbacks/callback-histogram';\nimport {HistogramPlot} from '../plots/histogram-plot';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {GeoDaState} from '@/store';\nimport {HistogramPlotStateProps} from '@/reducers/plot-reducer';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomHistogramOutput(\n  props: CustomFunctionOutputProps<unknown, unknown>\n): props is HistogramCallbackOutput {\n  return props.type === 'histogram';\n}\n\n/**\n * Custom Histogram Message\n */\nexport const CustomHistogramMessage = ({\n  functionOutput\n}: {\n  functionOutput: HistogramCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n\n  const {id, datasetId, numberOfBins, variableName} = functionOutput.result;\n  const histogram = functionOutput.data;\n\n  const histogramPlotProps: HistogramPlotStateProps = {\n    id,\n    datasetId,\n    type: 'histogram',\n    variable: variableName,\n    numberOfBins,\n    data: histogram || []\n  };\n\n  // get plot from redux store\n  const plot = useSelector((state: GeoDaState) => state.root.plots.find(p => p.id === id));\n  const [hide, setHide] = useState(Boolean(plot) || false);\n\n  // handle click event\n  const onClick = () => {\n    if (histogram) {\n      // dispatch action to add plot\n      dispatch(addPlot({...histogramPlotProps, isNew: true}));\n      // hide the button once clicked\n      setHide(true);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      {!hide && (\n        <div className=\"h-[280px] w-full \">\n          <HistogramPlot props={histogramPlotProps} />\n        </div>\n      )}\n      <CustomCreateButton onClick={onClick} hide={hide} label=\"Click to Add This Histogram\" />\n    </div>\n  );\n};\n","import {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {addPlot} from '@/actions/plot-actions';\nimport {ScatterCallbackOutput} from '@/ai/assistant/callbacks/callback-scatter';\nimport {Scatterplot} from '../plots/scatter-plot';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {GeoDaState} from '@/store';\nimport {ScatterPlotStateProps} from '@/reducers/plot-reducer';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomScatterPlotOutput(\n  props: CustomFunctionOutputProps<unknown, unknown>\n): props is ScatterCallbackOutput {\n  return props.type === 'scatter';\n}\n\n/**\n * Custom Scatter Plot Message\n */\nexport const CustomScatterPlotMessage = ({\n  functionOutput\n}: {\n  functionOutput: ScatterCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n\n  const {id, datasetId, variableX, variableY} = functionOutput.result;\n\n  const scatterPlotProps: ScatterPlotStateProps = {\n    id,\n    datasetId,\n    type: 'scatter',\n    variableX: variableX,\n    variableY: variableY\n  };\n\n  // get plot from redux store\n  const plot = useSelector((state: GeoDaState) => state.root.plots.find(p => p.id === id));\n  const [hide, setHide] = useState(Boolean(plot) || false);\n\n  // handle click event\n  const onClick = () => {\n    // dispatch action to update redux state with the new scatterplot\n    dispatch(addPlot({...scatterPlotProps, isNew: true}));\n    // hide the button once clicked\n    setHide(true);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {!hide && (\n        <div className=\"h-[280px] w-full\">\n          <Scatterplot props={scatterPlotProps} />\n        </div>\n      )}\n      <CustomCreateButton onClick={onClick} hide={hide} label=\"Click to Add This Scatterplot\" />\n    </div>\n  );\n};\n","import {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {addPlot} from '@/actions/plot-actions';\nimport {BubbleChartCallbackOutput} from '@/ai/assistant/callbacks/callback-bubble';\nimport {BubbleChart} from '../plots/bubble-chart-plot';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {GeoDaState} from '@/store';\nimport {BubbleChartStateProps} from '@/reducers/plot-reducer';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomBubbleChartOutput(\n  props: CustomFunctionOutputProps<unknown, unknown>\n): props is BubbleChartCallbackOutput {\n  return props.type === 'bubble';\n}\n\n/**\n * Custom Bubble Chart Message\n */\nexport const CustomBubbleChartMessage = ({\n  functionOutput\n}: {\n  functionOutput: BubbleChartCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n\n  const {id, datasetId, variableX, variableY, variableSize, variableColor} = functionOutput.result;\n\n  const bubbleChartProps: BubbleChartStateProps = {\n    id,\n    datasetId,\n    type: 'bubble',\n    variableX: variableX,\n    variableY: variableY,\n    variableSize: variableSize,\n    variableColor: variableColor\n  };\n\n  // get plot from redux store\n  const plot = useSelector((state: GeoDaState) => state.root.plots.find(p => p.id === id));\n  const [hide, setHide] = useState(Boolean(plot) || false);\n\n  // Handle click event\n  const onClick = () => {\n    // Dispatch action to update redux state with the new bubble chart\n    dispatch(addPlot({...bubbleChartProps, isNew: true}));\n    // Hide the button once clicked\n    setHide(true);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {!hide && (\n        <div className=\"h-[280px] w-full\">\n          <BubbleChart props={bubbleChartProps} />\n        </div>\n      )}\n      <CustomCreateButton onClick={onClick} hide={hide} label=\"Click to Add This Bubble Chart\" />\n    </div>\n  );\n};\n","import {Button} from '@nextui-org/react';\nimport {useState} from 'react';\n\nimport {addPlot} from '@/actions/plot-actions';\nimport {HeartIcon} from '../icons/heart';\nimport {BoxPlotCallbackOutput} from '@/ai/assistant/callbacks/callback-box';\nimport {BoxPlot} from '../plots/box-plot';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GreenCheckIcon} from '../icons/green-check';\nimport {GeoDaState} from '@/store';\nimport {BoxPlotStateProps} from '@/reducers/plot-reducer';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomBoxPlotOutput(\n  props: CustomFunctionOutputProps<unknown, unknown>\n): props is BoxPlotCallbackOutput {\n  return props.type === 'boxplot';\n}\n\n/**\n * Custom BoxPlot Message\n */\nexport const CustomBoxplotMessage = ({\n  functionOutput\n}: {\n  functionOutput: BoxPlotCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n\n  const {id, datasetId, variables, boundIQR} = functionOutput.result;\n  const boxplot = functionOutput.data;\n\n  // get plot from redux store\n  const plot = useSelector((state: GeoDaState) => state.root.plots.find(p => p.id === id));\n  const [hide, setHide] = useState(Boolean(plot) || false);\n\n  // handle click event\n  const onClick = () => {\n    // dispatch action to update redux state state.root.weights\n    dispatch(addPlot({...boxPlotProps, isNew: true}));\n    // hide the button once clicked\n    setHide(true);\n  };\n\n  if (!boxplot) {\n    return null;\n  }\n\n  const boxPlotProps: BoxPlotStateProps = {\n    id,\n    datasetId,\n    type: 'boxplot',\n    variables,\n    boundIQR,\n    data: boxplot\n  };\n\n  return (\n    <div className=\"w-full\">\n      {!hide && (\n        <div className=\"h-[280px] w-full\">\n          <BoxPlot props={boxPlotProps} />\n        </div>\n      )}\n      <Button\n        radius=\"full\"\n        className=\"mt-2 bg-gradient-to-tr from-pink-500 to-yellow-500 text-white shadow-none\"\n        onClick={onClick}\n        startContent={hide ? <GreenCheckIcon /> : <HeartIcon />}\n        isDisabled={hide}\n      >\n        Click to Add This Box Plot\n      </Button>\n    </div>\n  );\n};\n","import {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {addPlot} from '@/actions/plot-actions';\nimport {ParallelCoordinateCallbackOutput} from '@/ai/assistant/callbacks/callback-pcp';\nimport {ParallelCoordinatePlot} from '../plots/parallel-coordinate-plot';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {GeoDaState} from '@/store';\nimport {ParallelCoordinateStateProps} from '@/reducers/plot-reducer';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomParallelCoordinateOutput(\n  props: CustomFunctionOutputProps<unknown, unknown>\n): props is ParallelCoordinateCallbackOutput {\n  return props.type === 'parallel-coordinate';\n}\n\n/**\n * Custom PCP plot Message\n */\nexport const CustomParallelCoordinateMessage = ({\n  functionOutput\n}: {\n  functionOutput: ParallelCoordinateCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n\n  const {id, datasetId, variables} = functionOutput.result;\n\n  const parallelCoordinateProps: ParallelCoordinateStateProps = {\n    id,\n    datasetId,\n    type: 'parallel-coordinate',\n    variables\n  };\n\n  // get plot from redux store\n  const plot = useSelector((state: GeoDaState) => state.root.plots.find(p => p.id === id));\n  const [hide, setHide] = useState(Boolean(plot) || false);\n\n  // handle click event\n  const onClick = () => {\n    // dispatch action to update redux state\n    dispatch(addPlot({...parallelCoordinateProps, isNew: true}));\n    // hide the button once clicked\n    setHide(true);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {!hide && (\n        <div className=\"h-[280px] w-full\">\n          <ParallelCoordinatePlot props={parallelCoordinateProps} />\n        </div>\n      )}\n      <CustomCreateButton onClick={onClick} hide={hide} label=\"Click to Add This PCP Plot\" />\n    </div>\n  );\n};\n","import {useState} from 'react';\nimport {useDispatch} from 'react-redux';\n\nimport {addRegression} from '@/actions/regression-actions';\nimport {generateRandomId} from '@/utils/ui-utils';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {RegressionCallbackOutput} from '@/ai/assistant/callbacks/callback-regression';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomRegressionOutput(\n  functionOutput: CustomFunctionOutputProps<unknown, unknown>\n): functionOutput is RegressionCallbackOutput {\n  return functionOutput.type === 'regression';\n}\n\n/**\n * Custom Spreg Message\n */\nexport const CustomSpregMessage = ({\n  functionOutput\n}: {\n  functionOutput: RegressionCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const [hide, setHide] = useState(false);\n  const dispatch = useDispatch();\n\n  const regResult = functionOutput.data;\n\n  // handle click event\n  const onClick = () => {\n    // dispatch action to create regression and add to store\n    if (regResult) {\n      // generate random id\n      const id = generateRandomId();\n      dispatch(addRegression({id, type: 'regression', data: regResult, isNew: true}));\n      // hide the button once clicked\n      setHide(true);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <CustomCreateButton\n        onClick={onClick}\n        hide={hide}\n        label=\"Click to Add This Regression Result\"\n      />\n    </div>\n  );\n};\n","import {useMemo, useState} from 'react';\nimport {Layer} from '@kepler.gl/layers';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {createCustomScaleMap, createUniqueValuesMap} from '@/utils/mapping-functions';\nimport {KeplerMapContainer} from '../common/kepler-map-container';\nimport {reorderLayer, layerVisConfigChange, addLayer} from '@kepler.gl/actions';\nimport {MAP_ID, MappingTypes} from '@/constants';\nimport {ColorSelector} from '../common/color-selector';\nimport {getDefaultColorRange} from '@/utils/color-utils';\nimport {ColorRange} from '@kepler.gl/constants';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {MapCallbackOutput} from '@/ai/assistant/callbacks/callback-map';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\n/**\n * Type guard for Custom Map Output\n * @param functionOutput The function output\n * @returns The flag indicates the function output is a custom map output\n */\nexport function isCustomMapOutput(\n  functionOutput: CustomFunctionOutputProps<unknown, unknown>\n): functionOutput is MapCallbackOutput {\n  return functionOutput.type === 'mapping';\n}\n\n/**\n * Custom Map Message\n */\nexport const CustomMapMessage = ({\n  functionOutput,\n  functionArgs\n}: {\n  functionOutput: MapCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n\n  const {\n    datasetId,\n    classificationMethod: mappingType,\n    classificationValues\n  } = functionOutput.result;\n\n  const k =\n    mappingType === MappingTypes.UNIQUE_VALUES\n      ? classificationValues.length\n      : classificationValues.length + 1;\n\n  // use selector to get layerOrder\n  const layerOrder = useSelector((state: GeoDaState) => state.keplerGl[MAP_ID].visState.layerOrder);\n\n  // use selector to get layer\n  const layers = useSelector((state: GeoDaState) => state.keplerGl[MAP_ID].visState.layers);\n\n  // useState for selected color range\n  const [selectedColorRange, setSelectedColorRange] = useState(getDefaultColorRange(k));\n\n  // get dataset from redux store\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  const updateLayer = useMemo(() => {\n    const {variableName} = functionArgs;\n    const colorFieldName = variableName;\n    const label = `${mappingType}-${colorFieldName}-${k}`;\n    // check if there is already a layer with the same label\n    const existingLayer = layers.find((layer: Layer) => layer.config.label === label);\n\n    if (existingLayer && selectedColorRange) {\n      // then we just need to update the color range in the existing layer\n      const newVisCconfig = {\n        ...existingLayer.config.visConfig,\n        colorRange: {\n          ...selectedColorRange,\n          colorMap: existingLayer.config.visConfig.colorRange.colorMap.map(\n            (color: any, index: number) => {\n              return [color[0], selectedColorRange.colors[index]];\n            }\n          ),\n          colorLegend: existingLayer.config.visConfig.colorRange.colorLegend?.map(\n            (color: any, index: number) => {\n              return {...color, color: selectedColorRange.colors[index]};\n            }\n          )\n        }\n      };\n      dispatch(layerVisConfigChange(existingLayer, newVisCconfig));\n      return existingLayer.id;\n    }\n\n    let newLayer;\n\n    // create new layer\n    if (mappingType === 'unique values') {\n      newLayer = createUniqueValuesMap({\n        dataset: keplerDataset,\n        uniqueValues: classificationValues as number[],\n        legendLabels: classificationValues.map(v => v.toString()),\n        hexColors: selectedColorRange?.colors || [],\n        mappingType,\n        colorFieldName\n      });\n    } else {\n      newLayer = createCustomScaleMap({\n        dataset: keplerDataset,\n        breaks: classificationValues as number[],\n        mappingType,\n        colorFieldName,\n        colorRange: selectedColorRange\n      });\n    }\n\n    // dispatch to add new layer in kepler.gl\n    dispatch(addLayer(newLayer, datasetId));\n\n    // remove newLayer from layerOrder\n    const otherLayers = layerOrder.filter((id: string) => id !== newLayer.id);\n\n    // dispatch to hide the layer in the layerOrder\n    dispatch(reorderLayer([...otherLayers]));\n\n    return newLayer.id;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [classificationValues, dispatch, functionArgs, selectedColorRange]);\n\n  const [hide, setHide] = useState(layerOrder.includes(updateLayer) || false);\n\n  // handle click event\n  const onClick = () => {\n    // find other layers except updateLayer\n    const otherLayers = layerOrder.filter((id: string) => id !== updateLayer);\n    // new order of layers\n    const newOrder = [updateLayer, ...otherLayers];\n    dispatch(reorderLayer(newOrder));\n\n    // hide the button once clicked\n    setHide(true);\n  };\n\n  // handle color range selection change\n  const onSelectColorRange = (p: ColorRange) => {\n    setSelectedColorRange(p);\n  };\n\n  return (\n    <div className=\"mt-2 w-full\">\n      {!hide && (\n        <>\n          <div className=\"pointer-events-none h-[180px] w-full\">\n            {updateLayer && <KeplerMapContainer layerId={updateLayer} mapIndex={1} />}\n          </div>\n          <ColorSelector\n            numberOfColors={k}\n            defaultColorRange={selectedColorRange?.name}\n            onSelectColorRange={onSelectColorRange}\n          />\n        </>\n      )}\n      <CustomCreateButton onClick={onClick} hide={hide} label=\"Click to Add This Map\" />\n    </div>\n  );\n};\n","import {useMemo, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {addColumnBySQL} from '@/hooks/use-duckdb';\nimport {CreateVariableCallbackOutput} from '@/ai/assistant/callbacks/callback-table';\nimport {addKeplerColumn, generateSQLUpdateColumn} from '@/utils/table-utils';\nimport {PreviewDataTable} from '../table/preview-data-table';\nimport {CustomCreateButton} from '../common/custom-create-button';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {addTableColumn} from '@kepler.gl/actions';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport function isCustomCreateVariableOutput(\n  functionOutput: CustomFunctionOutputProps<unknown, unknown>\n): functionOutput is CreateVariableCallbackOutput {\n  return functionOutput.type === 'create-variable';\n}\n\n/**\n * Custom Create Variable Message\n */\nexport const CustomCreateVariableMessage = ({\n  functionOutput\n}: {\n  functionOutput: CreateVariableCallbackOutput;\n  functionArgs: Record<string, any>;\n}) => {\n  const dispatch = useDispatch();\n  const [hide, setHide] = useState(false);\n\n  const {newColumn, columnType, values, datasetName, datasetId} = functionOutput.data;\n\n  // get dataset from redux store\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  const sql = useMemo(\n    () =>\n      generateSQLUpdateColumn({\n        tableName: datasetName,\n        columnName: newColumn,\n        columnType: columnType,\n        values: values\n      }),\n    [columnType, datasetName, newColumn, values]\n  );\n\n  // handle click event\n  const onClick = () => {\n    if (datasetId) {\n      // add column to duckdb\n      addColumnBySQL(sql);\n      // add column to kepler.gl\n      const {newField, values: columnValues} = addKeplerColumn({\n        dataset: keplerDataset,\n        newFieldName: newColumn,\n        fieldType: columnType,\n        columnData: values\n      });\n      dispatch(addTableColumn(datasetId, newField, columnValues));\n\n      // hide the button once clicked\n      setHide(true);\n    }\n  };\n\n  return keplerDataset ? (\n    <div className=\"w-full\">\n      {!hide && (\n        <div className=\"w-full\">\n          <PreviewDataTable\n            fieldName={newColumn}\n            fieldType={columnType}\n            columnData={values}\n            numberOfRows={keplerDataset.length}\n          />\n        </div>\n      )}\n      <CustomCreateButton onClick={onClick} hide={hide} label=\"Click to Add This Column\" />\n    </div>\n  ) : null;\n};\n","import React, {useMemo} from 'react';\n\nimport {CustomWeightsMessage, isCustomWeightsOutput} from './custom-weights-message';\nimport {CustomLocalMoranMessage, isCustomLisaOutput} from './custom-lisa-message';\nimport {CustomHistogramMessage, isCustomHistogramOutput} from './custom-histogram-message';\nimport {CustomScatterPlotMessage, isCustomScatterPlotOutput} from './custom-scatter-message';\nimport {CustomBubbleChartMessage, isCustomBubbleChartOutput} from './custom-bubblechart-message';\nimport {CustomBoxplotMessage, isCustomBoxPlotOutput} from './custom-boxplot-message';\nimport {\n  CustomParallelCoordinateMessage,\n  isCustomParallelCoordinateOutput\n} from './custom-parallel-coordinate-message';\nimport {CustomSpregMessage, isCustomRegressionOutput} from './custom-spreg-message';\nimport {MessagePayload} from '@chatscope/chat-ui-kit-react';\nimport {CustomMapMessage, isCustomMapOutput} from './custom-map-message';\nimport {\n  CustomCreateVariableMessage,\n  isCustomCreateVariableOutput\n} from './custom-create-variable-message';\nimport {CustomFunctionOutputProps} from '@/ai/types';\n\nexport type CustomMessagePayload = {\n  type: string;\n  functionName: string;\n  functionArgs: Record<string, any>;\n  output: CustomFunctionOutputProps<unknown, unknown>;\n};\n\n// Custom message types, for creating custom message components\n// please note: this is not one of the CustomFunctionNames\nconst VALID_CUSTOM_MESSAGE_TYPES = [\n  'mapping',\n  'weights',\n  'lisa',\n  'histogram',\n  'scatter',\n  'bubble',\n  'boxplot',\n  'parallel-coordinate',\n  'regression',\n  'createVariable'\n];\n\n// function to type guard the MessagePayload is CustomMessagePayload\nexport function isCustomMessagePayload(payload: MessagePayload): payload is CustomMessagePayload {\n  return (payload as CustomMessagePayload).functionName !== undefined;\n}\n\n/**\n * Check if the payload is a valid custom message\n * @param payload The message payload\n * @returns The flag indicates payload is a valid custom message\n */\nexport function isValidCustomMessage(payload: CustomMessagePayload): boolean {\n  if ('type' in payload.output) {\n    // check if payload.output.type in VALIDE_CUSTOM_MESSAGE_TYPES\n    return VALID_CUSTOM_MESSAGE_TYPES.includes(payload.output.type);\n  }\n  return false;\n}\n\n/**\n * Create a custom message component contains a confirm button with text \"Click to Create a Quantile Map\"\n */\nexport function CustomMessage({props}: {props: CustomMessagePayload}) {\n  const {functionArgs, output} = props;\n\n  return useMemo(() => {\n    const nodeElement = isCustomMapOutput(output) ? (\n      <CustomMapMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomWeightsOutput(output) ? (\n      <CustomWeightsMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomLisaOutput(output) ? (\n      <CustomLocalMoranMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomHistogramOutput(output) ? (\n      <CustomHistogramMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomScatterPlotOutput(output) ? (\n      <CustomScatterPlotMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomBubbleChartOutput(output) ? (\n      <CustomBubbleChartMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomBoxPlotOutput(output) ? (\n      <CustomBoxplotMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomParallelCoordinateOutput(output) ? (\n      <CustomParallelCoordinateMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomRegressionOutput(output) ? (\n      <CustomSpregMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : isCustomCreateVariableOutput(output) ? (\n      <CustomCreateVariableMessage functionOutput={output} functionArgs={functionArgs} />\n    ) : null;\n    return nodeElement;\n  }, [functionArgs, output]);\n}\n","'use client';\n\n// import Markdown from 'markdown-to-jsx';\nimport React from 'react';\nimport {Avatar, Badge, Button, Link, Tooltip, Spinner} from '@nextui-org/react';\nimport {useClipboard} from '@nextui-org/use-clipboard';\nimport {Icon} from '@iconify/react';\n\nimport {cn} from '../common/cn';\nimport {\n  CustomMessage,\n  isCustomMessagePayload,\n  isValidCustomMessage\n} from '../chatgpt/custom-messages';\nimport {MessagePayload} from '@chatscope/chat-ui-kit-react';\n\nexport type MessageCardProps = React.HTMLAttributes<HTMLDivElement> & {\n  index: number;\n  avatar?: string;\n  showFeedback?: boolean;\n  message?: React.ReactNode | string;\n  customMessage?: MessagePayload;\n  currentAttempt?: number;\n  status?: 'success' | 'failed' | 'pending';\n  attempts?: number;\n  messageClassName?: string;\n  onAttemptChange?: (attempt: number) => void;\n  onMessageCopy?: (content: string | string[]) => void;\n  onFeedback?: (index: number) => void;\n  onAttemptFeedback?: (feedback: 'like' | 'dislike' | 'same') => void;\n  stopChat?: () => void;\n};\n\nconst MessageCard = React.forwardRef<HTMLDivElement, MessageCardProps>(\n  (\n    {\n      index,\n      avatar,\n      message,\n      customMessage,\n      showFeedback,\n      attempts = 1,\n      currentAttempt = 1,\n      status,\n      onMessageCopy,\n      onAttemptChange,\n      onFeedback,\n      onAttemptFeedback,\n      className,\n      messageClassName,\n      stopChat,\n      ...props\n    },\n    ref\n  ) => {\n    const [feedback, setFeedback] = React.useState<'like' | 'dislike'>();\n    const [attemptFeedback, setAttemptFeedback] = React.useState<'like' | 'dislike' | 'same'>();\n\n    const messageRef = React.useRef<HTMLDivElement>(null);\n\n    const {copied, copy} = useClipboard();\n\n    const failedMessageClassName =\n      status === 'failed' ? 'bg-danger-100/50 border border-danger-100 text-foreground' : '';\n    const failedMessage = (\n      <p>\n        Something went wrong, if the issue persists please contact us through our help center\n        at&nbsp;\n        <Link\n          target=\"_blank\"\n          href=\"https://github.com/orgs/geodaai/discussions/categories/bugs\"\n          size=\"sm\"\n        >\n          Github/geodaai\n        </Link>\n        &nbsp; or refresh the page and try again.\n      </p>\n    );\n\n    const hasFailed = status === 'failed';\n\n    const handleCopy = React.useCallback(() => {\n      let stringValue = '';\n\n      if (typeof message === 'string') {\n        stringValue = message;\n      } else if (Array.isArray(message)) {\n        message.forEach(child => {\n          // @ts-ignore\n          const childString =\n            typeof child === 'string' ? child : child?.props?.children?.toString();\n\n          if (childString) {\n            stringValue += childString + '\\n';\n          }\n        });\n      }\n\n      const valueToCopy = stringValue || messageRef.current?.textContent || '';\n\n      copy(valueToCopy);\n\n      onMessageCopy?.(valueToCopy);\n    }, [copy, message, onMessageCopy]);\n\n    const handleFeedback = React.useCallback(\n      (index: number, liked: boolean) => {\n        setFeedback(liked ? 'like' : 'dislike');\n        if (liked === false) {\n          onFeedback?.(index);\n        }\n      },\n      [onFeedback]\n    );\n\n    const handleAttemptFeedback = React.useCallback(\n      (feedback: 'like' | 'dislike' | 'same') => {\n        setAttemptFeedback(feedback);\n\n        onAttemptFeedback?.(feedback);\n      },\n      [onAttemptFeedback]\n    );\n\n    const handleStopChat = React.useCallback(() => {\n      // stop chat\n      if (stopChat) stopChat();\n    }, [stopChat]);\n\n    return (\n      <div {...props} ref={ref} className={cn('flex gap-3', className)}>\n        <div className=\"relative flex-none\">\n          <Badge\n            isOneChar\n            color=\"danger\"\n            content={<Icon className=\"text-background\" icon=\"gravity-ui:circle-exclamation-fill\" />}\n            isInvisible={!hasFailed}\n            placement=\"bottom-right\"\n            shape=\"circle\"\n          >\n            <Avatar src={avatar} showFallback />\n          </Badge>\n        </div>\n        <div className=\"flex w-full flex-col gap-4\">\n          <div\n            className={cn(\n              'relative w-full rounded-medium bg-content2 px-4 py-3 text-default-600',\n              failedMessageClassName,\n              messageClassName\n            )}\n          >\n            <div ref={messageRef} className={'whitespace-pre-line pr-20 text-small'}>\n              {/* <Markdown className=\"flex flex-col gap-4\">{message as string}</Markdown> */}\n              {status === 'pending' && <Spinner color=\"default\" size=\"sm\" />}\n              {hasFailed ? failedMessage : message}\n              {customMessage &&\n                isCustomMessagePayload(customMessage) &&\n                isValidCustomMessage(customMessage) && <CustomMessage props={customMessage} />}\n            </div>\n            <div className=\"absolute right-2 top-2 flex rounded-full bg-content2 shadow-small\">\n              <Button isIconOnly radius=\"full\" size=\"sm\" variant=\"light\" onPress={handleStopChat}>\n                <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:stop\" />\n              </Button>\n              {showFeedback && !hasFailed && status !== 'pending' && (\n                <>\n                  <Button isIconOnly radius=\"full\" size=\"sm\" variant=\"light\" onPress={handleCopy}>\n                    {copied ? (\n                      <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:check\" />\n                    ) : (\n                      <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:copy\" />\n                    )}\n                  </Button>\n                  {false && (\n                    <Button\n                      isIconOnly\n                      radius=\"full\"\n                      size=\"sm\"\n                      variant=\"light\"\n                      onPress={() => handleFeedback(index, true)}\n                    >\n                      {feedback === 'like' ? (\n                        <Icon\n                          className=\"text-lg text-default-600\"\n                          icon=\"gravity-ui:thumbs-up-fill\"\n                        />\n                      ) : (\n                        <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:thumbs-up\" />\n                      )}\n                    </Button>\n                  )}\n                  <Button\n                    isIconOnly\n                    radius=\"full\"\n                    size=\"sm\"\n                    variant=\"light\"\n                    onPress={() => handleFeedback(index, false)}\n                  >\n                    {feedback === 'dislike' ? (\n                      <Icon\n                        className=\"text-lg text-default-600\"\n                        icon=\"gravity-ui:thumbs-down-fill\"\n                      />\n                    ) : (\n                      <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:thumbs-down\" />\n                    )}\n                  </Button>\n                </>\n              )}\n            </div>\n            {attempts > 1 && !hasFailed && (\n              <div className=\"flex w-full items-center justify-end\">\n                <button\n                  onClick={() => onAttemptChange?.(currentAttempt > 1 ? currentAttempt - 1 : 1)}\n                >\n                  <Icon\n                    className=\"cursor-pointer text-default-400 hover:text-default-500\"\n                    icon=\"gravity-ui:circle-arrow-left\"\n                  />\n                </button>\n                <button\n                  onClick={() =>\n                    onAttemptChange?.(currentAttempt < attempts ? currentAttempt + 1 : attempts)\n                  }\n                >\n                  <Icon\n                    className=\"cursor-pointer text-default-400 hover:text-default-500\"\n                    icon=\"gravity-ui:circle-arrow-right\"\n                  />\n                </button>\n                <p className=\"px-1 text-tiny font-medium text-default-500\">\n                  {currentAttempt}/{attempts}\n                </p>\n              </div>\n            )}\n          </div>\n          {showFeedback && attempts > 1 && (\n            <div className=\"flex items-center justify-between rounded-medium border-small border-default-100 px-4 py-3 shadow-small\">\n              <p className=\"text-small text-default-600\">Was this response better or worse?</p>\n              <div className=\"flex gap-1\">\n                <Tooltip content=\"Better\">\n                  <Button\n                    isIconOnly\n                    radius=\"full\"\n                    size=\"sm\"\n                    variant=\"light\"\n                    onPress={() => handleAttemptFeedback('like')}\n                  >\n                    {attemptFeedback === 'like' ? (\n                      <Icon className=\"text-lg text-primary\" icon=\"gravity-ui:thumbs-up-fill\" />\n                    ) : (\n                      <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:thumbs-up\" />\n                    )}\n                  </Button>\n                </Tooltip>\n                <Tooltip content=\"Worse\">\n                  <Button\n                    isIconOnly\n                    radius=\"full\"\n                    size=\"sm\"\n                    variant=\"light\"\n                    onPress={() => handleAttemptFeedback('dislike')}\n                  >\n                    {attemptFeedback === 'dislike' ? (\n                      <Icon\n                        className=\"text-lg text-default-600\"\n                        icon=\"gravity-ui:thumbs-down-fill\"\n                      />\n                    ) : (\n                      <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:thumbs-down\" />\n                    )}\n                  </Button>\n                </Tooltip>\n                <Tooltip content=\"Same\">\n                  <Button\n                    isIconOnly\n                    radius=\"full\"\n                    size=\"sm\"\n                    variant=\"light\"\n                    onPress={() => handleAttemptFeedback('same')}\n                  >\n                    {attemptFeedback === 'same' ? (\n                      <Icon className=\"text-lg text-danger\" icon=\"gravity-ui:face-sad\" />\n                    ) : (\n                      <Icon className=\"text-lg text-default-600\" icon=\"gravity-ui:face-sad\" />\n                    )}\n                  </Button>\n                </Tooltip>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default MessageCard;\n\nMessageCard.displayName = 'MessageCard';\n","import {MessageModel, MessagePayload} from '@chatscope/chat-ui-kit-react';\nimport {CUSTOM_FUNCTIONS} from '@/ai/assistant/custom-functions';\nimport {initOpenAI, processMessage, translateVoiceToText} from '@/ai/openai-utils';\nimport {CustomFunctionContext, CustomFunctionOutputProps, CustomFunctions} from '@/ai/types';\n\n/**\n * Create a message from custom function call\n * Return a message object that prompts user a confirm button, a plot or a map.\n */\nfunction createMessageFromCustomFunctionCall({\n  functionName,\n  functionArgs,\n  output\n}: {\n  functionName: string;\n  functionArgs: Record<string, unknown>;\n  output: CustomFunctionOutputProps<unknown, unknown>;\n}): MessageModel | null {\n  const type = 'custom';\n  const message = '';\n  const sender = 'GeoDa.AI';\n  const direction = 'incoming';\n  const position = 'normal';\n  const payload = {\n    type: 'custom',\n    functionName,\n    functionArgs,\n    output\n  };\n\n  const allFunctions = Object.keys(CUSTOM_FUNCTIONS);\n  // remove 'summarizeData' from allFunctions\n  const functionsWithCustomMessage = allFunctions.filter(funcName => funcName !== 'summarizeData');\n  // return custom message\n  if (functionsWithCustomMessage.includes(functionName)) {\n    return {\n      type,\n      message,\n      sender,\n      direction,\n      position,\n      payload\n    };\n  }\n  return null;\n}\n\n/**\n * Custom hook to use ChatGPT\n *\n * registerFunction({functionName: 'summarizeData', functionArgs: {tableName}, input: {}})\n * registerFunctionContext({var1, var2}), variables will be accessible by registered functions\n * registerFunctionMessage({functionName: 'summarizeData', functionArgs: {tableName}, output: {result: {}}}), return React.JSX.Element\n */\nexport function useChatGPT({\n  customFunctions,\n  customFunctionContext = {}\n}: {\n  customFunctions: CustomFunctions;\n  customFunctionContext: CustomFunctionContext;\n}) {\n  /**\n   * Process message by sending message to LLM assistant and retrieving response\n   * @returns None\n   */\n  async function sendMessage(\n    textMessage: string,\n    streamMessage: (delta: string, customMessage?: MessagePayload) => void,\n    imageMessage?: string\n  ) {\n    await processMessage({\n      textMessage,\n      imageMessage,\n      customFunctions,\n      customFunctionContext,\n      customMessageCallback: createMessageFromCustomFunctionCall,\n      streamMessageCallback: streamMessage\n    });\n  }\n\n  /**\n   * Convert speech to text\n   * @param audioBlob The audio blob to convert to text\n   * @returns The text from the audio blob\n   */\n  async function speechToText(audioBlob: Blob) {\n    // implement speech to text\n    return translateVoiceToText(audioBlob);\n  }\n\n  return {initOpenAI, sendMessage, speechToText};\n}\n","import React, {useState, useEffect, useCallback} from 'react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {MessageModel, MessagePayload} from '@/ai/types';\n\nimport {GeoDaState} from '@/store';\nimport {\n  setDefaultPromptText,\n  setMessages,\n  setScreenCaptured,\n  setStartScreenCapture\n} from '@/actions';\nimport {cancelOpenAI} from '@/ai/openai-utils';\nimport PromptInputWithBottomActions from '../chat/prompt-input-with-bottom-actions';\nimport MessageCard from '../chat/message-card';\nimport {CUSTOM_FUNCTIONS} from '@/ai/assistant/custom-functions';\nimport {useChatGPT} from '@/hooks/use-chatgpt';\nimport {queryValuesBySQL} from '@/hooks/use-duckdb';\nimport {MAP_ID} from '@/constants';\n\nexport const NO_OPENAI_KEY_MESSAGE = 'Please config your OpenAI API key in Settings.';\n\nexport const NO_MAP_LOADED_MESSAGE = 'Please load a map first before chatting.';\n\nexport type ChatGPTComponentProps = {\n  // initial messages\n  messages: Array<MessageModel>;\n  className?: string;\n};\n\nexport const ChatGPTComponent = ({messages}: ChatGPTComponentProps) => {\n  // const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const [isTyping, setIsTyping] = useState(false);\n\n  // if in dashboard mode, the message should be draggable\n  const isMessageDraggable = useSelector((state: GeoDaState) => state.root.uiState.showGridView);\n\n  // use selector to get screenCaptured flag\n  const screenCaptured = useSelector((state: GeoDaState) => state.root.uiState.screenCaptured);\n\n  // get default prompt text\n  const defaultPromptText = useSelector(\n    (state: GeoDaState) => state.root.uiState.defaultPromptText\n  );\n\n  const visState = useSelector((state: GeoDaState) => state.keplerGl[MAP_ID]?.visState);\n\n  const weights = useSelector((state: GeoDaState) => state.root.weights);\n\n  // useChatGPT hook\n  const {sendMessage, speechToText} = useChatGPT({\n    customFunctions: CUSTOM_FUNCTIONS,\n    customFunctionContext: {visState, weights, queryValuesBySQL}\n  });\n\n  // handle send message\n  const handleSend = useCallback(\n    async (message: string) => {\n      // add user input message\n      const newMessage: MessageModel = {\n        message,\n        direction: 'outgoing',\n        sender: 'user',\n        position: 'normal'\n      };\n\n      const newMessages: Array<MessageModel> = [...messages, newMessage];\n      dispatch(setMessages(newMessages));\n      setIsTyping(true);\n\n      // add an empty return message to show typing indicator for chatbot\n      dispatch(\n        setMessages([\n          ...newMessages,\n          {message: '', direction: 'incoming', sender: 'ChatGPT', position: 'normal'}\n        ])\n      );\n\n      let screenshotImage: string | undefined = undefined;\n\n      // prepare image message if screenCaptured is set\n      if (screenCaptured && screenCaptured.length > 0) {\n        // get screenshot image from localStorage\n        screenshotImage = screenCaptured || undefined;\n        // dispatch action to set screenCaptured to empty\n        dispatch(setScreenCaptured(''));\n      }\n\n      // send user message to chatbot\n      await sendMessage(\n        message,\n        (deltaMessage: string, customMessage?: MessagePayload, isCompleted?: boolean) => {\n          if (deltaMessage.length > 0) {\n            setIsTyping(false);\n          }\n          dispatch(\n            setMessages([\n              ...newMessages,\n              {\n                message: deltaMessage,\n                direction: 'incoming',\n                sender: 'ChatGPT',\n                position: 'normal',\n                payload: customMessage\n              }\n            ])\n          );\n          if (isCompleted) {\n            localStorage.removeItem('screenshot');\n          }\n        },\n        screenshotImage\n      );\n\n      // if last message is not a custom message and is empty, remove it\n      if (newMessages.length > 0 && newMessages[newMessages.length - 1].message === '') {\n        newMessages.pop();\n      }\n    },\n    [dispatch, messages, screenCaptured, sendMessage]\n  );\n\n  // scroll to bottom when new message is added\n  useEffect(() => {\n    // hack to scroll to bottom\n    const element = document.getElementById('chat-message-list');\n    if (element?.firstElementChild) {\n      element.scrollTop = element.firstElementChild.scrollHeight + 100;\n    }\n  }, [messages]);\n\n  // check if default prompt text is set, then send message\n  useEffect(() => {\n    if (defaultPromptText && defaultPromptText.length > 0) {\n      handleSend(defaultPromptText);\n      // reset default prompt text\n      dispatch(setDefaultPromptText(''));\n    }\n  }, [defaultPromptText, dispatch, handleSend]);\n\n  // handle on screenshot click\n  const onScreenshotClick = useCallback(() => {\n    // dispatch to set startScreenCapture to true\n    dispatch(setStartScreenCapture(true));\n  }, [dispatch]);\n\n  const onRemoveScreenshot = useCallback(() => {\n    dispatch(setScreenCaptured(''));\n  }, [dispatch]);\n\n  // handle stop running chat\n  const stopRunningChat = () => {\n    setIsTyping(false);\n    // calll to stop openai runs\n    cancelOpenAI();\n    // set status of last message to failed\n    dispatch(\n      setMessages([\n        ...messages.slice(0, messages.length - 1),\n        {\n          message: messages[messages.length - 1].message,\n          direction: 'incoming',\n          sender: 'Error',\n          position: 'normal'\n        }\n      ])\n    );\n  };\n\n  // handle report question\n  const reportQuestion = useCallback(\n    (messageIndex: number) => {\n      // report the question\n      // get the current question from the message by index\n      const question = messages[messageIndex].message;\n      // open this link in a new tab\n      const url = `https://github.com/orgs/geodaai/discussions/new?category=bugs&title=[AI Assistant Issue]Your Title&body=[Your Report]%0A%0A>${question}`;\n      window.open(url, '_blank', 'noopener,noreferrer');\n    },\n    [messages]\n  );\n\n  return (\n    <div className=\"order-1 m-2 flex h-full flex-grow flex-col space-y-4 overflow-y-auto overflow-x-hidden\">\n      <div\n        className=\"relative flex h-full flex-col gap-4 overflow-y-auto overflow-x-hidden px-1\"\n        id=\"chat-message-list\"\n      >\n        <div className=\"overscroll-behavior-y-auto overflow-anchor-auto touch-action-none absolute bottom-0 left-0 right-0 top-0 flex h-full flex-col gap-4 px-1\">\n          {messages.map((message, i) => {\n            return (\n              <MessageCard\n                key={i}\n                index={i}\n                avatar={\n                  message.direction === 'incoming'\n                    ? '/img/geoda-ai-chat.png'\n                    : 'https://images.unsplash.com/broken'\n                }\n                currentAttempt={i === 1 ? 2 : 1}\n                message={message.message}\n                customMessage={message.payload}\n                messageClassName={\n                  message.direction == 'outgoing' ? 'bg-content3 text-content3-foreground' : ''\n                }\n                showFeedback={message.direction === 'incoming'}\n                status={\n                  isTyping && i === messages.length - 1\n                    ? 'pending'\n                    : message.sender === 'Error'\n                      ? 'failed'\n                      : 'success'\n                }\n                stopChat={stopRunningChat}\n                onFeedback={reportQuestion}\n                draggable={isMessageDraggable}\n                unselectable=\"on\"\n                onDragStart={e =>\n                  e.dataTransfer.setData(\n                    'text/plain',\n                    JSON.stringify({\n                      id: `message-${i}`,\n                      type: 'text',\n                      message: message.message || ''\n                    })\n                  )\n                }\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"flex flex-col gap-2\">\n        <PromptInputWithBottomActions\n          onSendMessage={handleSend}\n          onScreenshotClick={onScreenshotClick}\n          onRemoveScreenshot={onRemoveScreenshot}\n          screenCaptured={screenCaptured}\n          onVoiceMessage={speechToText}\n          defaultPromptText={defaultPromptText}\n        />\n        <p className=\"px-2 text-tiny text-default-400\">\n          GeoDa.AI can make mistakes. Consider checking information.\n        </p>\n      </div>\n    </div>\n  );\n};\n","import {Button, Tooltip} from '@nextui-org/react';\nimport React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {Icon} from '@iconify/react';\n\nimport {takeSnapshot} from '../../utils/ui-utils';\nimport {setDefaultPromptText, setScreenCaptured} from '../../actions';\n\nexport function ChartInsightButton({parentElementId}: {parentElementId: string}) {\n  const dispatch = useDispatch();\n\n  const getChartInsights = async () => {\n    // get screenshot from the parent element\n    const chartElement = document.getElementById(parentElementId);\n    if (chartElement) {\n      const screenshot = await takeSnapshot(chartElement);\n      // dispatch the screenshot to the AI\n      dispatch(setScreenCaptured(screenshot));\n      // dispatch to set default prompt message in chat panel\n      dispatch(setDefaultPromptText('Can you get some insights from this chart?'));\n    }\n  };\n\n  return (\n    <Tooltip content=\"Get AI Insights\" size=\"sm\">\n      <Button\n        className=\"absolute right-1 top-1 z-10\"\n        isIconOnly={true}\n        radius=\"full\"\n        size=\"sm\"\n        color=\"primary\"\n        variant=\"light\"\n        onClick={getChartInsights}\n      >\n        <Icon icon=\"ri:gemini-fill\" width={18} />\n      </Button>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport {Select, SelectItem} from '@nextui-org/react';\nimport {ColorRange} from '@kepler.gl/constants';\nimport {ColorPalette} from '@kepler.gl/components';\nimport {ALL_COLOR_RANGES} from '@/utils/color-utils';\n\ntype ColorSelectorProps = {\n  numberOfColors?: number;\n  defaultColorRange?: string;\n  onSelectColorRange: (colorRange: ColorRange) => void;\n};\n\nexport function ColorSelector({\n  numberOfColors = 5,\n  defaultColorRange,\n  onSelectColorRange\n}: ColorSelectorProps) {\n  const colorRanges = ALL_COLOR_RANGES.filter(colorRange => {\n    return colorRange.colors.length === numberOfColors;\n  });\n\n  const selectedColorRange =\n    colorRanges.find(colorRange => colorRange.name === defaultColorRange) || colorRanges[0];\n\n  const onColorSchemeSelectionChange = (keys: any) => {\n    const selectValue = keys.currentKey;\n    const selectedColorRange = colorRanges.find(colorRange => colorRange.name === selectValue);\n    if (selectedColorRange) {\n      onSelectColorRange(selectedColorRange);\n    }\n  };\n\n  return selectedColorRange ? (\n    <Select\n      label=\"Select color scheme\"\n      className=\"max-w\"\n      items={colorRanges}\n      renderValue={items => {\n        return items.map(item => (\n          <ColorPalette\n            key={item.data?.name}\n            colors={item.data?.colors || []}\n            isReversed={false}\n            isSelected={item.data?.name === selectedColorRange.name}\n          />\n        ));\n      }}\n      selectedKeys={[`${selectedColorRange.name}`]}\n      onSelectionChange={onColorSchemeSelectionChange}\n    >\n      {colorRange => (\n        <SelectItem key={`${colorRange.name}`} className=\"gap-0 py-0\" textValue=\"\" value=\"\">\n          <ColorPalette\n            colors={colorRange.colors}\n            isReversed={false}\n            isSelected={colorRange.name === selectedColorRange.name}\n          />\n        </SelectItem>\n      )}\n    </Select>\n  ) : null;\n}\n","import {Button} from '@nextui-org/react';\nimport {ReactNode} from 'react';\n\nexport function CreateButton({\n  onClick,\n  isDisabled,\n  isRunning = false,\n  children\n}: {\n  onClick: () => void;\n  isDisabled: boolean;\n  isRunning?: boolean;\n  children: ReactNode;\n}) {\n  return (\n    <Button\n      radius=\"sm\"\n      color=\"danger\"\n      className=\"bg-rose-900\"\n      onClick={onClick}\n      isDisabled={isDisabled}\n      isLoading={isRunning}\n    >\n      {children}\n    </Button>\n  );\n}\n","import {setDefaultDatasetId} from '@/actions';\nimport {datasetsSelector} from '@/store/selectors';\nimport {Autocomplete, AutocompleteItem} from '@nextui-org/react';\nimport {Key} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\ntype DatasetSelectorProps = {\n  datasetId: string;\n  setDatasetId: (datasetName: string) => void;\n  updateDefaultDatasetId?: boolean;\n  label?: string;\n  size?: 'sm' | 'md' | 'lg';\n};\n\nexport function DatasetSelector({\n  datasetId,\n  setDatasetId,\n  updateDefaultDatasetId = true,\n  label,\n  size\n}: DatasetSelectorProps) {\n  const dispatch = useDispatch();\n  const datasets = useSelector(datasetsSelector);\n\n  const onDatasetSelectionChange = (value: Key) => {\n    const selectValue = value as string;\n    if (selectValue && selectValue.length > 0) {\n      // update variable in state\n      setDatasetId(selectValue);\n      if (updateDefaultDatasetId) {\n        // update default dataset id in store\n        dispatch(setDefaultDatasetId(selectValue));\n      }\n    }\n  };\n\n  return (\n    <Autocomplete\n      label={label || 'Select dataset'}\n      className=\"max-w\"\n      onSelectionChange={onDatasetSelectionChange}\n      size={size || 'md'}\n      selectedKey={datasetId}\n      isInvalid={!datasetId || datasetId.length === 0}\n    >\n      {datasets.map((d, i) => (\n        <AutocompleteItem key={d.dataId || i} value={d.dataId}>\n          {d.fileName}\n        </AutocompleteItem>\n      ))}\n    </Autocomplete>\n  );\n}\n","import {MAP_ID} from '@/constants';\nimport {GeoDaState} from '@/store';\nimport {useDispatch, useSelector} from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport {useMemo} from 'react';\nimport {\n  appInjector,\n  MapContainerFactory,\n  makeGetActionCreators,\n  mapFieldsSelector,\n  MapViewStateContextProvider\n} from '@kepler.gl/components';\nimport {findMapBounds, uiStateUpdaters} from '@kepler.gl/reducers';\nimport {NO_MAP_ID} from '@kepler.gl/constants';\nimport {Layer} from '@kepler.gl/layers';\nimport {themeLT, theme} from '@kepler.gl/styles';\nimport {wrapTo} from '@kepler.gl/actions';\nimport {getCenterAndZoomFromBounds, hexToRgb} from '@kepler.gl/utils';\nimport {mainTableNameSelector} from '@/store/selectors';\n\n// For inject customized component to kepler.gl\n// const KeplerInjector = provideRecipesToInjector([], appInjector);\n// const MapContainer = KeplerInjector.get(MapContainerFactory);\nconst MapContainer = appInjector.get(MapContainerFactory);\n\nconst initialMapUiState = {\n  // disable all map controls\n  mapControls: Object.keys(uiStateUpdaters.DEFAULT_MAP_CONTROLS).reduce(\n    (accu, key) => ({\n      ...accu,\n      [key]: {active: false, show: false}\n    }),\n    {}\n  ),\n  // disable side panel\n  activeSidePanel: null,\n  // disable toggle button\n  readonly: true\n};\n\ntype KeplerMapContainerProps = {\n  mapIndex: number;\n  mapHeight?: number;\n  mapWidth?: number;\n  layerId?: string;\n};\n\nexport function KeplerMapContainer({mapIndex, layerId}: KeplerMapContainerProps) {\n  const dispatch = useDispatch();\n\n  const dispatchKepler = (action: any) => dispatch(wrapTo(NO_MAP_ID, action));\n\n  // get tableName\n  const tableName = useSelector(mainTableNameSelector);\n\n  // keplerStateSelector\n  const keplerState = useSelector((state: GeoDaState) => state.keplerGl[MAP_ID]);\n\n  // // use selector to get theme\n  const uiTheme = useSelector((state: any) => state.root.uiState.theme);\n\n  const selectedTheme = uiTheme === 'light' ? themeLT : theme;\n\n  // get kepler actions\n  const keplerActionSelector = makeGetActionCreators();\n  const keplerOwnProps = {};\n  const {visStateActions, mapStateActions, uiStateActions, providerActions, mapStyleActions} =\n    keplerActionSelector(dispatchKepler, keplerOwnProps);\n\n  // get updated layers\n  const updatedLayers = useMemo(() => {\n    const layers = keplerState.visState.layers.map((l: Layer) => {\n      if (tableName.startsWith(l.config.label)) {\n        // l.updateLayerConfig(newLayerConfig?.config);\n        return l;\n      }\n      return l;\n    });\n    return layers;\n  }, [keplerState.visState.layers, tableName]);\n\n  // get splitmaps\n  const splitMaps = useMemo(() => {\n    const visibleLayers = updatedLayers\n      .filter((l: Layer) => l.id === layerId)\n      .map((l: Layer) => l.id);\n    // convert array to object {[layer.id]: true}\n    const layers = visibleLayers?.reduce(\n      (accu: {}, layerId: string) => ({\n        ...accu,\n        [layerId]: true\n      }),\n      {}\n    );\n    return new Array(mapIndex + 1)\n      .fill(0)\n      .map((s, i) => (i === mapIndex ? {layers} : {layers: []}));\n  }, [layerId, mapIndex, updatedLayers]);\n\n  const connectedProps = {\n    id: MAP_ID,\n    // Specify path to keplerGl state, because it is not mounted at the root\n    getState: (state: GeoDaState) => state.keplerGl[MAP_ID],\n    // width: contentWidth,\n    // height: dimensions?.height,\n    initialUiState: initialMapUiState,\n    mapboxApiAccessToken: '',\n    dispatch,\n    visStateActions,\n    mapStateActions,\n    uiStateActions,\n    providerActions,\n    mapStyleActions,\n    visState: {\n      ...keplerState?.visState,\n      splitMaps,\n      layers: keplerState?.visState.layers\n        .filter((l: Layer) => l.id === layerId)\n        .map((l: Layer) => {\n          l.updateLayerConfig({\n            isVisible: true\n          });\n          return l;\n        }),\n      layerOrder: [layerId],\n      layerData: [\n        keplerState?.visState.layerData[\n          keplerState?.visState.layers.findIndex((l: Layer) => l.id === layerId)\n        ]\n      ]\n    },\n    mapState: {\n      ...keplerState?.mapState,\n      isViewportSynced: false,\n      isZoomLocked: false\n    },\n    uiState: {\n      ...keplerState?.uiState,\n      ...initialMapUiState\n    },\n    providerState: keplerState.providerState,\n    mapStyle: {\n      ...keplerState?.mapStyle,\n      styleType: NO_MAP_ID,\n      bottomMapStyle: null,\n      backgroundColor: hexToRgb(uiTheme === 'light' ? '#FFFFFF' : '#000000')\n    }\n  };\n\n  const mapFields = mapFieldsSelector(connectedProps, mapIndex);\n\n  return useMemo(\n    () => (\n      <div className=\"h-full w-full rounded-xl  bg-white  dark:bg-black\">\n        <AutoSizer defaultHeight={280} defaultWidth={280}>\n          {({height, width}) => {\n            // get center and zoom from bounds for preview map\n            const bounds = findMapBounds(mapFields.visState.layers);\n            const centerAndZoom = getCenterAndZoomFromBounds(bounds, {width, height});\n            const newMapState = {\n              ...mapFields.mapState,\n              ...(centerAndZoom\n                ? {\n                    latitude: centerAndZoom.center[1],\n                    longitude: centerAndZoom.center[0],\n                    ...(Number.isFinite(centerAndZoom.zoom) ? {zoom: centerAndZoom.zoom} : {})\n                  }\n                : {})\n            };\n            return (\n              <div style={{height: height, width: width}} className=\"\">\n                <MapViewStateContextProvider mapState={newMapState}>\n                  <MapContainer\n                    width={width}\n                    height={height}\n                    primary={false}\n                    key={mapIndex}\n                    index={mapIndex}\n                    containerId={mapIndex}\n                    theme={selectedTheme}\n                    {...mapFields}\n                  />\n                </MapViewStateContextProvider>\n              </div>\n            );\n          }}\n        </AutoSizer>\n      </div>\n    ),\n    [mapFields, mapIndex, selectedTheme]\n  );\n}\n","import {Button, Divider, Tooltip} from '@nextui-org/react';\nimport React from 'react';\nimport {Icon} from '@iconify/react';\nimport {takeSnapshot} from '@/utils/ui-utils';\nimport {useDispatch} from 'react-redux';\nimport {setDefaultPromptText, setScreenCaptured} from '@/actions';\n\n/**\n * Create a svg icon with a gear icon.\n */\nexport function GearIcon() {\n  return (\n    <div className={'icon-gear'}>\n      <svg\n        width=\"18\"\n        height=\"18\"\n        viewBox=\"0 0 25 25\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M24.5376 11.3294L24.2784 14.7294L22.1572 14.6C21.8391 16.1636 21.1319 17.6221 20.1008 18.8412L21.7565 20.8353L19.1168 23.0118L17.4905 21.0529C16.3458 21.7131 15.0791 22.1353 13.7667 22.2941L13.5958 24.5L10.196 24.2471L10.361 22.0941C8.9251 21.7737 7.58237 21.1276 6.43677 20.2059L4.84588 21.5588L2.62451 18.9647L4.19773 17.6353C3.37086 16.2768 2.89505 14.7346 2.81306 13.1471L0.520996 12.9706L0.774361 9.57647L3.20784 9.75882C3.60977 8.43 4.29524 7.20385 5.21708 6.16471L3.96204 4.65294L6.60175 2.47647L7.88036 4.02941C9.08646 3.35035 10.4291 2.94843 11.8105 2.85294L11.9872 0.5L15.387 0.752941L15.2044 3.14706C16.5617 3.52508 17.8203 4.19349 18.8929 5.10588L20.7607 3.52353L22.9762 6.11765L21.0907 7.72353C21.7024 8.78388 22.1025 9.95245 22.2691 11.1647L24.5376 11.3294ZM6.8349 12.1451C6.59351 15.3054 8.96313 18.0632 12.1286 18.3059C13.6517 18.4258 15.1599 17.9345 16.3189 16.9408C17.478 15.9471 18.1923 14.533 18.3037 13.0118C18.5416 9.85115 16.1689 7.09601 13.0031 6.85677C9.83735 6.61753 7.07629 8.9847 6.8349 12.1451Z\"\n          fill=\"#000000\"\n        />\n      </svg>\n    </div>\n  );\n}\n\n/**\n * A React component that renders a setting panel.\n * This component accepts a SettingPanelHeader component as a child, and a `children` prop for it's content.\n */\nexport const RightPanelContainer = ({\n  title,\n  description,\n  showAIHelp = true,\n  children\n}: {\n  title: string;\n  description: string;\n  showAIHelp?: boolean;\n  icon?: React.ReactNode;\n  children: React.ReactNode;\n}) => {\n  const dispatch = useDispatch();\n\n  const askAIForHelp = async () => {\n    // get the element with id 'config-panel' and take a snapshot\n    const configPanel = document.getElementById('config-panel');\n    if (configPanel) {\n      const screenshot = await takeSnapshot(configPanel);\n      // dispatch the screenshot to the AI\n      dispatch(setScreenCaptured(screenshot));\n      // dispatch to set default prompt message in chat panel\n      dispatch(setDefaultPromptText('Can you tell me how to use this?'));\n    }\n  };\n\n  return (\n    <div className=\"h-scree h-full\" id=\"config-panel\">\n      <div className=\"w-full\">\n        <div className=\"space-y-1 p-4\">\n          <h4 className=\"text-medium font-medium\">{title}</h4>\n          <p className=\"text-small text-default-400\">{description}</p>\n        </div>\n        <Divider className=\"my-2\" />\n      </div>\n      <div className=\"relative flex flex-col\" style={{height: 'calc(100% - 97px)'}}>\n        {showAIHelp && (\n          <Tooltip content=\"Ask AI for help\" size=\"sm\" placement=\"right\">\n            <Button\n              className=\"absolute -top-12 right-1 z-10\"\n              isIconOnly={true}\n              variant=\"light\"\n              size=\"sm\"\n              onClick={askAIForHelp}\n            >\n              <Icon icon=\"hugeicons:ai-book\" width={18} />\n            </Button>\n          </Tooltip>\n        )}\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, {useState, MouseEvent} from 'react';\n\nexport type SplitterProps = {\n  mode: 'vertical' | 'horizontal';\n  initialSize: number;\n  minimumSize?: number;\n  onSplitterChange: (divSize: number) => void;\n};\n\n/**\n * The Splitter component is used to create a draggable divider between two elements.\n * Note: the parent element should have `position: relative` style.\n *\n */\nexport function Splitter({mode, initialSize, minimumSize = 0, onSplitterChange}: SplitterProps) {\n  const [mousePosition, setMousePosition] = useState<number>(0);\n  const [divSize, setDivSize] = useState<number>(initialSize);\n  const [dragging, setDragging] = useState<boolean>(false);\n\n  const handleDragStart = (e: MouseEvent<HTMLDivElement>) => {\n    // Prevent the default action, which would be to select the element.\n    e.preventDefault();\n    e.stopPropagation();\n    setDragging(true);\n    const startPos = mode === 'horizontal' ? e.clientX : e.clientY;\n    setMousePosition(startPos);\n  };\n\n  const handleDragMove = (e: MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (dragging) {\n      const currentPos = mode === 'horizontal' ? e.clientX : e.clientY;\n      const diff = mousePosition - currentPos;\n      const newDivSize = divSize + diff;\n      setDivSize(newDivSize > minimumSize ? newDivSize : minimumSize);\n      setMousePosition(currentPos);\n      // call the callback function to update the div size\n      onSplitterChange(newDivSize);\n    }\n  };\n\n  const handleDragEnd = (e: MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragging(false);\n  };\n\n  const screenClass =\n    mode === 'horizontal' ? 'h-full cursor-col-resize' : 'w-full cursor-row-resize';\n\n  const splitterExpanderStyle =\n    mode === 'horizontal'\n      ? {width: dragging ? '100px' : '20px', top: 0, left: dragging ? '-50px' : '0'}\n      : {height: dragging ? '100px' : '20px', top: dragging ? '-50px' : '0', left: 0};\n\n  return (\n    <div\n      className={`absolute ${screenClass} z-[100] cursor-col-resize`}\n      // adjust the width of the splitter div based on dragging state to make mouse cursor stay on top of the splitter\n      style={splitterExpanderStyle}\n      onMouseDown={handleDragStart}\n      onMouseMove={handleDragMove}\n      onMouseUp={handleDragEnd}\n      onMouseOut={handleDragEnd}\n    ></div>\n  );\n}\n","import {selectKeplerDataset} from '@/store/selectors';\nimport {\n  getIntegerAndStringFieldNamesFromDataset,\n  getIntegerFieldNamesFromDataset,\n  getNumericFieldNamesFromDataset,\n  getStringFieldNamesFromDataset\n} from '@/utils/data-utils';\nimport KeplerTable from '@kepler.gl/table';\nimport {Autocomplete, AutocompleteItem} from '@nextui-org/react';\nimport {Key, useMemo, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nexport enum VARIABLE_TYPE {\n  Numeric = 'numeric',\n  Integer = 'integer',\n  String = 'string',\n  IntegerOrString = 'integer_or_string'\n}\n\ntype VariableSelectorProps = {\n  dataId?: string;\n  variableType?: VARIABLE_TYPE;\n  defaultVariable?: string;\n  setVariable: (variable: string) => void;\n  label?: string;\n  size?: 'sm' | 'md' | 'lg';\n  optional?: boolean; // for optional vars\n  isInvalid?: boolean;\n};\n\nexport function getFieldNames(dataset: KeplerTable, variableType: VARIABLE_TYPE) {\n  if (variableType === VARIABLE_TYPE.Numeric) {\n    return getNumericFieldNamesFromDataset(dataset);\n  } else if (variableType === VARIABLE_TYPE.Integer) {\n    return getIntegerFieldNamesFromDataset(dataset);\n  } else if (variableType === VARIABLE_TYPE.String) {\n    return getStringFieldNamesFromDataset(dataset);\n  } else if (variableType === VARIABLE_TYPE.IntegerOrString) {\n    return getIntegerAndStringFieldNamesFromDataset(dataset);\n  }\n  return [];\n}\n\nexport function VariableSelector({\n  dataId,\n  defaultVariable,\n  variableType = VARIABLE_TYPE.Numeric,\n  setVariable,\n  label,\n  size\n}: VariableSelectorProps) {\n  const keplerDataset = useSelector(selectKeplerDataset(dataId));\n\n  // get numeric columns from redux store\n  const columnNames = useMemo(\n    () => getFieldNames(keplerDataset, variableType),\n    [keplerDataset, variableType]\n  );\n\n  // state for variable\n  const [localVariable, setLocalVariable] = useState<string>(\n    defaultVariable && columnNames.indexOf(defaultVariable) > -1 ? defaultVariable : ''\n  );\n\n  // handle variable change\n  const onVariableSelectionChange = (value: Key) => {\n    const selectValue = value as string;\n    setVariable(selectValue);\n    // update variable in state\n    setLocalVariable(selectValue);\n  };\n\n  return (\n    <Autocomplete\n      label={label || 'Select a variable'}\n      className=\"max-w\"\n      onSelectionChange={onVariableSelectionChange}\n      size={size || 'md'}\n      selectedKey={localVariable}\n      isInvalid={localVariable.length === 0 || !localVariable}\n    >\n      {columnNames.map(column => (\n        <AutocompleteItem key={column} value={column}>\n          {column}\n        </AutocompleteItem>\n      ))}\n    </Autocomplete>\n  );\n}\n","import React, {useState} from 'react';\n\n/**\n * Create a svg icon with a warning sign.\n */\nexport function WarningIcon() {\n  return (\n    <svg\n      className=\"warning-icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"#FFD700\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n      <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n      <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line>\n    </svg>\n  );\n}\n\n/**\n * Create a svg icon with a green check mark\n */\nexport function CheckIcon() {\n  return (\n    <svg\n      className=\"check-icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"#008000\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <polyline points=\"20 6 9 17 4 12\"></polyline>\n    </svg>\n  );\n}\n\n/**\n * Create a svg icon with a red x mark\n */\nexport function ErrorIcon() {\n  return (\n    <svg\n      className=\"x-icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"#FF0000\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n    </svg>\n  );\n}\n\n/**\n * Create a svg icon with a waiting sign\n */\nexport function WaitingIcon() {\n  return (\n    <svg\n      className=\"h-5 w-5 animate-spin text-current\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n      <path\n        className=\"opacity-75\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n\nexport enum WarningType {\n  ERROR = 'error',\n  WARNING = 'warning',\n  SUCCESS = 'success',\n  WAIT = 'wait'\n}\n\nexport type WarningBoxProps = {\n  message: string;\n  type: WarningType;\n  onClick?: () => void;\n  dismissAfter?: number;\n};\n\n/**\n * Create a warning box React component that contains a warning icon and a warning message.\n * The warning message is passed in as props.\n * The warning icon and warning message are aligned horizontally.\n */\nexport function WarningBox(props: WarningBoxProps) {\n  const onClick = props.onClick;\n\n  // add a state to make the warning box disappear after 1 second\n  const [visible, setVisible] = useState(true);\n\n  if (props.dismissAfter) {\n    setTimeout(() => {\n      setVisible(false);\n    }, props.dismissAfter);\n  }\n\n  return visible ? (\n    <div\n      className=\"warning-box flex cursor-pointer flex-row  bg-yellow-50 p-2 text-sm text-yellow-800 dark:bg-gray-800 dark:text-yellow-300\"\n      onClick={onClick}\n    >\n      <div className=\"warning-icon p-1\">\n        {props.type === 'error' && <ErrorIcon />}\n        {props.type === 'warning' && <WarningIcon />}\n        {props.type === 'success' && <CheckIcon />}\n        {props.type === 'wait' && <WaitingIcon />}\n      </div>\n      <div className=\"warning-message flex-grow p-1\">{props.message}</div>\n    </div>\n  ) : null;\n}\n\nexport function SuccessBox(props: WarningBoxProps) {\n  return (\n    <div className=\"warning-box flex flex-row bg-green-50 p-2 text-sm text-green-800 dark:bg-gray-800 dark:text-green-300\">\n      <div className=\"warning-icon p-1\">\n        <CheckIcon />\n      </div>\n      <div className=\"warning-message flex-grow p-1\">{props.message}</div>\n    </div>\n  );\n}\n","import {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\nimport React, {useCallback, useEffect, useMemo, useRef, useState} from 'react';\nimport {\n  CAN_REDO_COMMAND,\n  CAN_UNDO_COMMAND,\n  REDO_COMMAND,\n  UNDO_COMMAND,\n  SELECTION_CHANGE_COMMAND,\n  FORMAT_TEXT_COMMAND,\n  FORMAT_ELEMENT_COMMAND,\n  $getSelection,\n  $isRangeSelection,\n  $createParagraphNode,\n  $getNodeByKey,\n  BaseSelection,\n  EditorState,\n  LexicalEditor\n} from 'lexical';\nimport {$isLinkNode, TOGGLE_LINK_COMMAND} from '@lexical/link';\nimport {$isParentElementRTL, $wrapNodes, $isAtNodeEnd} from '@lexical/selection';\nimport {$getNearestNodeOfType, mergeRegister} from '@lexical/utils';\nimport {\n  INSERT_ORDERED_LIST_COMMAND,\n  INSERT_UNORDERED_LIST_COMMAND,\n  REMOVE_LIST_COMMAND,\n  $isListNode,\n  ListNode\n} from '@lexical/list';\nimport {createPortal} from 'react-dom';\nimport {$createHeadingNode, $createQuoteNode, $isHeadingNode} from '@lexical/rich-text';\nimport {\n  $createCodeNode,\n  $isCodeNode,\n  getDefaultCodeLanguage,\n  getCodeLanguages\n} from '@lexical/code';\n\nconst LowPriority = 1;\n\nconst supportedBlockTypes = new Set(['paragraph', 'quote', 'code', 'h1', 'h2', 'ul', 'ol']);\n\nconst blockTypeToBlockName = {\n  code: 'Code Block',\n  h1: 'Large Heading',\n  h2: 'Small Heading',\n  h3: 'Heading',\n  h4: 'Heading',\n  h5: 'Heading',\n  ol: 'Numbered List',\n  paragraph: 'Normal',\n  quote: 'Quote',\n  ul: 'Bulleted List'\n};\n\nfunction Divider() {\n  return <div className=\"divider\" />;\n}\n\nfunction positionEditorElement(editor: HTMLDivElement, rect: DOMRect | null) {\n  if (rect === null) {\n    editor.style.opacity = '0';\n    editor.style.top = '-1000px';\n    editor.style.left = '-1000px';\n  } else {\n    editor.style.opacity = '1';\n    editor.style.top = `${rect.top + rect.height + window.pageYOffset + 10}px`;\n    editor.style.left = `${\n      rect.left + window.pageXOffset - editor.offsetWidth / 2 + rect.width / 2\n    }px`;\n  }\n}\n\nfunction FloatingLinkEditor({editor}: {editor: LexicalEditor}) {\n  const editorRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const mouseDownRef = useRef(false);\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditMode, setEditMode] = useState(false);\n  const [lastSelection, setLastSelection] = useState<BaseSelection | null>(null);\n\n  const updateLinkEditor = useCallback(() => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      const node = getSelectedNode(selection);\n      const parent = node.getParent();\n      if ($isLinkNode(parent)) {\n        setLinkUrl(parent.getURL());\n      } else if ($isLinkNode(node)) {\n        setLinkUrl(node.getURL());\n      } else {\n        setLinkUrl('');\n      }\n    }\n    const editorElem = editorRef.current;\n    const nativeSelection = window.getSelection();\n    const activeElement = document.activeElement;\n\n    if (editorElem === null) {\n      return;\n    }\n\n    const rootElement = editor.getRootElement();\n    if (\n      nativeSelection !== null &&\n      selection !== null &&\n      !nativeSelection?.isCollapsed &&\n      rootElement !== null &&\n      rootElement.contains(nativeSelection?.anchorNode)\n    ) {\n      const domRange = nativeSelection.getRangeAt(0);\n      let rect: DOMRect;\n      if (nativeSelection.anchorNode === rootElement) {\n        let inner = rootElement;\n        while (inner.firstElementChild != null) {\n          // @ts-ignore FIXME: firstElementChild is Element\n          inner = inner.firstElementChild;\n        }\n        rect = inner.getBoundingClientRect();\n      } else {\n        rect = domRange.getBoundingClientRect();\n      }\n\n      if (!mouseDownRef.current) {\n        positionEditorElement(editorElem, rect);\n      }\n      setLastSelection(selection);\n    } else if (!activeElement || activeElement.className !== 'link-input') {\n      positionEditorElement(editorElem, null);\n      setLastSelection(null);\n      setEditMode(false);\n      setLinkUrl('');\n    }\n\n    return true;\n  }, [editor]);\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerUpdateListener(({editorState}: {editorState: EditorState}) => {\n        editorState.read(() => {\n          updateLinkEditor();\n        });\n      }),\n\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        () => {\n          updateLinkEditor();\n          return true;\n        },\n        LowPriority\n      )\n    );\n  }, [editor, updateLinkEditor]);\n\n  useEffect(() => {\n    editor.getEditorState().read(() => {\n      updateLinkEditor();\n    });\n  }, [editor, updateLinkEditor]);\n\n  useEffect(() => {\n    if (isEditMode && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditMode]);\n\n  return (\n    <div ref={editorRef} className=\"link-editor\">\n      {isEditMode ? (\n        <input\n          ref={inputRef}\n          className=\"link-input\"\n          value={linkUrl}\n          onChange={event => {\n            setLinkUrl(event.target.value);\n          }}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              event.preventDefault();\n              if (lastSelection !== null) {\n                if (linkUrl !== '') {\n                  editor.dispatchCommand(TOGGLE_LINK_COMMAND, linkUrl);\n                }\n                setEditMode(false);\n              }\n            } else if (event.key === 'Escape') {\n              event.preventDefault();\n              setEditMode(false);\n            }\n          }}\n        />\n      ) : (\n        <>\n          <div className=\"link-input\">\n            <a href={linkUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {linkUrl}\n            </a>\n            <div\n              className=\"link-edit\"\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={event => event.preventDefault()}\n              onClick={() => {\n                setEditMode(true);\n              }}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction Select({\n  onChange,\n  className,\n  options,\n  value\n}: {\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  className: string;\n  options: string[];\n  value: string;\n}) {\n  return (\n    <select className={className} onChange={onChange} value={value}>\n      <option hidden={true} value=\"\" />\n      {options.map(option => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nfunction getSelectedNode(selection: any) {\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  const anchorNode = selection.anchor.getNode();\n  const focusNode = selection.focus.getNode();\n  if (anchorNode === focusNode) {\n    return anchorNode;\n  }\n  const isBackward = selection.isBackward();\n  if (isBackward) {\n    return $isAtNodeEnd(focus) ? anchorNode : focusNode;\n  } else {\n    return $isAtNodeEnd(anchor) ? focusNode : anchorNode;\n  }\n}\n\nfunction BlockOptionsDropdownList({\n  editor,\n  blockType,\n  toolbarRef,\n  setShowBlockOptionsDropDown\n}: {\n  editor: LexicalEditor;\n  blockType: string;\n  toolbarRef: any;\n  setShowBlockOptionsDropDown: any;\n}) {\n  const dropDownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const toolbar = toolbarRef.current;\n    const dropDown = dropDownRef.current;\n\n    if (toolbar !== null && dropDown !== null) {\n      const {top, left} = toolbar.getBoundingClientRect();\n      dropDown.style.top = `${top + 40}px`;\n      dropDown.style.left = `${left}px`;\n    }\n  }, [dropDownRef, toolbarRef]);\n\n  useEffect(() => {\n    const dropDown = dropDownRef.current;\n    const toolbar = toolbarRef.current;\n\n    if (dropDown !== null && toolbar !== null) {\n      const handle = (event: {target: any}) => {\n        const target = event.target;\n\n        if (!dropDown.contains(target) && !toolbar.contains(target)) {\n          setShowBlockOptionsDropDown(false);\n        }\n      };\n      document.addEventListener('click', handle);\n\n      return () => {\n        document.removeEventListener('click', handle);\n      };\n    }\n  }, [dropDownRef, setShowBlockOptionsDropDown, toolbarRef]);\n\n  const formatParagraph = () => {\n    if (blockType !== 'paragraph') {\n      editor.update(() => {\n        const selection = $getSelection();\n\n        if ($isRangeSelection(selection)) {\n          $wrapNodes(selection, () => $createParagraphNode());\n        }\n      });\n    }\n    setShowBlockOptionsDropDown(false);\n  };\n\n  const formatLargeHeading = () => {\n    if (blockType !== 'h1') {\n      editor.update(() => {\n        const selection = $getSelection();\n\n        if ($isRangeSelection(selection)) {\n          $wrapNodes(selection, () => $createHeadingNode('h1'));\n        }\n      });\n    }\n    setShowBlockOptionsDropDown(false);\n  };\n\n  const formatSmallHeading = () => {\n    if (blockType !== 'h2') {\n      editor.update(() => {\n        const selection = $getSelection();\n\n        if ($isRangeSelection(selection)) {\n          $wrapNodes(selection, () => $createHeadingNode('h2'));\n        }\n      });\n    }\n    setShowBlockOptionsDropDown(false);\n  };\n\n  const formatBulletList = () => {\n    if (blockType !== 'ul') {\n      editor.dispatchCommand(INSERT_UNORDERED_LIST_COMMAND, undefined);\n    } else {\n      editor.dispatchCommand(REMOVE_LIST_COMMAND, undefined);\n    }\n    setShowBlockOptionsDropDown(false);\n  };\n\n  const formatNumberedList = () => {\n    if (blockType !== 'ol') {\n      editor.dispatchCommand(INSERT_ORDERED_LIST_COMMAND, undefined);\n    } else {\n      editor.dispatchCommand(REMOVE_LIST_COMMAND, undefined);\n    }\n    setShowBlockOptionsDropDown(false);\n  };\n\n  const formatQuote = () => {\n    if (blockType !== 'quote') {\n      editor.update(() => {\n        const selection = $getSelection();\n\n        if ($isRangeSelection(selection)) {\n          $wrapNodes(selection, () => $createQuoteNode());\n        }\n      });\n    }\n    setShowBlockOptionsDropDown(false);\n  };\n\n  const formatCode = () => {\n    if (blockType !== 'code') {\n      editor.update(() => {\n        const selection = $getSelection();\n\n        if ($isRangeSelection(selection)) {\n          $wrapNodes(selection, () => $createCodeNode());\n        }\n      });\n    }\n    setShowBlockOptionsDropDown(false);\n  };\n\n  return (\n    <div className=\"dropdown\" ref={dropDownRef}>\n      <button className=\"item\" onClick={formatParagraph}>\n        <span className=\"icon paragraph\" />\n        <span className=\"text\">Normal</span>\n        {blockType === 'paragraph' && <span className=\"active\" />}\n      </button>\n      <button className=\"item\" onClick={formatLargeHeading}>\n        <span className=\"icon large-heading\" />\n        <span className=\"text\">Large Heading</span>\n        {blockType === 'h1' && <span className=\"active\" />}\n      </button>\n      <button className=\"item\" onClick={formatSmallHeading}>\n        <span className=\"icon small-heading\" />\n        <span className=\"text\">Small Heading</span>\n        {blockType === 'h2' && <span className=\"active\" />}\n      </button>\n      <button className=\"item\" onClick={formatBulletList}>\n        <span className=\"icon bullet-list\" />\n        <span className=\"text\">Bullet List</span>\n        {blockType === 'ul' && <span className=\"active\" />}\n      </button>\n      <button className=\"item\" onClick={formatNumberedList}>\n        <span className=\"icon numbered-list\" />\n        <span className=\"text\">Numbered List</span>\n        {blockType === 'ol' && <span className=\"active\" />}\n      </button>\n      <button className=\"item\" onClick={formatQuote}>\n        <span className=\"icon quote\" />\n        <span className=\"text\">Quote</span>\n        {blockType === 'quote' && <span className=\"active\" />}\n      </button>\n      <button className=\"item\" onClick={formatCode}>\n        <span className=\"icon code\" />\n        <span className=\"text\">Code Block</span>\n        {blockType === 'code' && <span className=\"active\" />}\n      </button>\n    </div>\n  );\n}\n\nexport function ToolbarPlugin() {\n  const [editor] = useLexicalComposerContext();\n  const toolbarRef = useRef(null);\n  const [canUndo, setCanUndo] = useState(false);\n  const [canRedo, setCanRedo] = useState(false);\n  const [blockType, setBlockType] = useState('paragraph');\n  const [selectedElementKey, setSelectedElementKey] = useState<string | null>(null);\n  const [showBlockOptionsDropDown, setShowBlockOptionsDropDown] = useState(false);\n  const [codeLanguage, setCodeLanguage] = useState('');\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isRTL, setIsRTL] = useState(false);\n  const [isLink, setIsLink] = useState(false);\n  const [isBold, setIsBold] = useState(false);\n  const [isItalic, setIsItalic] = useState(false);\n  const [isUnderline, setIsUnderline] = useState(false);\n  const [isStrikethrough, setIsStrikethrough] = useState(false);\n  const [isCode, setIsCode] = useState(false);\n\n  const updateToolbar = useCallback(() => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      const anchorNode = selection.anchor.getNode();\n      const element =\n        anchorNode.getKey() === 'root' ? anchorNode : anchorNode.getTopLevelElementOrThrow();\n      const elementKey = element.getKey();\n      const elementDOM = editor.getElementByKey(elementKey);\n      if (elementDOM !== null) {\n        setSelectedElementKey(elementKey);\n        if ($isListNode(element)) {\n          const parentList = $getNearestNodeOfType(anchorNode, ListNode);\n          const type = parentList ? parentList.getTag() : element.getTag();\n          setBlockType(type);\n        } else {\n          const type = $isHeadingNode(element) ? element.getTag() : element.getType();\n          setBlockType(type);\n          if ($isCodeNode(element)) {\n            setCodeLanguage(element.getLanguage() || getDefaultCodeLanguage());\n          }\n        }\n      }\n      // Update text format\n      setIsBold(selection.hasFormat('bold'));\n      setIsItalic(selection.hasFormat('italic'));\n      setIsUnderline(selection.hasFormat('underline'));\n      setIsStrikethrough(selection.hasFormat('strikethrough'));\n      setIsCode(selection.hasFormat('code'));\n      setIsRTL($isParentElementRTL(selection));\n\n      // Update links\n      const node = getSelectedNode(selection);\n      const parent = node.getParent();\n      if ($isLinkNode(parent) || $isLinkNode(node)) {\n        setIsLink(true);\n      } else {\n        setIsLink(false);\n      }\n    }\n  }, [editor]);\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerUpdateListener(({editorState}) => {\n        editorState.read(() => {\n          updateToolbar();\n        });\n      }),\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        (_payload, newEditor) => {\n          updateToolbar();\n          return false;\n        },\n        LowPriority\n      ),\n      editor.registerCommand(\n        CAN_UNDO_COMMAND,\n        payload => {\n          setCanUndo(payload);\n          return false;\n        },\n        LowPriority\n      ),\n      editor.registerCommand(\n        CAN_REDO_COMMAND,\n        payload => {\n          setCanRedo(payload);\n          return false;\n        },\n        LowPriority\n      )\n    );\n  }, [editor, updateToolbar]);\n\n  const codeLanguges = useMemo(() => getCodeLanguages(), []);\n  const onCodeLanguageSelect = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      editor.update(() => {\n        if (selectedElementKey !== null) {\n          const node = $getNodeByKey(selectedElementKey);\n          if ($isCodeNode(node)) {\n            node.setLanguage(e.target.value);\n          }\n        }\n      });\n    },\n    [editor, selectedElementKey]\n  );\n\n  const insertLink = useCallback(() => {\n    if (!isLink) {\n      editor.dispatchCommand(TOGGLE_LINK_COMMAND, 'https://');\n    } else {\n      editor.dispatchCommand(TOGGLE_LINK_COMMAND, null);\n    }\n  }, [editor, isLink]);\n\n  return (\n    <div className=\"toolbar\" ref={toolbarRef}>\n      <button\n        disabled={!canUndo}\n        onClick={() => {\n          editor.dispatchCommand(UNDO_COMMAND, undefined);\n        }}\n        className=\"toolbar-item spaced\"\n        aria-label=\"Undo\"\n      >\n        <i className=\"format undo\" />\n      </button>\n      <button\n        disabled={!canRedo}\n        onClick={() => {\n          editor.dispatchCommand(REDO_COMMAND, undefined);\n        }}\n        className=\"toolbar-item\"\n        aria-label=\"Redo\"\n      >\n        <i className=\"format redo\" />\n      </button>\n      <Divider />\n      {supportedBlockTypes.has(blockType) && (\n        <>\n          <button\n            className=\"toolbar-item block-controls\"\n            onClick={() => setShowBlockOptionsDropDown(!showBlockOptionsDropDown)}\n            aria-label=\"Formatting Options\"\n          >\n            <span className={'icon block-type ' + blockType} />\n            <span className=\"text\">\n              {blockTypeToBlockName[blockType as keyof typeof blockTypeToBlockName]}\n            </span>\n            <i className=\"chevron-down\" />\n          </button>\n          {showBlockOptionsDropDown &&\n            createPortal(\n              <BlockOptionsDropdownList\n                editor={editor}\n                blockType={blockType}\n                toolbarRef={toolbarRef}\n                setShowBlockOptionsDropDown={setShowBlockOptionsDropDown}\n              />,\n              document.body\n            )}\n          <Divider />\n        </>\n      )}\n      {blockType === 'code' ? (\n        <>\n          <Select\n            className=\"toolbar-item code-language\"\n            onChange={onCodeLanguageSelect}\n            options={codeLanguges}\n            value={codeLanguage}\n          />\n          <i className=\"chevron-down inside\" />\n        </>\n      ) : (\n        <>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'bold');\n            }}\n            className={'toolbar-item spaced ' + (isBold ? 'active' : '')}\n            aria-label=\"Format Bold\"\n          >\n            <i className=\"format bold\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'italic');\n            }}\n            className={'toolbar-item spaced ' + (isItalic ? 'active' : '')}\n            aria-label=\"Format Italics\"\n          >\n            <i className=\"format italic\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'underline');\n            }}\n            className={'toolbar-item spaced ' + (isUnderline ? 'active' : '')}\n            aria-label=\"Format Underline\"\n          >\n            <i className=\"format underline\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'strikethrough');\n            }}\n            className={'toolbar-item spaced ' + (isStrikethrough ? 'active' : '')}\n            aria-label=\"Format Strikethrough\"\n          >\n            <i className=\"format strikethrough\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, 'code');\n            }}\n            className={'toolbar-item spaced ' + (isCode ? 'active' : '')}\n            aria-label=\"Insert Code\"\n          >\n            <i className=\"format code\" />\n          </button>\n          <button\n            onClick={insertLink}\n            className={'toolbar-item spaced ' + (isLink ? 'active' : '')}\n            aria-label=\"Insert Link\"\n          >\n            <i className=\"format link\" />\n          </button>\n          {isLink && createPortal(<FloatingLinkEditor editor={editor} />, document.body)}\n          <Divider />\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'left');\n            }}\n            className=\"toolbar-item spaced\"\n            aria-label=\"Left Align\"\n          >\n            <i className=\"format left-align\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'center');\n            }}\n            className=\"toolbar-item spaced\"\n            aria-label=\"Center Align\"\n          >\n            <i className=\"format center-align\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'right');\n            }}\n            className=\"toolbar-item spaced\"\n            aria-label=\"Right Align\"\n          >\n            <i className=\"format right-align\" />\n          </button>\n          <button\n            onClick={() => {\n              editor.dispatchCommand(FORMAT_ELEMENT_COMMAND, 'justify');\n            }}\n            className=\"toolbar-item\"\n            aria-label=\"Justify Align\"\n          >\n            <i className=\"format justify-align\" />\n          </button>{' '}\n        </>\n      )}\n    </div>\n  );\n}\n","'use client';\n\nimport {EditorState} from 'lexical';\n\nimport {AutoFocusPlugin} from '@lexical/react/LexicalAutoFocusPlugin';\nimport {LexicalComposer} from '@lexical/react/LexicalComposer';\nimport {ContentEditable} from '@lexical/react/LexicalContentEditable';\nimport LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';\nimport {HistoryPlugin} from '@lexical/react/LexicalHistoryPlugin';\nimport {RichTextPlugin} from '@lexical/react/LexicalRichTextPlugin';\nimport {ListPlugin} from '@lexical/react/LexicalListPlugin';\nimport {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';\n\nimport {HeadingNode, QuoteNode} from '@lexical/rich-text';\nimport {ListItemNode, ListNode} from '@lexical/list';\nimport {CodeHighlightNode, CodeNode} from '@lexical/code';\nimport {TableCellNode, TableNode, TableRowNode} from '@lexical/table';\nimport {AutoLinkNode, LinkNode} from '@lexical/link';\n\nimport {ToolbarPlugin} from './text-toobar-plugin';\nimport React, {FC, useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {updateTextGridContent} from '@/actions/dashboard-actions';\n\nconst theme = {\n  ltr: 'ltr',\n  rtl: 'rtl',\n  placeholder: 'editor-placeholder',\n  paragraph: 'editor-paragraph',\n  quote: 'editor-quote',\n  heading: {\n    h1: 'editor-heading-h1',\n    h2: 'editor-heading-h2',\n    h3: 'editor-heading-h3',\n    h4: 'editor-heading-h4',\n    h5: 'editor-heading-h5'\n  },\n  list: {\n    nested: {\n      listitem: 'editor-nested-listitem'\n    },\n    ol: 'editor-list-ol',\n    ul: 'editor-list-ul',\n    listitem: 'editor-listitem'\n  },\n  image: 'editor-image',\n  link: 'editor-link',\n  text: {\n    bold: 'editor-text-bold',\n    italic: 'editor-text-italic',\n    overflowed: 'editor-text-overflowed',\n    hashtag: 'editor-text-hashtag',\n    underline: 'editor-text-underline',\n    strikethrough: 'editor-text-strikethrough',\n    underlineStrikethrough: 'editor-text-underlineStrikethrough',\n    code: 'editor-text-code'\n  },\n  code: 'editor-code',\n  codeHighlight: {\n    atrule: 'editor-tokenAttr',\n    attr: 'editor-tokenAttr',\n    boolean: 'editor-tokenProperty',\n    builtin: 'editor-tokenSelector',\n    cdata: 'editor-tokenComment',\n    char: 'editor-tokenSelector',\n    class: 'editor-tokenFunction',\n    'class-name': 'editor-tokenFunction',\n    comment: 'editor-tokenComment',\n    constant: 'editor-tokenProperty',\n    deleted: 'editor-tokenProperty',\n    doctype: 'editor-tokenComment',\n    entity: 'editor-tokenOperator',\n    function: 'editor-tokenFunction',\n    important: 'editor-tokenVariable',\n    inserted: 'editor-tokenSelector',\n    keyword: 'editor-tokenAttr',\n    namespace: 'editor-tokenVariable',\n    number: 'editor-tokenProperty',\n    operator: 'editor-tokenOperator',\n    prolog: 'editor-tokenComment',\n    property: 'editor-tokenProperty',\n    punctuation: 'editor-tokenPunctuation',\n    regex: 'editor-tokenVariable',\n    selector: 'editor-tokenSelector',\n    string: 'editor-tokenSelector',\n    symbol: 'editor-tokenProperty',\n    tag: 'editor-tokenProperty',\n    url: 'editor-tokenOperator',\n    variable: 'editor-tokenVariable'\n  }\n};\n\nconst editorConfig = {\n  namespace: 'React.js Demo',\n  // custom nodes\n  // Any custom nodes go here\n  nodes: [\n    HeadingNode,\n    ListNode,\n    ListItemNode,\n    QuoteNode,\n    CodeNode,\n    CodeHighlightNode,\n    TableNode,\n    TableCellNode,\n    TableRowNode,\n    AutoLinkNode,\n    LinkNode\n  ],\n  // Handling of errors during update\n  onError(error: Error) {\n    throw error;\n  },\n  // The editor theme\n  theme\n};\n\nconst Placeholder = () => {\n  return <div className=\"editor-placeholder\">Enter text here...</div>;\n};\n\nconst OnChangePlugin = ({id}: {id: string}) => {\n  const dispatch = useDispatch();\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    return editor.registerUpdateListener(listener => {\n      // dispatch action to update redux state\n      dispatch(updateTextGridContent({id, newContent: listener.editorState}));\n    });\n  }, [dispatch, editor, id]);\n\n  return null;\n};\n\ntype TextCellProps = {\n  id: string;\n  mode: 'edit' | 'display';\n  theme: string;\n  initialState: EditorState | null;\n};\n\nexport const TextCell: FC<TextCellProps> = ({id, mode, theme, initialState}) => {\n  return (\n    <LexicalComposer\n      initialConfig={{...editorConfig, ...(initialState ? {editorState: initialState} : {})}}\n    >\n      <div className={theme === 'light' ? 'editor-container' : 'editor-container-dark'}>\n        {/* hide ToolbarPlugin in display mode */}\n        {mode === 'edit' && <ToolbarPlugin />}\n        <div className={theme === 'light' ? 'editor-inner' : 'editor-inner-dark'}>\n          <RichTextPlugin\n            contentEditable={\n              <ContentEditable\n                className={theme === 'light' ? 'editor-input' : 'editor-input-dark'}\n              />\n            }\n            placeholder={<Placeholder />}\n            ErrorBoundary={LexicalErrorBoundary}\n          />\n          <HistoryPlugin />\n          <AutoFocusPlugin />\n          <ListPlugin />\n          <OnChangePlugin id={id} />\n        </div>\n      </div>\n    </LexicalComposer>\n  );\n};\n\nexport function getEditorState(content: string) {\n  const initState = {\n    root: {\n      children: [\n        {\n          children: [\n            {\n              children: [],\n              direction: null,\n              format: '',\n              indent: 0,\n              type: 'text',\n              version: 1,\n              text: content\n            }\n          ],\n          direction: null,\n          format: '',\n          indent: 0,\n          type: 'paragraph',\n          version: 1\n        }\n      ],\n      direction: null,\n      format: '',\n      indent: 0,\n      type: 'root',\n      version: 1\n    }\n  };\n\n  return JSON.stringify(initState);\n}\n","export const GeoDaLogo = () => {\n  return (\n    <div className=\"m-2 h-8 w-8 flex-none\">\n      <svg\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 22 21\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g opacity=\"0.5\" filter=\"url(#filter0_d_293_1103)\">\n          <path\n            d=\"M2.5952 9.56375C2.5952 9.09558 2.97472 8.71606 3.44288 8.71606H12.1316C12.5998 8.71606 12.9793 9.09558 12.9793 9.56375V16.0273C12.9793 16.4955 12.5998 16.875 12.1316 16.875H3.44288C2.97472 16.875 2.5952 16.4955 2.5952 16.0273V9.56375Z\"\n            fill=\"#8878EA\"\n          />\n        </g>\n        <g opacity=\"0.5\" filter=\"url(#filter1_d_293_1103)\">\n          <path\n            d=\"M4.07864 7.44455C4.07864 6.97638 4.45816 6.59686 4.92633 6.59686H13.6151C14.0832 6.59686 14.4627 6.97638 14.4627 7.44454V13.9081C14.4627 14.3763 14.0832 14.7558 13.6151 14.7558H4.92633C4.45816 14.7558 4.07864 14.3763 4.07864 13.9081V7.44455Z\"\n            fill=\"#09BEDF\"\n          />\n        </g>\n        <g opacity=\"0.5\" filter=\"url(#filter2_d_293_1103)\">\n          <path\n            d=\"M6.09189 5.32534C6.09189 4.85718 6.47141 4.47766 6.93957 4.47766H15.6283C16.0965 4.47766 16.476 4.85718 16.476 5.32534V11.7889C16.476 12.2571 16.0965 12.6366 15.6283 12.6366H6.93957C6.47141 12.6366 6.09189 12.2571 6.09189 11.7889V5.32534Z\"\n            fill=\"#0EC94D\"\n          />\n        </g>\n        <g opacity=\"0.5\" filter=\"url(#filter3_d_293_1103)\">\n          <path\n            d=\"M7.78725 3.62997C7.78725 3.16181 8.16677 2.78229 8.63493 2.78229H17.3237C17.7918 2.78229 18.1714 3.16181 18.1714 3.62997V10.0935C18.1714 10.5617 17.7918 10.9412 17.3237 10.9412H8.63493C8.16677 10.9412 7.78725 10.5617 7.78725 10.0935V3.62997Z\"\n            fill=\"#AEDC03\"\n          />\n          <path\n            d=\"M7.78725 3.62997C7.78725 3.16181 8.16677 2.78229 8.63493 2.78229H17.3237C17.7918 2.78229 18.1714 3.16181 18.1714 3.62997V10.0935C18.1714 10.5617 17.7918 10.9412 17.3237 10.9412H8.63493C8.16677 10.9412 7.78725 10.5617 7.78725 10.0935V3.62997Z\"\n            fill=\"#AEDC03\"\n          />\n          <path\n            d=\"M7.78725 3.62997C7.78725 3.16181 8.16677 2.78229 8.63493 2.78229H17.3237C17.7918 2.78229 18.1714 3.16181 18.1714 3.62997V10.0935C18.1714 10.5617 17.7918 10.9412 17.3237 10.9412H8.63493C8.16677 10.9412 7.78725 10.5617 7.78725 10.0935V3.62997Z\"\n            fill=\"#AEDC03\"\n          />\n        </g>\n        <g opacity=\"0.5\" filter=\"url(#filter4_d_293_1103)\">\n          <path\n            d=\"M9.27069 1.72268C9.27069 1.25452 9.65021 0.875 10.1184 0.875H18.8071C19.2753 0.875 19.6548 1.25452 19.6548 1.72268V8.18626C19.6548 8.65442 19.2753 9.03394 18.8071 9.03394H10.1184C9.65021 9.03394 9.27069 8.65442 9.27069 8.18626V1.72268Z\"\n            fill=\"#AEDC03\"\n          />\n          <path\n            d=\"M9.27069 1.72268C9.27069 1.25452 9.65021 0.875 10.1184 0.875H18.8071C19.2753 0.875 19.6548 1.25452 19.6548 1.72268V8.18626C19.6548 8.65442 19.2753 9.03394 18.8071 9.03394H10.1184C9.65021 9.03394 9.27069 8.65442 9.27069 8.18626V1.72268Z\"\n            fill=\"#AEDC03\"\n          />\n          <path\n            d=\"M9.27069 1.72268C9.27069 1.25452 9.65021 0.875 10.1184 0.875H18.8071C19.2753 0.875 19.6548 1.25452 19.6548 1.72268V8.18626C19.6548 8.65442 19.2753 9.03394 18.8071 9.03394H10.1184C9.65021 9.03394 9.27069 8.65442 9.27069 8.18626V1.72268Z\"\n            fill=\"#E67316\"\n          />\n        </g>\n        <defs>\n          <filter\n            id=\"filter0_d_293_1103\"\n            x=\"0.899835\"\n            y=\"8.71606\"\n            width=\"13.7748\"\n            height=\"11.5497\"\n            filterUnits=\"userSpaceOnUse\"\n            colorInterpolationFilters=\"sRGB\"\n          >\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix\n              in=\"SourceAlpha\"\n              type=\"matrix\"\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n              result=\"hardAlpha\"\n            />\n            <feOffset dy=\"1.69536\" />\n            <feGaussianBlur stdDeviation=\"0.847682\" />\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\" />\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_293_1103\" />\n            <feBlend\n              mode=\"normal\"\n              in=\"SourceGraphic\"\n              in2=\"effect1_dropShadow_293_1103\"\n              result=\"shape\"\n            />\n          </filter>\n          <filter\n            id=\"filter1_d_293_1103\"\n            x=\"2.38328\"\n            y=\"6.59686\"\n            width=\"13.7748\"\n            height=\"11.5497\"\n            filterUnits=\"userSpaceOnUse\"\n            colorInterpolationFilters=\"sRGB\"\n          >\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix\n              in=\"SourceAlpha\"\n              type=\"matrix\"\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n              result=\"hardAlpha\"\n            />\n            <feOffset dy=\"1.69536\" />\n            <feGaussianBlur stdDeviation=\"0.847682\" />\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\" />\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_293_1103\" />\n            <feBlend\n              mode=\"normal\"\n              in=\"SourceGraphic\"\n              in2=\"effect1_dropShadow_293_1103\"\n              result=\"shape\"\n            />\n          </filter>\n          <filter\n            id=\"filter2_d_293_1103\"\n            x=\"4.39652\"\n            y=\"4.47766\"\n            width=\"13.7748\"\n            height=\"11.5497\"\n            filterUnits=\"userSpaceOnUse\"\n            colorInterpolationFilters=\"sRGB\"\n          >\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix\n              in=\"SourceAlpha\"\n              type=\"matrix\"\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n              result=\"hardAlpha\"\n            />\n            <feOffset dy=\"1.69536\" />\n            <feGaussianBlur stdDeviation=\"0.847682\" />\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\" />\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_293_1103\" />\n            <feBlend\n              mode=\"normal\"\n              in=\"SourceGraphic\"\n              in2=\"effect1_dropShadow_293_1103\"\n              result=\"shape\"\n            />\n          </filter>\n          <filter\n            id=\"filter3_d_293_1103\"\n            x=\"6.09188\"\n            y=\"2.78229\"\n            width=\"13.7748\"\n            height=\"11.5497\"\n            filterUnits=\"userSpaceOnUse\"\n            colorInterpolationFilters=\"sRGB\"\n          >\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix\n              in=\"SourceAlpha\"\n              type=\"matrix\"\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n              result=\"hardAlpha\"\n            />\n            <feOffset dy=\"1.69536\" />\n            <feGaussianBlur stdDeviation=\"0.847682\" />\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\" />\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_293_1103\" />\n            <feBlend\n              mode=\"normal\"\n              in=\"SourceGraphic\"\n              in2=\"effect1_dropShadow_293_1103\"\n              result=\"shape\"\n            />\n          </filter>\n          <filter\n            id=\"filter4_d_293_1103\"\n            x=\"7.57533\"\n            y=\"0.875\"\n            width=\"13.7748\"\n            height=\"11.5497\"\n            filterUnits=\"userSpaceOnUse\"\n            colorInterpolationFilters=\"sRGB\"\n          >\n            <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n            <feColorMatrix\n              in=\"SourceAlpha\"\n              type=\"matrix\"\n              values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n              result=\"hardAlpha\"\n            />\n            <feOffset dy=\"1.69536\" />\n            <feGaussianBlur stdDeviation=\"0.847682\" />\n            <feComposite in2=\"hardAlpha\" operator=\"out\" />\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\" />\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_293_1103\" />\n            <feBlend\n              mode=\"normal\"\n              in=\"SourceGraphic\"\n              in2=\"effect1_dropShadow_293_1103\"\n              result=\"shape\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const IconSave = () => {\n  return (\n    <svg width=\"23\" height=\"24\" viewBox=\"0 0 25 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M3.71618 1.06168C2.02275 1.06168 0.549988 2.53444 0.549988 4.22787V21.8955C0.549988 23.7123 2.02275 25.0617 3.71618 25.0617H21.3838C23.2006 25.0617 24.55 23.7123 24.55 21.8955C24.55 21.8955 24.55 11.1792 24.55 7.64078C24.55 6.90735 24.464 6.33496 23.988 5.85894C22.5302 4.40112 19.1908 1.06168 19.1908 1.06168H3.71618Z\"\n        fill=\"#444444\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.03259 0.93832H19.0674V7.64078C19.0674 8.24633 18.6998 8.73729 17.9709 8.73729H7.12911C6.52356 8.73729 6.03259 8.24633 6.03259 7.64078V0.93832Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M6.03259 0.93832H19.0674V7.64078C19.0674 8.24633 18.6998 8.73729 17.9709 8.73729H7.12911C6.52356 8.73729 6.03259 8.24633 6.03259 7.64078V0.93832Z\"\n        fill=\"url(#paint0_linear_526_5728)\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.6117 0.93832H16.8744V6.54426C16.8744 7.14981 16.5068 7.64078 15.7779 7.64078H13.7082C13.1027 7.64078 12.6117 7.14981 12.6117 6.54426V0.93832Z\"\n        fill=\"#444444\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.93605 11.9035H20.1639C20.8928 11.9035 21.2604 12.5178 21.2604 13V20.799C21.2604 21.4045 20.8928 21.8955 20.1639 21.8955H4.93605C4.3305 21.8955 3.83954 21.4045 3.83954 20.799V13C3.83954 12.5178 4.3305 11.9035 4.93605 11.9035Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M4.93605 11.9035H20.1639C20.8928 11.9035 21.2604 12.5178 21.2604 13V20.799C21.2604 21.4045 20.8928 21.8955 20.1639 21.8955H4.93605C4.3305 21.8955 3.83954 21.4045 3.83954 20.799V13C3.83954 12.5178 4.3305 11.9035 4.93605 11.9035Z\"\n        fill=\"url(#paint1_linear_526_5728)\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.12911 14.0965H17.9709C18.6998 14.0965 19.0674 14.7108 19.0674 15.3164C19.0674 15.9219 18.6998 16.4129 17.9709 16.4129H7.12911C6.52356 16.4129 6.03259 15.9219 6.03259 15.3164C6.03259 14.7108 6.52356 14.0965 7.12911 14.0965Z\"\n        fill=\"#999999\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.00576 17.3861H12.6117C13.2172 17.3861 13.7082 18.0004 13.7082 18.6059C13.7082 19.2115 13.2172 19.7025 12.6117 19.7025H7.00576C6.52356 19.7025 5.90924 19.2115 5.90924 18.6059C5.90924 18.0004 6.52356 17.3861 7.00576 17.3861Z\"\n        fill=\"#999999\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_526_5728\"\n          x1=\"6.03259\"\n          y1=\"780.836\"\n          x2=\"6.03259\"\n          y2=\"0.93832\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopOpacity=\"0.100392\" />\n          <stop offset=\"1\" stopOpacity=\"0\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint1_linear_526_5728\"\n          x1=\"3.83954\"\n          y1=\"1011.1\"\n          x2=\"3.83954\"\n          y2=\"11.9035\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopOpacity=\"0.100392\" />\n          <stop offset=\"1\" stopOpacity=\"0\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport const IconBoxplot = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        opacity=\"0.502\"\n        d=\"M4.68724 6.2892H6.25398V19.3959H4.68724C4.61915 19.3959 4.55361 19.4174 4.50398 19.4388C4.45069 19.4618 4.39722 19.4929 4.34918 19.528C4.30174 19.5627 4.25335 19.6059 4.21475 19.6557C4.1794 19.7013 4.13389 19.7761 4.13389 19.8697C4.13389 20.0746 4.22687 20.2215 4.34918 20.3109C4.46205 20.3934 4.59326 20.4231 4.68724 20.4231H9.00691C9.12609 20.4231 9.27011 20.3999 9.38581 20.3022C9.50812 20.1989 9.56026 20.0459 9.56026 19.8697C9.56026 19.7298 9.47335 19.6106 9.38581 19.5367C9.29122 19.4568 9.15839 19.3959 9.00691 19.3959H7.44017V6.2892H9.00691C9.1267 6.2892 9.26049 6.26577 9.37025 6.19013C9.49064 6.10716 9.56026 5.97588 9.56026 5.81535C9.56026 5.50976 9.3125 5.26201 9.00691 5.26201H4.68724C4.61831 5.26201 4.55183 5.28388 4.49908 5.30835C4.44323 5.33426 4.38701 5.3704 4.33632 5.41428C4.24025 5.49742 4.13389 5.63614 4.13389 5.81535C4.13389 6.00843 4.25556 6.13208 4.36475 6.19722C4.47072 6.26043 4.59466 6.2892 4.68724 6.2892Z\"\n        fill=\"#D9D2D2\"\n        stroke=\"#F5F5F5\"\n        strokeWidth=\"0.4\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M3 13.1561H10.6941V16.7691C10.6941 17.1594 10.4572 17.4758 9.98744 17.4758H3.70669C3.31642 17.4758 3 17.1594 3 16.7691V13.1561Z\"\n        fill=\"#B7B7B7\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M3.70669 8.91597H9.98744C10.4572 8.91597 10.6941 9.3119 10.6941 9.62266V13.2356H3V9.62266C3 9.3119 3.31642 8.91597 3.70669 8.91597Z\"\n        fill=\"#F1F1F1\"\n      />\n      <path\n        opacity=\"0.502\"\n        d=\"M15.1872 2.4392H16.854V15.0392H15.1872C15.1387 15.0392 15.0877 15.0549 15.0436 15.0739C14.9977 15.0937 14.9507 15.121 14.9082 15.152C14.866 15.1829 14.8251 15.2198 14.7938 15.2602C14.7641 15.2986 14.7339 15.3518 14.7339 15.413C14.7339 15.5841 14.8101 15.7017 14.9082 15.7734C15.0016 15.8417 15.1113 15.8664 15.1872 15.8664H19.5069C19.6153 15.8664 19.7315 15.845 19.8213 15.7691C19.9144 15.6904 19.9603 15.5698 19.9603 15.413C19.9603 15.3142 19.897 15.2203 19.8213 15.1564C19.742 15.0894 19.6314 15.0392 19.5069 15.0392H17.8402V2.4392H19.5069C19.6156 2.4392 19.7267 2.41765 19.8135 2.35779C19.9057 2.29427 19.9603 2.1944 19.9603 2.06535C19.9603 1.81499 19.7573 1.61201 19.5069 1.61201H15.1872C15.1383 1.61201 15.0868 1.62789 15.0412 1.64906C14.994 1.67096 14.9456 1.70197 14.9018 1.73989C14.8168 1.81344 14.7339 1.92696 14.7339 2.06535C14.7339 2.21067 14.8244 2.30673 14.916 2.36133C15.0059 2.41497 15.112 2.4392 15.1872 2.4392Z\"\n        fill=\"#FBFBFB\"\n        stroke=\"#F5F5F5\"\n        strokeWidth=\"0.2\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.5 6.57935H21.1941V12.3124C21.1941 12.7027 20.9572 13.0191 20.4874 13.0191H14.2067C13.8164 13.0191 13.5 12.7027 13.5 12.3124V6.57935Z\"\n        fill=\"#B3B0B0\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.2067 4.45927H20.4874C20.9572 4.45927 21.1941 4.8552 21.1941 5.24547V6.65886H13.5V5.24547C13.5 4.8552 13.8164 4.45927 14.2067 4.45927Z\"\n        fill=\"#D8D4D4\"\n      />\n    </svg>\n  );\n};\n\nexport const IconBubbleChart = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M22.0309 22.6406H2.96912C2.75764 22.6406 2.5 22.4691 2.5 22.1714V3.10969C2.5 2.8982 2.75764 2.64056 2.96912 2.64056C3.18061 2.64056 3.26592 2.8982 3.26592 3.10969V21.8746H22.0309C22.3285 21.8746 22.5 22.0461 22.5 22.1714C22.5 22.4691 22.3285 22.6406 22.0309 22.6406Z\"\n        fill=\"#E7E3E3\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.94756 14.1293C9.63957 14.1293 11.0112 15.5871 11.0112 17.2791C11.0112 18.9712 9.63957 20.3428 7.94756 20.3428C6.25556 20.3428 4.79773 18.9712 4.79773 17.2791C4.79773 15.5871 6.25556 14.1293 7.94756 14.1293Z\"\n        fill=\"#E7E3E3\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.5646 9.53381C8.19907 9.53381 8.71348 10.1344 8.71348 10.7689C8.71348 11.4033 8.19907 11.9177 7.5646 11.9177C6.93013 11.9177 6.32956 11.4033 6.32956 10.7689C6.32956 10.1344 6.93013 9.53381 7.5646 9.53381Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.0749 17.2791C14.921 17.2791 15.5206 17.9649 15.5206 18.811C15.5206 19.657 14.921 20.2566 14.0749 20.2566C13.2289 20.2566 12.5431 19.657 12.5431 18.811C12.5431 17.9649 13.2289 17.2791 14.0749 17.2791Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.79867 3.49265C7.85621 3.49265 8.6273 4.3499 8.6273 5.40744C8.6273 6.46498 7.85621 7.23606 6.79867 7.23606C5.74113 7.23606 4.88388 6.46498 4.88388 5.40744C4.88388 4.3499 5.74113 3.49265 6.79867 3.49265Z\"\n        fill=\"#E7E3E3\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.4363 11.0656C17.3213 11.0656 15.5206 12.8664 15.5206 14.9814C15.5206 15.2431 15.6332 15.4985 15.6831 15.7454C15.6576 15.7458 15.6324 15.6611 15.5206 15.6611C13.0687 15.6611 11.0112 13.6899 11.0112 11.0656C11.0112 8.61376 13.0687 6.55631 15.5206 6.55631C18.1448 6.55631 20.1161 8.61376 20.1161 11.0656C20.1161 11.1775 20.2007 11.2027 20.2003 11.2282C19.9534 11.1782 19.698 11.0656 19.4363 11.0656Z\"\n        fill=\"#A6A0A0\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.4363 11.8316C21.1283 11.8316 22.5 13.2894 22.5 14.9814C22.5 16.6734 21.1283 18.0451 19.4363 18.0451C17.7443 18.0451 16.2865 16.6734 16.2865 14.9814C16.2865 13.2894 17.7443 11.8316 19.4363 11.8316Z\"\n        fill=\"#AEAEAE\"\n      />\n    </svg>\n  );\n};\n\nexport const IconChatgpt = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_31_1137)\">\n        <path\n          d=\"M9.8335 0.245391C7.39431 0.245391 5.22738 1.81362 4.47222 4.12961C2.90399 4.45237 1.55012 5.43297 0.756769 6.82257C-0.46652 8.93407 -0.186876 11.5888 1.45157 13.3985C0.945252 14.915 1.11895 16.5732 1.92709 17.9467C3.14298 20.0656 5.58956 21.1522 7.98317 20.6471C9.04384 21.8421 10.5677 22.5233 12.1667 22.5171C14.6059 22.5171 16.7729 20.9489 17.5293 18.6329C19.0999 18.3089 20.4514 17.3283 21.2373 15.9412C22.468 13.8297 22.1884 11.1749 20.5499 9.36401V9.35662C21.0562 7.84013 20.8825 6.18075 20.0744 4.801C18.8585 2.68951 16.4119 1.60296 14.0257 2.10804C12.9589 0.915551 11.4325 0.237999 9.8335 0.245391ZM9.8335 1.69289L9.82611 1.70028C10.8079 1.70028 11.7516 2.03906 12.5068 2.6661C12.476 2.68088 12.4156 2.71907 12.3712 2.74125L7.9302 5.2987C7.70352 5.42681 7.56801 5.66827 7.56801 5.9319V11.935L5.65732 10.8337V5.87154C5.65608 3.56663 7.5249 1.69658 9.8335 1.69289ZM15.1825 3.44097C16.6805 3.43851 18.0651 4.23556 18.8129 5.53276C19.2958 6.37785 19.4769 7.36585 19.3106 8.32304C19.2798 8.30087 19.2207 8.27007 19.1825 8.2479L14.7427 5.68305C14.516 5.55493 14.2376 5.55493 14.0109 5.68305L8.80732 8.68522V6.48256L13.103 4.00149C13.735 3.63561 14.4519 3.4422 15.1825 3.44097ZM4.19996 5.72001V10.9914C4.19996 11.255 4.33548 11.4891 4.56215 11.6246L9.75712 14.6181L7.83903 15.7268L3.54951 13.2532C1.55382 12.0976 0.871337 9.54633 2.02441 7.55186C2.51348 6.70677 3.28219 6.05879 4.19996 5.72001ZM14.1526 7.02584L18.4495 9.49952C20.4514 10.6538 21.1301 13.2026 19.9746 15.2008L19.982 15.2082C19.4917 16.0533 18.7205 16.7013 17.8077 17.0339V11.7613C17.8077 11.4977 17.6722 11.2562 17.4455 11.1281L12.2431 8.12594L14.1526 7.02584ZM10.9964 8.84291L13.1868 10.1093V12.636L10.9964 13.9024L8.80609 12.636V10.1093L10.9964 8.84291ZM14.4396 10.8337L16.3503 11.935V16.8898C16.3503 19.1971 14.4778 21.0684 12.1741 21.0684V21.061C11.1997 21.061 10.2487 20.721 9.50088 20.0952C9.53168 20.0804 9.59944 20.0422 9.6364 20.0201L14.0762 17.4638C14.3029 17.3357 14.4458 17.0943 14.4384 16.8306L14.4396 10.8337ZM13.1929 14.0773V16.28L8.89601 18.7536C6.89416 19.9006 4.34287 19.2218 3.18733 17.2298H3.19472C2.70442 16.3921 2.52949 15.3967 2.6958 14.4395C2.7266 14.4617 2.78696 14.4925 2.82392 14.5146L7.26373 17.0795C7.4904 17.2076 7.76881 17.2076 7.99549 17.0795L13.1929 14.0773Z\"\n          fill=\"#BCBCBC\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_31_1137\">\n          <rect width=\"24\" height=\"24\" fill=\"white\" transform=\"translate(0 0.245331)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const IconChoropleth = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M2.64375 13.2169C2.31563 13.3482 2.25 13.6857 2.25 15.1013C2.25 16.3669 2.25938 16.4232 2.48438 16.6388L2.70938 16.8732H9H15.2906L15.525 16.6388C15.7594 16.4044 15.7594 16.3951 15.7313 14.9513C15.7031 13.7138 15.675 13.4794 15.5344 13.3388C15.375 13.1794 14.9719 13.1701 9.1125 13.1513C5.475 13.1419 2.775 13.1701 2.64375 13.2169Z\"\n        fill=\"#D8D4D4\"\n      />\n      <path\n        d=\"M2.64375 2.55576C2.31563 2.68701 2.25 3.02451 2.25 4.44013C2.25 5.70576 2.25938 5.76201 2.48438 5.97763L2.70938 6.21201H9H15.2906L15.525 5.97763C15.7594 5.74326 15.7594 5.73388 15.7313 4.29013C15.7031 3.05263 15.675 2.81826 15.5344 2.67763C15.375 2.51826 14.9719 2.50888 9.1125 2.49013C5.475 2.48076 2.775 2.50888 2.64375 2.55576Z\"\n        fill=\"#B4B0B0\"\n      />\n      <path\n        d=\"M2.6625 7.82451C2.325 7.98388 2.25 8.31201 2.25 9.58701C2.25 10.8901 2.325 11.1901 2.69062 11.3589C2.85 11.4339 4.5375 11.462 8.23125 11.462H13.5469L13.6594 11.1995C13.8 10.8808 14.2312 10.6183 14.5969 10.6183C14.7469 10.6183 15.0281 10.7026 15.225 10.8058C15.4312 10.8995 15.6281 10.9651 15.6656 10.937C15.7875 10.862 15.7687 8.41513 15.6469 8.15263C15.5906 8.02138 15.4406 7.87138 15.3094 7.81513C15.0094 7.67451 2.95312 7.68388 2.6625 7.82451Z\"\n        fill=\"#848181\"\n      />\n      <path\n        d=\"M14.4094 11.6308C14.2687 11.7901 14.25 12.212 14.25 15.8026V19.8058L14.475 19.9464C14.8031 20.162 14.9437 20.0589 15.9 18.9526C16.35 18.437 16.7531 18.0526 16.7906 18.0901C16.8281 18.1276 17.3906 19.0933 18.0281 20.2276C19.05 22.037 19.2187 22.2901 19.4344 22.3183C19.7625 22.3558 20.9906 21.7089 21.1219 21.4276C21.1969 21.2589 21.0375 20.912 20.0156 19.1214C19.3594 17.9589 18.825 16.9745 18.825 16.9276C18.8344 16.8901 19.4344 16.7683 20.1562 16.6558C21.0187 16.5339 21.525 16.412 21.6281 16.3183C21.975 15.962 21.7875 15.812 18.2437 13.5901C16.3687 12.4183 14.775 11.462 14.7 11.462C14.625 11.462 14.4937 11.537 14.4094 11.6308Z\"\n        fill=\"#D0D0D0\"\n      />\n    </svg>\n  );\n};\n\nexport const IconHistogram = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M4.52657 13.8827C4.3554 13.9068 4.13019 13.9724 4.0311 14.0241C3.84192 14.1206 3.84192 14.1344 3.81489 17.293L3.79688 20.462H5.23824H6.67961V17.3413C6.67961 13.9551 6.69762 14.0517 6.19315 13.9275C5.89586 13.8517 4.93195 13.8275 4.52657 13.8827Z\"\n        fill=\"#E0E0E0\"\n      />\n      <path\n        d=\"M8.25313 10.0331C8.08197 10.0714 7.85675 10.1752 7.75766 10.2572C7.56848 10.4102 7.56848 10.4321 7.54145 15.4389L7.52344 20.462H8.9648H10.4062V15.5154C10.4062 10.1479 10.4242 10.3009 9.91971 10.1042C9.62243 9.98391 8.65851 9.94565 8.25313 10.0331Z\"\n        fill=\"#8D8D8D\"\n      />\n      <path\n        d=\"M12.0094 2.5745C11.8313 2.64013 11.5969 2.81825 11.4938 2.95888C11.2969 3.22138 11.2969 3.25888 11.2688 11.8464L11.25 20.462H12.75H14.25V11.9776C14.25 2.77138 14.2688 3.03388 13.7438 2.69638C13.4344 2.49013 12.4313 2.4245 12.0094 2.5745Z\"\n        fill=\"#D9D2D2\"\n      />\n      <path\n        d=\"M15.8469 7.37338C15.6757 7.4214 15.4505 7.55174 15.3514 7.65464C15.1622 7.84671 15.1622 7.87415 15.1352 14.1578L15.1172 20.462H16.5586H17.9999V14.2538C17.9999 7.51744 18.0179 7.70951 17.5135 7.46256C17.2162 7.31164 16.2523 7.26362 15.8469 7.37338Z\"\n        fill=\"#B3B0B0\"\n      />\n      <path\n        d=\"M19.5734 12.2729C19.4023 12.3029 19.1771 12.3845 19.078 12.4488C18.8888 12.569 18.8888 12.5862 18.8618 16.5177L18.8438 20.462H20.2851H21.7265V16.5777C21.7265 12.363 21.7445 12.4832 21.24 12.3287C20.9427 12.2342 19.9788 12.2042 19.5734 12.2729Z\"\n        fill=\"#C8C3C3\"\n      />\n    </svg>\n  );\n};\n\nexport const IconLisa = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"1 -2 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0_31_1121)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.51038 2.13928C2.51038 1.03471 3.40581 0.139282 4.51038 0.139282H20.5C21.6046 0.139282 22.5 1.03471 22.5 2.13928V18.1289C22.5 19.2335 21.6046 20.1289 20.5 20.1289H4.51038C3.40581 20.1289 2.51038 19.2335 2.51038 18.1289V2.13928Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2.5 14.5068C2.5 13.8439 3.13328 13.3644 3.77132 13.5443L20.6128 18.2918C20.9935 18.3991 21.2565 18.7464 21.2565 19.142V19.142C21.2565 19.6298 20.861 20.0253 20.3732 20.0253H3.5C2.94772 20.0253 2.5 19.5776 2.5 19.0253V14.5068Z\"\n          fill=\"#D9D9D9\"\n        />\n        <path\n          d=\"M2.51038 13.1859L22.5 18.4813V20.0357H2.51038V13.1859Z\"\n          fill=\"url(#paint0_linear_31_1121)\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11.7228 0.553791H22.0855V11.0098L9.77783 7.61732L11.7228 0.553791Z\"\n          fill=\"#DCD4D4\"\n        />\n        <path\n          d=\"M11.7228 0.553791H22.0855V11.0098L9.77783 7.61732L11.7228 0.553791Z\"\n          fill=\"#979797\"\n        />\n        <path d=\"M12.3446 0.543427L7.785 14.7403\" stroke=\"#4D4D4D\" />\n        <path d=\"M16.184 9.43742L14.4171 16.1911\" stroke=\"#4D4D4D\" />\n        <path d=\"M21.3062 18.486L2.70312 13.0145\" stroke=\"#4D4D4D\" />\n        <path d=\"M10.6361 4.51783L2.62848 2.37223\" stroke=\"#4D4D4D\" />\n        <path d=\"M22.0855 11.6315L9.75388 7.69369\" stroke=\"#4D4D4D\" />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M20.842 20.1289H4.16841C3.34592 20.1289 2.51038 19.3866 2.51038 18.4709V1.79731C2.51038 0.974826 3.34592 0.139282 4.16841 0.139282H20.842C21.7577 0.139282 22.5 0.974826 22.5 1.79731V18.4709C22.5 19.3866 21.7577 20.1289 20.842 20.1289ZM21.5777 1.79731C21.5777 1.43275 21.2998 1.06156 20.842 1.06156H4.16841C3.80385 1.06156 3.43266 1.43275 3.43266 1.79731V18.4709C3.43266 18.9287 3.80385 19.2066 4.16841 19.2066H20.842C21.2998 19.2066 21.5777 18.9287 21.5777 18.4709V1.79731Z\"\n          fill=\"#E1E1E1\"\n        />\n      </g>\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_31_1121\"\n          x1=\"2.51038\"\n          y1=\"13.1859\"\n          x2=\"2.51038\"\n          y2=\"698.16\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"white\" stopOpacity=\"0.25098\" />\n          <stop offset=\"1\" stopColor=\"white\" stopOpacity=\"0\" />\n        </linearGradient>\n        <clipPath id=\"clip0_31_1121\">\n          <rect width=\"25\" height=\"23.1061\" fill=\"white\" transform=\"translate(0.5 0.139282)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport const IconMap = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M8.33959 16.5213C8.32061 16.4928 9.65905 11.4143 9.75398 11.1675C9.78246 11.0915 10.6178 11.2814 12.2505 11.718M8.33959 16.5213L8.53165 16.3612C8.50615 16.3306 8.47935 16.3141 8.47383 16.3107L8.4734 16.3104C8.46407 16.3046 8.45672 16.301 8.45395 16.2997C8.44811 16.2968 8.44511 16.2958 8.44779 16.2968C8.45229 16.2986 8.46246 16.3022 8.48027 16.308C8.51464 16.3192 8.56598 16.3348 8.63336 16.3546M8.33959 16.5213C8.38706 16.5782 13.2662 17.8597 13.3042 17.8312M8.33959 16.5213L8.54761 16.3826C8.58055 16.432 8.58632 16.4798 8.58744 16.4891L8.58753 16.4899C8.58954 16.5061 8.58946 16.5189 8.58935 16.5245C8.58912 16.5363 8.58804 16.545 8.5878 16.547L8.58779 16.547C8.58715 16.5521 8.58666 16.5542 8.58735 16.5506C8.58848 16.5446 8.59092 16.533 8.59514 16.5143C8.60333 16.4781 8.61618 16.4244 8.63336 16.3546M8.63336 16.3546C8.6335 16.354 8.63364 16.3535 8.63378 16.3529C8.66844 16.2121 8.71929 16.0114 8.78137 15.7696C8.90548 15.2864 9.07382 14.6417 9.2458 13.99C9.41776 13.3383 9.59322 12.6801 9.73156 12.1695C9.80075 11.9142 9.86052 11.6963 9.90586 11.5348C9.91844 11.49 9.92984 11.4498 9.93999 11.4145M8.63336 16.3546C8.634 16.3548 8.63463 16.355 8.63527 16.3552C8.77126 16.395 8.96429 16.4492 9.19624 16.5129C9.65974 16.6403 10.2743 16.8047 10.8891 16.9665C11.5038 17.1284 12.1179 17.2874 12.5803 17.4042C12.8081 17.4617 12.9981 17.5087 13.133 17.5406M9.93999 11.4145C9.92366 11.412 9.90847 11.4098 9.89442 11.408C9.84446 11.4015 9.82008 11.4009 9.81309 11.4012C9.8082 11.4014 9.82346 11.4016 9.84732 11.3937C9.86337 11.3884 9.94962 11.3578 9.98806 11.2553L9.98807 11.2553L9.98739 11.257C9.98744 11.2569 9.98686 11.2585 9.98555 11.2623L9.97993 11.2797C9.97524 11.2946 9.96926 11.3142 9.96198 11.3389C9.95549 11.3608 9.94815 11.386 9.93999 11.4145ZM9.93999 11.4145C10.0354 11.4291 10.17 11.4554 10.3464 11.4946C10.7574 11.5859 11.37 11.7414 12.1859 11.9595M12.1859 11.9595L12.2505 11.718M12.1859 11.9595C12.1859 11.9596 12.1859 11.9596 12.1859 11.9596L12.2505 11.718M12.1859 11.9595C12.859 12.1397 13.4729 12.308 13.9207 12.4324C14.1339 12.4916 14.3092 12.5408 14.4354 12.5766M12.2505 11.718C13.5984 12.0788 14.7091 12.392 14.7281 12.4015M14.7281 12.4015L14.5513 12.5783C14.5027 12.5297 14.489 12.4758 14.4857 12.4622C14.4805 12.4415 14.4793 12.4248 14.4789 12.4172C14.478 12.4013 14.4789 12.3894 14.4792 12.3865L14.4792 12.3864C14.4798 12.3789 14.4806 12.375 14.48 12.3784C14.4791 12.3836 14.477 12.3949 14.4728 12.4143C14.465 12.451 14.4524 12.5055 14.4354 12.5766M14.7281 12.4015L14.6163 12.6251C14.6258 12.6299 14.6335 12.6329 14.6355 12.6337L14.6355 12.6337L14.6422 12.6362L14.6448 12.6371L14.6436 12.6368L14.6389 12.6353L14.6013 12.6242C14.5673 12.6142 14.5178 12.6 14.4541 12.5819C14.448 12.5802 14.4418 12.5784 14.4354 12.5766M14.7281 12.4015C14.7565 12.43 13.3516 17.7838 13.3042 17.8312M14.4354 12.5766C14.4349 12.5786 14.4344 12.5807 14.4339 12.5827C14.3985 12.7304 14.3461 12.9408 14.2819 13.1938C14.1537 13.6996 13.9795 14.3722 13.8028 15.0458C13.6261 15.7194 13.4471 16.3933 13.3094 16.9014C13.2405 17.1557 13.1822 17.3676 13.1397 17.5171C13.1374 17.5252 13.1352 17.533 13.133 17.5406M13.3042 17.8312L13.1542 17.6312C13.1932 17.6019 13.2307 17.5919 13.2448 17.5885C13.2624 17.5842 13.2768 17.5829 13.2844 17.5823C13.2997 17.5812 13.3112 17.5819 13.3147 17.5821C13.3229 17.5826 13.3274 17.5835 13.3247 17.583C13.3209 17.5824 13.3111 17.5807 13.2934 17.577C13.2591 17.5699 13.2074 17.5582 13.1394 17.5422C13.1373 17.5417 13.1351 17.5411 13.133 17.5406M13.3042 17.8312L13.1274 17.6545C13.0991 17.6827 13.085 17.7113 13.0845 17.7124C13.0804 17.7202 13.0779 17.726 13.0772 17.7277C13.0756 17.7314 13.0753 17.7325 13.0767 17.7287C13.0791 17.7218 13.0833 17.709 13.0894 17.6891C13.1002 17.6542 13.1148 17.6043 13.133 17.5406M3.80982 3.52905L3.80981 3.52902L3.81349 3.52771C3.92615 3.48773 4.10867 3.46652 4.38251 3.4507C4.66813 3.43419 5.0857 3.42257 5.69275 3.41485C6.90774 3.3994 8.8961 3.39941 12.1373 3.4089L12.197 3.40905C16.0143 3.41844 17.9754 3.42326 19.0213 3.44932C19.5446 3.46236 19.8515 3.48088 20.0504 3.51039C20.2652 3.54225 20.3668 3.5891 20.4731 3.65148C20.7265 3.79687 20.9726 4.09564 21.1183 4.36622L21.1185 4.36613L21.1228 4.37495L21.3316 4.80211L21.3572 4.85435L21.357 4.91251L21.338 12.9052V12.9055L21.3379 12.9557C21.3238 16.8692 21.3166 18.8591 21.2881 19.9015C21.2739 20.4214 21.2542 20.7208 21.2224 20.9089C21.206 21.0056 21.1849 21.0836 21.1541 21.152C21.1231 21.2209 21.0872 21.2689 21.0596 21.3044C20.9403 21.4661 20.7172 21.6893 20.5554 21.8086C20.521 21.8354 20.4732 21.8716 20.4044 21.9028C20.3358 21.9339 20.2577 21.955 20.1607 21.9711C19.9721 22.0025 19.6701 22.0212 19.142 22.0336C18.0795 22.0586 16.0392 22.0586 12.0042 22.0586H11.9942H11.9843C7.94926 22.0586 5.90894 22.0586 4.8464 22.0336C4.31833 22.0212 4.01633 22.0025 3.82777 21.9711C3.73069 21.955 3.65259 21.9339 3.58399 21.9028C3.5152 21.8717 3.46741 21.8354 3.43302 21.8087C3.27129 21.6893 3.04809 21.4661 2.92877 21.3044C2.90121 21.2689 2.86538 21.221 2.83442 21.1523C2.80364 21.084 2.78243 21.0063 2.76604 20.9098C2.7342 20.7224 2.71451 20.4244 2.70031 19.9075C2.67185 18.871 2.66467 16.893 2.65057 13.0034L2.65038 12.953L2.65038 12.9528C2.64089 9.44628 2.6385 7.4455 2.65515 6.27883C2.66347 5.69621 2.67658 5.31604 2.69651 5.05831C2.71615 4.80432 2.74355 4.64891 2.79043 4.52794C2.88758 4.2725 3.00121 4.06743 3.17212 3.90101C3.3425 3.73512 3.55192 3.62513 3.80982 3.52905ZM19.5732 20.788C19.0886 20.6581 17.5315 20.2397 15.4696 19.6858C14.2923 19.3695 12.9504 19.009 11.5497 18.6327C10.241 18.2812 8.99738 17.9475 7.9027 17.6538C5.91716 17.121 4.42158 16.7197 3.91636 16.5818C3.91588 16.5874 3.91541 16.5931 3.91494 16.5991C3.89339 16.8725 3.8908 17.4075 3.8908 18.4388V20.525L4.05124 20.679L4.05139 20.6788L4.05846 20.6862L4.21248 20.8467H11.9752C15.7788 20.8467 17.747 20.8443 18.7911 20.8206C19.1575 20.8123 19.4039 20.8015 19.5732 20.788ZM3.74112 16.5333C3.73757 16.5322 3.73846 16.5328 3.74287 16.5337L3.74114 16.5332L3.74112 16.5333ZM4.05846 4.80027L4.05859 4.80039L4.05176 4.80699C3.95167 4.90363 3.90497 5.01592 3.89806 5.09136C3.89629 5.11072 3.89739 5.12403 3.8988 5.13227C5.39947 5.54736 6.89595 5.94086 8.02539 6.22381C8.59294 6.36599 9.06638 6.4799 9.4006 6.55456C9.53805 6.58527 9.65008 6.60891 9.73459 6.6251C9.75224 6.57234 9.77259 6.50895 9.79502 6.43692C9.86084 6.22557 9.94203 5.94823 10.0211 5.66659C10.1003 5.38499 10.1767 5.10104 10.2333 4.87653C10.2511 4.80586 10.2667 4.74175 10.2798 4.68588C10.1727 4.67727 10.0254 4.66971 9.83131 4.66342C9.32322 4.64696 8.52002 4.63982 7.34288 4.63982H4.21249L4.05846 4.80027ZM10.4602 4.70853C10.4601 4.70849 10.4599 4.70844 10.4598 4.7084L10.4602 4.70853ZM19.9372 4.80748L19.937 4.80763L19.93 4.80027L19.7759 4.63982H15.7153H11.7405L11.0303 7.32058L11.0301 7.32161C10.8167 8.11346 10.6271 8.83401 10.492 9.35752C10.4245 9.61937 10.3708 9.83139 10.3346 9.97816C10.3344 9.97881 10.3343 9.97946 10.3341 9.98011C10.3835 9.99411 10.4408 10.0102 10.5057 10.0283C10.7599 10.0991 11.1271 10.1995 11.5802 10.3222C12.4863 10.5677 13.7342 10.9022 15.1057 11.2676L15.1059 11.2677C17.4128 11.8845 19.4283 12.4285 20.0581 12.6004C20.0639 12.5358 20.0694 12.4486 20.0741 12.3321C20.0952 11.8093 20.0976 10.8051 20.0976 8.89877V4.96151L19.9372 4.80748ZM20.0338 12.7608C20.0338 12.7609 20.0345 12.7595 20.0355 12.7562C20.0342 12.759 20.0337 12.7607 20.0338 12.7608ZM6.77567 7.35582L6.77489 7.35561C5.43921 6.99664 4.2371 6.68212 3.8908 6.59253V10.7783C3.8908 12.8884 3.89322 14.0095 3.91554 14.6087C3.92558 14.8781 3.93933 15.0254 3.95415 15.1052C4.90044 15.3665 5.75711 15.5931 6.38499 15.7521C6.70754 15.8337 6.96839 15.8973 7.14954 15.9384C7.17414 15.944 7.19708 15.9491 7.21834 15.9538C7.23124 15.91 7.24591 15.8594 7.26227 15.8025C7.32682 15.5778 7.41615 15.259 7.52199 14.8767C7.7336 14.1124 8.01051 13.0966 8.28572 12.0777C8.56092 11.0587 8.83428 10.037 9.03879 9.26076C9.14107 8.87254 9.22598 8.54629 9.28524 8.31265C9.30627 8.22978 9.32393 8.15905 9.33795 8.10162C9.23189 8.05993 9.07192 8.00552 8.85405 7.93793C8.39645 7.79595 7.70524 7.60244 6.77567 7.35582ZM17.9299 13.5071L17.9299 13.5071L17.9277 13.5065C17.3017 13.3358 16.728 13.1817 16.3085 13.0703C16.1169 13.0194 15.9577 12.9775 15.8406 12.9471C15.8402 12.9482 15.8399 12.9494 15.8395 12.9506C15.7973 13.0962 15.7395 13.3057 15.6715 13.5593C15.5356 14.0658 15.36 14.7425 15.1875 15.4212C15.015 16.0999 14.8459 16.7795 14.723 17.2919C14.6615 17.5484 14.6119 17.7617 14.5793 17.9115C14.5774 17.9201 14.5756 17.9285 14.5738 17.9366C14.5858 17.9401 14.5984 17.9438 14.6115 17.9476C14.766 17.9926 14.9885 18.0548 15.2629 18.13C15.8113 18.2804 16.5628 18.482 17.3838 18.7002L17.3841 18.7003L20.0533 19.4144L20.0786 16.8425C20.0786 16.8424 20.0787 16.8422 20.0787 16.842C20.0834 16.0451 20.0858 15.3175 20.0846 14.7871C20.084 14.5216 20.0825 14.3065 20.08 14.157C20.0796 14.135 20.0793 14.1145 20.0789 14.0956C20.0711 14.0933 20.063 14.0909 20.0546 14.0885C19.936 14.0535 19.7656 14.0049 19.5555 13.9464C19.1355 13.8292 18.5601 13.6729 17.9299 13.5071Z\"\n        fill=\"#B7B7B7\"\n        stroke=\"#ABA5A5\"\n        strokeWidth=\"0.5\"\n      />\n    </svg>\n  );\n};\n\nexport const IconOpen = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.8067 5.62082H4.1041V2.7658C4.1041 1.97737 4.74317 1.258 5.45131 1.258H11.2416C12.0301 1.258 12.5889 1.97737 12.5889 2.7658H18.2989C19.1676 2.7658 19.8067 3.40488 19.8067 4.19331V5.62082Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        d=\"M19.8067 5.62082H4.1041V2.7658C4.1041 1.97737 4.74317 1.258 5.45131 1.258H11.2416C12.0301 1.258 12.5889 1.97737 12.5889 2.7658H18.2989C19.1676 2.7658 19.8067 3.40488 19.8067 4.19331V5.62082Z\"\n        fill=\"url(#paint0_linear_31_1052)\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.70017 3.48428L16.241 4.47792L15.4969 10.6124L6.95609 9.61865L7.70017 3.48428Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.56894 5.54053H19.3419C20.5447 5.54053 21.376 6.61598 21.2037 7.80804L20.1036 16.0931C19.9694 17.0213 19.0367 17.7547 18.0168 17.7547H5.89402C4.87416 17.7547 3.94137 17.0213 3.80718 16.0931L2.70711 7.80804C2.53483 6.61598 3.36608 5.54053 4.56894 5.54053Z\"\n        fill=\"#BCBCBC\"\n      />\n      <path\n        d=\"M4.56894 5.54053H19.3419C20.5447 5.54053 21.376 6.61598 21.2037 7.80804L20.1036 16.0931C19.9694 17.0213 19.0367 17.7547 18.0168 17.7547H5.89402C4.87416 17.7547 3.94137 17.0213 3.80718 16.0931L2.70711 7.80804C2.53483 6.61598 3.36608 5.54053 4.56894 5.54053Z\"\n        fill=\"url(#paint1_linear_31_1052)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_31_1052\"\n          x1=\"4.1041\"\n          y1=\"437.541\"\n          x2=\"4.1041\"\n          y2=\"1.258\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopOpacity=\"0.37647\" />\n          <stop offset=\"1\" stopOpacity=\"0\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint1_linear_31_1052\"\n          x1=\"2.68451\"\n          y1=\"5.54053\"\n          x2=\"2.68451\"\n          y2=\"1226.95\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"white\" stopOpacity=\"0.150588\" />\n          <stop offset=\"1\" stopColor=\"white\" stopOpacity=\"0\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport const IconParallel = () => {\n  return (\n    <svg width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.26039 22.7257H22.1724C22.499 22.7257 22.6871 22.9138 22.6871 23.1458C22.6871 23.3779 22.499 23.566 22.1724 23.566H1.26039C1.02837 23.566 0.745728 23.3779 0.745728 23.1458C0.745728 22.9138 1.02837 22.7257 1.26039 22.7257Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.26039 12.6426H22.1724C22.499 12.6426 22.6871 12.8307 22.6871 13.0627C22.6871 13.2947 22.499 13.4828 22.1724 13.4828H1.26039C1.02837 13.4828 0.745728 13.2947 0.745728 13.0627C0.745728 12.8307 1.02837 12.6426 1.26039 12.6426Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.26039 2.55941H22.1724C22.499 2.55941 22.6871 2.74753 22.6871 2.97955C22.6871 3.21156 22.499 3.39968 22.1724 3.39968H1.26039C1.02837 3.39968 0.745728 3.21156 0.745728 2.97955C0.745728 2.74753 1.02837 2.55941 1.26039 2.55941Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        d=\"M6.72211 2.98459L10.0832 13.0627L2.42627 23.1458\"\n        stroke=\"#FDFDFD\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M2.42627 2.97955V13.0627L10.0832 23.1109\"\n        stroke=\"#DCDCDC\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M20.912 2.90949L16.8052 13.0627L20.912 23.1458\"\n        stroke=\"#8D8C8C\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M13.3497 2.94951V13.0627L15.1247 23.1458\"\n        stroke=\"#EBEBEB\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.44607 2.03425C2.93067 2.03425 3.32344 2.42702 3.32344 2.91162C3.32344 3.39623 2.93067 3.789 2.44607 3.789C1.96146 3.789 1.48096 3.39623 1.48096 2.91162C1.48096 2.42702 1.96146 2.03425 2.44607 2.03425Z\"\n        fill=\"#FFFDFD\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.34551 2.03425C6.83011 2.03425 7.22289 2.42702 7.22289 2.91162C7.22289 3.39623 6.83011 3.789 6.34551 3.789C5.86091 3.789 5.3804 3.39623 5.3804 2.91162C5.3804 2.42702 5.86091 2.03425 6.34551 2.03425Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.5846 2.03425C13.0692 2.03425 13.462 2.42702 13.462 2.91162C13.462 3.39623 13.0692 3.789 12.5846 3.789C12.1 3.789 11.6195 3.39623 11.6195 2.91162C11.6195 2.42702 12.1 2.03425 12.5846 2.03425Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.6036 2.03425C20.0882 2.03425 20.481 2.42702 20.481 2.91162C20.481 3.39623 20.0882 3.789 19.6036 3.789C19.119 3.789 18.6385 3.39623 18.6385 2.91162C18.6385 2.42702 19.119 2.03425 19.6036 2.03425Z\"\n        fill=\"#FFFDFD\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2.44607 20.7515C2.93067 20.7515 3.32344 21.1443 3.32344 21.6289C3.32344 22.1135 2.93067 22.5063 2.44607 22.5063C1.96146 22.5063 1.48096 22.1135 1.48096 21.6289C1.48096 21.1443 1.96146 20.7515 2.44607 20.7515Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.46508 20.7515C9.94968 20.7515 10.3425 21.1443 10.3425 21.6289C10.3425 22.1135 9.94968 22.5063 9.46508 22.5063C8.98048 22.5063 8.49997 22.1135 8.49997 21.6289C8.49997 21.1443 8.98048 20.7515 9.46508 20.7515Z\"\n        fill=\"#FFFDFD\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.1444 20.7515C14.629 20.7515 15.0217 21.1443 15.0217 21.6289C15.0217 22.1135 14.629 22.5063 14.1444 22.5063C13.6598 22.5063 13.1793 22.1135 13.1793 21.6289C13.1793 21.1443 13.6598 20.7515 14.1444 20.7515Z\"\n        fill=\"white\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.6036 20.7515C20.0882 20.7515 20.481 21.1443 20.481 21.6289C20.481 22.1135 20.0882 22.5063 19.6036 22.5063C19.119 22.5063 18.6385 22.1135 18.6385 21.6289C18.6385 21.1443 19.119 20.7515 19.6036 20.7515Z\"\n        fill=\"#FFFDFD\"\n      />\n    </svg>\n  );\n};\n\nexport const IconScatterplot = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M21.5309 22.6406H2.46912C2.25764 22.6406 2 22.4691 2 22.1714V3.10969C2 2.8982 2.25764 2.64056 2.46912 2.64056C2.68061 2.64056 2.76592 2.8982 2.76592 3.10969V21.8746H21.5309C21.8285 21.8746 22 22.0461 22 22.1714C22 22.4691 21.8285 22.6406 21.5309 22.6406Z\"\n        fill=\"#EAE8E8\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.54344 19.3279L19.4368 4.39997C19.6652 4.17115 20.0356 4.17115 20.2642 4.39997C20.4926 4.62888 20.4926 4.99997 20.2642 5.22888L5.37082 20.1567C5.14229 20.3856 4.77187 20.3856 4.54344 20.1567C4.31491 19.9279 4.31491 19.5567 4.54344 19.3279Z\"\n        fill=\"#EAE8E8\"\n      />\n      <path\n        opacity=\"0.5\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12.4261 4.1724C13.0605 4.1724 13.5749 4.77297 13.5749 5.40744C13.5749 6.0419 13.0605 6.55631 12.4261 6.55631C11.7916 6.55631 11.191 6.0419 11.191 5.40744C11.191 4.77297 11.7916 4.1724 12.4261 4.1724Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.1283 8.00198C10.7628 8.00198 11.2772 8.60255 11.2772 9.23702C11.2772 9.87148 10.7628 10.3859 10.1283 10.3859C9.49385 10.3859 8.89328 9.87148 8.89328 9.23702C8.89328 8.60255 9.49385 8.00198 10.1283 8.00198Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        opacity=\"0.5\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.83056 4.93831C8.46503 4.93831 8.97944 5.53889 8.97944 6.17335C8.97944 6.80782 8.46503 7.32223 7.83056 7.32223C7.19609 7.32223 6.59552 6.80782 6.59552 6.17335C6.59552 5.53889 7.19609 4.93831 7.83056 4.93831Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6.29873 11.8316C6.9332 11.8316 7.44761 12.4321 7.44761 13.0666C7.44761 13.7011 6.9332 14.2155 6.29873 14.2155C5.66426 14.2155 5.06369 13.7011 5.06369 13.0666C5.06369 12.4321 5.66426 11.8316 6.29873 11.8316Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.8943 17.9589C11.5287 17.9589 12.0431 18.5595 12.0431 19.1939C12.0431 19.8284 11.5287 20.3428 10.8943 20.3428C10.2598 20.3428 9.65921 19.8284 9.65921 19.1939C9.65921 18.5595 10.2598 17.9589 10.8943 17.9589Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        opacity=\"0.5\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M15.4897 16.4271C16.1242 16.4271 16.6386 17.0276 16.6386 17.6621C16.6386 18.2966 16.1242 18.811 15.4897 18.811C14.8553 18.811 14.2547 18.2966 14.2547 17.6621C14.2547 17.0276 14.8553 16.4271 15.4897 16.4271Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M15.4897 12.5975C16.1242 12.5975 16.6386 13.1981 16.6386 13.8325C16.6386 14.467 16.1242 14.9814 15.4897 14.9814C14.8553 14.9814 14.2547 14.467 14.2547 13.8325C14.2547 13.1981 14.8553 12.5975 15.4897 12.5975Z\"\n        fill=\"#AEAEAE\"\n      />\n      <path\n        opacity=\"0.5\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.3193 10.2997C19.9538 10.2997 20.4682 10.9003 20.4682 11.5348C20.4682 12.1692 19.9538 12.6836 19.3193 12.6836C18.6848 12.6836 18.0843 12.1692 18.0843 11.5348C18.0843 10.9003 18.6848 10.2997 19.3193 10.2997Z\"\n        fill=\"#AEAEAE\"\n      />\n    </svg>\n  );\n};\n\nexport const IconTable = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.9253 3.61487H18.8916C19.3174 3.61487 19.5759 3.96012 19.5759 4.29921V18.2655C19.5759 18.6913 19.3174 18.9498 18.8916 18.9498H4.9253C4.58622 18.9498 4.24097 18.6913 4.24097 18.2655V4.29921C4.24097 3.96012 4.58622 3.61487 4.9253 3.61487Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M4.9253 3.61487H18.8916C19.3174 3.61487 19.5759 3.96012 19.5759 4.29921V18.2655C19.5759 18.6913 19.3174 18.9498 18.8916 18.9498H4.9253C4.58622 18.9498 4.24097 18.6913 4.24097 18.2655V4.29921C4.24097 3.96012 4.58622 3.61487 4.9253 3.61487Z\"\n        fill=\"url(#paint0_linear_31_1068)\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.24097 3.52811H19.5759V8.24136H4.24097V3.52811Z\"\n        fill=\"#4A4A4A\"\n      />\n      <path\n        d=\"M4.24097 3.52811H19.5759V8.24136H4.24097V3.52811Z\"\n        fill=\"url(#paint1_linear_31_1068)\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.9253 2.84378H18.8916C19.7433 2.84378 20.347 3.53419 20.347 4.2992V18.2655C20.347 19.1172 19.7433 19.7209 18.8916 19.7209H4.9253C4.16029 19.7209 3.46988 19.1172 3.46988 18.2655V4.2992C3.46988 3.53419 4.16029 2.84378 4.9253 2.84378Z\"\n        stroke=\"#B5B5B5\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.24097 7.38354H19.5759V8.24138H4.24097V7.38354Z\"\n        fill=\"#0E0E0E\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.24097 11.239H19.5759V12.0968H4.24097V11.239Z\"\n        fill=\"#D5D5D5\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.24097 15.0944H19.5759V15.9522H4.24097V15.0944Z\"\n        fill=\"#D5D5D5\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.78073 8.15463H9.63856V19.0366H8.78073V8.15463Z\"\n        fill=\"#C0C0C0\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.1783 8.15463H15.0361V19.0366H14.1783V8.15463Z\"\n        fill=\"#C0C0C0\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8.78073 3.61487H9.63856V7.38354H8.78073V3.61487Z\"\n        fill=\"#0E0E0E\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.1783 3.61487H15.0361V7.38354H14.1783V3.61487Z\"\n        fill=\"#0E0E0E\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_31_1068\"\n          x1=\"4.24097\"\n          y1=\"1537.11\"\n          x2=\"4.24097\"\n          y2=\"3.61487\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopOpacity=\"0.075294\" />\n          <stop offset=\"1\" stopOpacity=\"0\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint1_linear_31_1068\"\n          x1=\"4.24097\"\n          y1=\"3.52811\"\n          x2=\"4.24097\"\n          y2=\"474.853\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"white\" stopOpacity=\"0.150588\" />\n          <stop offset=\"1\" stopColor=\"white\" stopOpacity=\"0\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport const IconWeights = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M4.305 4.30488C3.62821 4.41737 3.15538 4.9279 3.16465 5.55091C3.16465 5.98356 6.74329 17.1546 6.98434 17.4488C7.3181 17.8815 7.61478 18.0199 8.24521 18.0199C8.87565 18.0199 9.17232 17.8815 9.51535 17.4488C9.59879 17.3363 10.1829 15.6663 10.804 13.7367C11.4252 11.807 11.9536 10.2062 11.9907 10.1716C12.0185 10.137 12.5655 11.7292 13.2052 13.7107C14.0026 16.1855 14.429 17.3969 14.5774 17.5526C14.6886 17.6824 14.976 17.8555 15.1985 17.942C15.9031 18.193 16.5892 18.0113 17.0157 17.4488C17.2567 17.1546 20.8354 5.98356 20.8354 5.55091C20.8446 4.83271 20.242 4.29622 19.4169 4.28757C18.8235 4.28757 18.3785 4.53851 18.1375 5.02308C18.0355 5.2221 17.4607 6.91809 16.8581 8.77849C16.2554 10.6475 15.7363 12.1272 15.6992 12.0666C15.6621 12.0147 15.4396 11.3571 15.1985 10.6216C14.9668 9.88607 14.6237 8.83906 14.4476 8.30257L14.1231 7.33343H13.5205C12.9457 7.33343 12.9178 7.32478 12.9735 7.15172C13.4463 5.76724 13.4926 5.33459 13.1774 4.91059C12.6119 4.11451 11.3788 4.0799 10.7762 4.83271C10.6742 4.95385 10.0809 6.64119 9.44118 8.58812C8.80148 10.535 8.27302 12.1359 8.26375 12.1532C8.24521 12.1618 7.74457 10.6475 7.14195 8.77849C6.53933 6.90944 5.96452 5.2221 5.87181 5.02308C5.58441 4.46063 5.00033 4.19239 4.305 4.30488Z\"\n        fill=\"#BDBDBD\"\n      />\n    </svg>\n  );\n};\n\nexport const IconSpreg = () => {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 172 204\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g filter=\"\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M35.97 30.9699C39.254 30.9699 41.717 30.2529 43.359 28.8189C45.001 27.3839 45.822 25.0529 45.822 21.8259C45.822 18.7189 45.001 16.4619 43.359 15.0569C41.717 13.6539 39.254 12.9509 35.97 12.9509H20.28V30.9699H35.97ZM41.079 2.01294C43.998 2.01294 46.628 2.47694 48.97 3.40294C51.31 4.32994 53.317 5.59894 54.99 7.21294C56.662 8.82694 57.939 10.6949 58.821 12.8159C59.702 14.9379 60.144 17.2239 60.144 19.6739C60.144 23.4399 59.337 26.6979 57.727 29.4459C56.115 32.1959 53.485 34.2869 49.836 35.7219V35.9009C51.599 36.3799 53.059 37.1109 54.215 38.0969C55.369 39.0839 56.313 40.2489 57.043 41.5939C57.772 42.9389 58.304 44.4179 58.639 46.0309C58.973 47.6449 59.201 49.2589 59.323 50.8729C59.383 51.8889 59.444 53.0839 59.506 54.4589C59.565 55.8339 59.672 57.2379 59.825 58.6719C59.976 60.1059 60.22 61.4669 60.555 62.7509C60.888 64.0369 61.39 65.1269 62.06 66.0229H47.738C46.947 63.9919 46.461 61.5719 46.278 58.7619C46.096 55.9529 45.822 53.2639 45.457 50.6929C44.97 47.3469 43.937 44.8969 42.356 43.3419C40.774 41.7879 38.19 41.0109 34.602 41.0109H20.28V66.0229H5.95801V2.01294H41.079Z\"\n          fill=\"#BDBDBD\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M109.408 66.0129V77.8469H75.0999V91.5639H106.661V102.501H75.0999V118.19H110.117V130.023H62.0869V66.0129H109.408Z\"\n          fill=\"#BDBDBD\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M148.393 192.124C145.525 193.351 142.628 193.965 139.705 193.965C135.093 193.965 130.945 193.152 127.263 191.524C123.579 189.897 120.473 187.657 117.942 184.801C115.412 181.946 113.472 178.591 112.122 174.737C110.772 170.882 110.097 166.728 110.097 162.274C110.097 157.707 110.772 153.467 112.122 149.555C113.472 145.645 115.412 142.232 117.942 139.32C120.473 136.408 123.579 134.125 127.263 132.468C130.945 130.813 135.093 129.984 139.705 129.984C142.797 129.984 145.791 130.455 148.688 131.397C151.584 132.34 154.199 133.725 156.533 135.552C158.866 137.38 160.793 139.635 162.311 142.318C163.829 145.003 164.757 148.086 165.095 151.568H152.442C151.654 148.142 150.135 145.573 147.887 143.86C145.637 142.147 142.91 141.29 139.705 141.29C136.724 141.29 134.193 141.876 132.113 143.046C130.032 144.217 128.345 145.787 127.052 147.757C125.758 149.727 124.817 151.968 124.226 154.48C123.636 156.994 123.341 159.591 123.341 162.274C123.341 164.844 123.636 167.343 124.226 169.769C124.817 172.197 125.758 174.381 127.052 176.321C128.345 178.263 130.032 179.819 132.113 180.989C134.193 182.16 136.724 182.745 139.705 182.745C144.091 182.745 147.478 181.618 149.869 179.362C152.259 177.107 153.651 173.837 154.045 169.555H140.717V159.534H166.023V192.595H157.587L156.238 185.657C153.876 188.741 151.261 190.896 148.393 192.124Z\"\n          fill=\"#BDBDBD\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const IconSpatialJoin = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} viewBox=\"0 0 48 48\">\n      <path\n        fill=\"none\"\n        stroke=\"#BDBDBD\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M5.5 24h7.899v1.297a4 4 0 1 0 3 0V24H24m0 18.5v-7.899h1.297a4 4 0 1 0 0-3H24V24m18.5 0h-7.899v-1.297a4 4 0 1 0-3 0V24H24m0-18.5v7.899h-1.297a4 4 0 1 0 0 3H24V24\"\n      ></path>\n      <rect\n        width={37}\n        height={37}\n        x={5.5}\n        y={5.5}\n        fill=\"none\"\n        strokeWidth=\"3\"\n        stroke=\"#BDBDBD\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        rx={4}\n        ry={4}\n      ></rect>\n    </svg>\n  );\n};\n","import {Tooltip} from '@nextui-org/react';\nimport {useTheme as useNextTheme} from 'next-themes';\nimport {useEffect, useState} from 'react';\nimport {useDispatch} from 'react-redux';\n\n// An svg icon of sun that represents the light theme in the UI\nexport function SunIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"22\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"22\"\n    >\n      <g fill=\"#fff\">\n        <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\"></path>\n        <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\"></path>\n      </g>\n    </svg>\n  );\n}\n\n// An icon of moon that represents the dark theme in the UI\nexport function MoonIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"22\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"22\"\n    >\n      <path\n        d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n        fill=\"#fff\"\n      ></path>\n    </svg>\n  );\n}\n\n// A theme Switcher component that allows the user to switch between light and dark themes\nexport function ThemeSwitcher() {\n  const [mounted, setMounted] = useState(false);\n  const {theme, setTheme} = useNextTheme();\n  const dispatch = useDispatch();\n\n  // handle button click event\n  const onClick = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n    // dispatch to update the theme in the store\n    dispatch({type: 'SET_THEME', payload: theme === 'light' ? 'dark' : 'light'});\n  };\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) return null;\n\n  // if light theme return the moon icon, else return the sun icon\n  return (\n    <Tooltip content={theme === 'light' ? 'Switch to Dark' : 'Switch to Light'} placement=\"right\">\n      <div className=\"cursor-pointer\" onClick={onClick}>\n        {theme === 'light' ? <SunIcon /> : <MoonIcon />}\n      </div>\n    </Tooltip>\n  );\n}\n","import {setGridView, setPropertyPanel, setShowPropertyPanel} from '@/actions';\nimport {Button, Tooltip} from '@nextui-org/react';\nimport {useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {PanelName} from '../panel/panel-container';\nimport {GeoDaState} from '@/store';\n\n// An svg icon of dashboard composed by 4 squares\nexport function DashboardIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"24\"\n      role=\"presentation\"\n      viewBox=\"-2 -2 24 24\"\n      width=\"24\"\n      fill=\"#fff\"\n    >\n      <g fill=\"#fff\">\n        <rect x=\"2\" y=\"2\" width=\"8\" height=\"8\" />\n        <rect x=\"2\" y=\"12\" width=\"8\" height=\"8\" />\n        <rect x=\"12\" y=\"2\" width=\"8\" height=\"8\" />\n        <rect x=\"12\" y=\"12\" width=\"8\" height=\"8\" />\n      </g>\n    </svg>\n  );\n}\n\n// An svg icon of dashboard composed by 4 squares and a config gear on the top right corner\nexport function DashboardConfigIcon() {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M12 4H4V12H12V4Z\" fill=\"white\" />\n      <path d=\"M12 14H4V22H12V14Z\" fill=\"white\" />\n      <path d=\"M22 14H14V22H22V14Z\" fill=\"white\" />\n      <path d=\"M19.5 4.5L23.5 8.5Z\" fill=\"white\" />\n      <path d=\"M21.5 8.5L19.5 6.5Z\" fill=\"white\" />\n      <path d=\"M21.5 8.5L19.5 10.5Z\" fill=\"white\" />\n      <path d=\"M21.5 8.5L23.5 6.5Z\" fill=\"white\" />\n      <path d=\"M21.5 8.5L23.5 10.5Z\" fill=\"white\" />\n      <g clip-path=\"url(#clip0_557_5949)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M21.6798 6.57188L22.8363 6.76087C22.8821 6.76836 22.9237 6.79188 22.9537 6.82723C22.9836 6.86258 23.0001 6.90745 23 6.95381V8.02987C22.9999 8.07586 22.9836 8.12034 22.954 8.15552C22.9244 8.1907 22.8833 8.21432 22.838 8.22225L21.6804 8.42587C21.6133 8.65754 21.5209 8.88108 21.4047 9.09244L22.0893 10.0431C22.1164 10.0809 22.1292 10.127 22.1255 10.1733C22.1217 10.2197 22.1018 10.2632 22.0691 10.2962L21.308 11.0567C21.2756 11.0893 21.2327 11.1095 21.1869 11.1136C21.1412 11.1177 21.0954 11.1055 21.0577 11.0792L20.0975 10.4053C19.886 10.5234 19.661 10.6174 19.4264 10.6866L19.2223 11.8386C19.2143 11.8839 19.1906 11.925 19.1553 11.9545C19.12 11.984 19.0753 12.0002 19.0293 12H17.9532C17.907 12.0001 17.8622 11.9837 17.8268 11.9539C17.7915 11.924 17.7679 11.8825 17.7603 11.8369L17.5691 10.6899C17.335 10.6222 17.1092 10.5289 16.8957 10.4115L15.9429 11.0786C15.9052 11.1051 15.8594 11.1175 15.8135 11.1136C15.7677 11.1097 15.7246 11.0898 15.692 11.0572L14.9309 10.2956C14.8984 10.2627 14.8786 10.2194 14.8748 10.1733C14.8711 10.1272 14.8838 10.0813 14.9107 10.0436L15.584 9.102C15.4654 8.8874 15.371 8.66025 15.3027 8.42475L14.1614 8.22225C14.1162 8.2142 14.0753 8.19053 14.0458 8.15536C14.0163 8.1202 14.0001 8.07578 14 8.02987V6.95381C14 6.85819 14.0692 6.77662 14.1631 6.76087L15.305 6.57075C15.3731 6.3345 15.4676 6.10838 15.5863 5.89406L14.9203 4.94231C14.8938 4.90469 14.8816 4.85895 14.8856 4.81316C14.8896 4.76737 14.9096 4.72446 14.9422 4.692L15.7027 3.9315C15.7702 3.864 15.8771 3.855 15.9547 3.91069L16.8997 4.58569C17.1131 4.46909 17.3387 4.37647 17.5724 4.3095L17.7598 3.16425C17.7672 3.11835 17.7908 3.07661 17.8263 3.04651C17.8617 3.01642 17.9067 2.99993 17.9532 3H19.0293C19.1249 3 19.2059 3.06863 19.2223 3.162L19.4242 4.31344C19.6576 4.3815 19.8826 4.47487 20.0953 4.593L21.0431 3.91181C21.0808 3.88455 21.127 3.87161 21.1734 3.87532C21.2197 3.87904 21.2633 3.89915 21.2962 3.93206L22.0567 4.69256C22.1242 4.76006 22.1332 4.86581 22.0786 4.94344L21.4036 5.90531C21.5195 6.11681 21.6123 6.33956 21.6798 6.57188ZM17.1303 7.5C17.1303 7.67987 17.1657 7.85798 17.2346 8.02416C17.3034 8.19033 17.4043 8.34133 17.5315 8.46851C17.6587 8.5957 17.8097 8.69659 17.9758 8.76543C18.142 8.83426 18.3201 8.86969 18.5 8.86969C18.6799 8.86969 18.858 8.83426 19.0242 8.76543C19.1903 8.69659 19.3413 8.5957 19.4685 8.46851C19.5957 8.34133 19.6966 8.19033 19.7654 8.02416C19.8343 7.85798 19.8697 7.67987 19.8697 7.5C19.8697 7.13674 19.7254 6.78835 19.4685 6.53148C19.2116 6.27462 18.8633 6.13031 18.5 6.13031C18.1367 6.13031 17.7884 6.27462 17.5315 6.53148C17.2746 6.78835 17.1303 7.13674 17.1303 7.5Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_557_5949\">\n          <rect width=\"9\" height=\"9\" fill=\"white\" transform=\"translate(14 3)\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\n// An svg icon of camera\nexport function CameraIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"24\"\n      role=\"presentation\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <g fill=\"#fff\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.89 2 1.99 2H20c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 14l-4-4 4-4v3h4v2h-4v3z\" />\n      </g>\n    </svg>\n  );\n}\n\n// An svg icon of map\nexport function MapIcon() {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      height=\"24\"\n      role=\"presentation\"\n      viewBox=\"0 0 20 30\"\n      width=\"24\"\n    >\n      <g fill=\"#fff\">\n        <rect x=\"0\" y=\"2\" width=\"14\" height=\"22\" rx=\"2\" ry=\"2\" />\n        <rect x=\"16\" y=\"2\" width=\"7\" height=\"22\" />\n      </g>\n    </svg>\n  );\n}\n\n// A dashboard Switcher component that allows the user to switch between dashboard and map\nexport function DashboardSwitcher({isDisabled}: {isDisabled?: boolean}) {\n  const dispatch = useDispatch();\n\n  // get property panel from redux store\n  const showPropertyPanel = useSelector(\n    (state: GeoDaState) => state.root.uiState.showPropertyPanel\n  );\n  const propertyPanel = useSelector((state: GeoDaState) => state.root.uiState.propertyPanelName);\n  const showGridView = useSelector((state: GeoDaState) => state.root.uiState.showGridView);\n\n  const dashboardState = showGridView\n    ? showPropertyPanel && propertyPanel !== PanelName.DASHBOARD\n      ? 'dashboard-config'\n      : 'dashboard'\n    : 'map';\n\n  const onToggleGridCallback = useCallback(() => {\n    if (dashboardState === 'map') {\n      // switch to dashboard\n      dispatch(setGridView(true));\n      // show dashboard panel\n      dispatch(setPropertyPanel(PanelName.DASHBOARD));\n    } else {\n      // when dashboard panel is not shown, show dashboard panel\n      if (dashboardState === 'dashboard-config') {\n        dispatch(setPropertyPanel(PanelName.DASHBOARD));\n      } else {\n        // switch to map\n        dispatch(setGridView(false));\n        dispatch(setShowPropertyPanel(false));\n      }\n    }\n  }, [dispatch, dashboardState]);\n\n  return (\n    <Tooltip\n      content={\n        dashboardState === 'map'\n          ? 'Switch to Dashboard'\n          : dashboardState === 'dashboard-config'\n            ? 'Switch to Dashboard'\n            : 'Switch to Map'\n      }\n      placement=\"right\"\n    >\n      <Button\n        isIconOnly\n        size=\"sm\"\n        className=\"bg-transparent\"\n        id=\"icon-dashboard\"\n        onClick={onToggleGridCallback}\n        isDisabled={isDisabled}\n      >\n        {dashboardState === 'map' ? (\n          <DashboardIcon />\n        ) : dashboardState === 'dashboard-config' ? (\n          <DashboardConfigIcon />\n        ) : (\n          <MapIcon />\n        )}\n      </Button>\n    </Tooltip>\n  );\n}\n","import React from 'react';\n\n// svg icon with a + sign for adding dataset\nexport const IconAdd = ({width = 24, height = 24}) => {\n  return (\n    <svg\n      className=\"fill-none stroke-[#FFF]\"\n      height={height}\n      viewBox=\"0 0 24 24\"\n      width={width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"add\" fill=\"#444444\">\n        <line x1=\"12\" x2=\"12\" y1=\"5\" y2=\"19\" strokeWidth=\"3\" strokeLinecap=\"round\" />\n        <line x1=\"5\" x2=\"19\" y1=\"12\" y2=\"12\" strokeWidth=\"3\" strokeLinecap=\"round\" />\n      </g>\n    </svg>\n  );\n};\n\n// svg 24x24 icon with a dataset icon and a + sign on the top right corner\nexport const IconAddDataset = ({width = 20, height = 24}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 100 100\"\n      className=\"fill-none stroke-[#FFF]\"\n    >\n      <path\n        fill=\"#ddd\"\n        fillRule=\"evenodd\"\n        d=\"M100 22.5v-.29a2.5 2.5 0 0 0-.014-.265c.005.185.014.369.014.555M74 10h7v9h9v7h-9v9h-7v-9h-9v-7h9zm3.5-5C67.805 5 60 12.805 60 22.5S67.805 40 77.5 40S95 32.195 95 22.5S87.195 5 77.5 5\"\n        color=\"currentColor\"\n      ></path>\n      <path\n        fill=\"#ddd\"\n        fillRule=\"evenodd\"\n        d=\"m5 11.418l27.275 12.67l.371 64.95L5 76.192ZM2.586 5.002A2.5 2.5 0 0 0 0 7.5v70.29a2.5 2.5 0 0 0 1.447 2.267l31.666 14.71A2.5 2.5 0 0 0 34.19 95a2.5 2.5 0 0 0 1.032-.232l30.613-14.221l30.613 14.22A2.5 2.5 0 0 0 100 92.5v-70a22.382 22.382 0 0 1-5 14.111v51.971L67.322 75.725l-.19-33.27a22.575 22.575 0 0 1-3.01-1.883l.2 35.162l-28.676 13.323l-.369-64.606l21.15-9.826a22.568 22.568 0 0 1 4.991-7.832l-27.252 12.66L3.553 5.233a2.5 2.5 0 0 0-.967-.231\"\n        color=\"#ddd\"\n      ></path>\n    </svg>\n  );\n};\n","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Badge, Button, Tooltip, Avatar} from '@nextui-org/react';\nimport {Icon} from '@iconify/react';\nimport {GeoDaLogo} from './geoda-logo';\nimport {\n  IconBoxplot,\n  IconBubbleChart,\n  IconHistogram,\n  IconLisa,\n  IconMap,\n  IconOpen,\n  IconParallel,\n  IconScatterplot,\n  IconTable,\n  IconWeights,\n  IconSpreg,\n  IconSave,\n  IconSpatialJoin\n} from './navitagor-icons';\nimport {\n  setAddDatasetModal,\n  setKeplerTableModal,\n  setOpenFileModal,\n  setPropertyPanel,\n  setSaveProjectModal,\n  setShowChatPanel\n} from '../../actions';\nimport {GeoDaState} from '../../store';\nimport {PanelName} from '../panel/panel-container';\nimport {ThemeSwitcher} from '../buttons/theme-switch';\nimport {DashboardSwitcher} from '../buttons/dashboard-switch';\nimport {IconAddDataset} from '../icons/add';\n\nexport function Navigator() {\n  const dispatch = useDispatch();\n\n  const showOpenModal = useSelector((state: GeoDaState) => state.root.uiState.showOpenFileModal);\n  const showSaveProjectModal = useSelector(\n    (state: GeoDaState) => state.root.uiState.showSaveProjectModal\n  );\n  const showAddDatasetModal = useSelector(\n    (state: GeoDaState) => state.root.uiState.showAddDatasetModal\n  );\n  const isFileLoaded = useSelector((state: GeoDaState) => state.root.datasets?.length > 0);\n\n  const showChatPanel = useSelector((state: GeoDaState) => state.root.uiState.showChatPanel);\n\n  // get number of newly added weights from state.root.weights\n  const newWeightsCount = useSelector(\n    (state: GeoDaState) => state.root.weights.filter(weight => weight.isNew).length\n  );\n\n  // get number of newly added plots from state.root.plots\n  const newHistogramCount = useSelector(\n    (state: GeoDaState) =>\n      state.root.plots.filter(plot => plot.isNew && plot.type === 'histogram').length\n  );\n\n  // get number of newly added regressions from state.root.regressions\n  const newRegressionCount = useSelector(\n    (state: GeoDaState) => state.root.regressions.filter(reg => reg.isNew).length\n  );\n\n  // get number of newly added scatterplots from state.root.plots\n  const newScatterplotCount = useSelector(\n    (state: GeoDaState) =>\n      state.root.plots.filter(plot => plot.isNew && plot.type === 'scatter').length\n  );\n\n  // get number of newly added bubble charts from state.root.plots\n  const newBubbleChartCount = useSelector(\n    (state: GeoDaState) =>\n      state.root.plots.filter(plot => plot.isNew && plot.type === 'bubble').length\n  );\n\n  // get number of newly added boxplots from state.root.plots\n  const newBoxplotCount = useSelector(\n    (state: GeoDaState) =>\n      state.root.plots.filter(plot => plot.isNew && plot.type === 'boxplot').length\n  );\n\n  const onOpenCallback = useCallback(\n    (event: React.MouseEvent) => {\n      // dispatch action to open modal, update redux state state.root.uiState.showOpenFileModal\n      dispatch(setOpenFileModal(!showOpenModal));\n      event.preventDefault();\n      event.stopPropagation();\n    },\n    [dispatch, showOpenModal]\n  );\n\n  const onSaveCallback = useCallback(\n    (event: React.MouseEvent) => {\n      dispatch(setSaveProjectModal(!showSaveProjectModal));\n      event.stopPropagation();\n    },\n    [dispatch, showSaveProjectModal]\n  );\n\n  const onAddCallback = useCallback(\n    (event: React.MouseEvent) => {\n      dispatch(setAddDatasetModal(!showAddDatasetModal));\n      event.stopPropagation();\n    },\n    [dispatch, showAddDatasetModal]\n  );\n\n  const onTableCallback = useCallback(\n    (event: React.MouseEvent) => {\n      dispatch(setPropertyPanel(PanelName.TABLE));\n      dispatch(setKeplerTableModal(true));\n      event.stopPropagation();\n    },\n    [dispatch]\n  );\n\n  const onClickIconCallback = useCallback(\n    (event: React.MouseEvent) => {\n      const targetId = event.currentTarget.id;\n      switch (targetId) {\n        case 'icon-weights':\n          dispatch(setPropertyPanel(PanelName.WEIGHTS));\n          break;\n        case 'icon-mapping':\n          dispatch(setPropertyPanel(PanelName.MAPPING));\n          break;\n        case 'icon-chatgpt':\n          dispatch(setShowChatPanel(!showChatPanel));\n          break;\n        case 'icon-settings':\n          dispatch(setPropertyPanel(PanelName.SETTINGS));\n          break;\n        case 'icon-lisa':\n          dispatch(setPropertyPanel(PanelName.LISA));\n          break;\n        case 'icon-histogram':\n          dispatch(setPropertyPanel(PanelName.HISTOGRAM));\n          break;\n        case 'icon-scatterplot':\n          dispatch(setPropertyPanel(PanelName.SCATTERPLOT));\n          break;\n        case 'icon-cartogram': // Maybe change this to BUBBLE chart ?\n          dispatch(setPropertyPanel(PanelName.BUBBLE_CHART));\n          break;\n        case 'icon-boxplot':\n          dispatch(setPropertyPanel(PanelName.BOXPLOT));\n          break;\n        case 'icon-spreg':\n          dispatch(setPropertyPanel(PanelName.SPREG));\n          break;\n        case 'icon-pcp':\n          dispatch(setPropertyPanel(PanelName.PARALLEL_COORDINATE));\n          break;\n        case 'icon-spatial-join':\n          dispatch(setPropertyPanel(PanelName.SPATIAL_JOIN));\n          break;\n      }\n      event.stopPropagation();\n    },\n    [dispatch, showChatPanel]\n  );\n\n  const buttonClassName = 'bg-transparent active:outline-none active:ring-0';\n\n  return (\n    <div className=\"justify-top flex h-screen w-[48px] flex-col items-center bg-gradient-to-b from-amber-950 via-amber-900 to-gray-800\">\n      <GeoDaLogo />\n      <div className=\"justify-top mt-4 flex w-full grow flex-col items-center\">\n        <Tooltip key=\"openFileTooltip\" placement=\"right\" content=\"Open File\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            onClick={onOpenCallback}\n            isDisabled={isFileLoaded}\n          >\n            <IconOpen />\n          </Button>\n        </Tooltip>\n        <Tooltip key=\"saveTooltip\" placement=\"right\" content=\"Save\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            isDisabled={!isFileLoaded}\n            onClick={onSaveCallback}\n          >\n            <IconSave />\n          </Button>\n        </Tooltip>\n        <Tooltip key=\"addFileTooltip\" placement=\"right\" content=\"Add Dataset\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            onClick={onAddCallback}\n            isDisabled={!isFileLoaded}\n          >\n            <IconAddDataset />\n          </Button>\n        </Tooltip>\n        <Tooltip key=\"tableTooltip\" placement=\"right\" content=\"Table\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            isDisabled={!isFileLoaded}\n            onClick={onTableCallback}\n          >\n            <IconTable />\n          </Button>\n        </Tooltip>\n        <Tooltip key=\"mappingTooltip\" placement=\"right\" content=\"Map\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            id=\"icon-mapping\"\n            onClick={onClickIconCallback}\n            isDisabled={!isFileLoaded}\n          >\n            <IconMap />\n          </Button>\n        </Tooltip>\n        <Badge\n          color=\"danger\"\n          content={newWeightsCount}\n          isInvisible={newWeightsCount === 0}\n          size=\"sm\"\n          placement=\"bottom-right\"\n          isOneChar\n        >\n          <Tooltip key=\"weightsTooltip\" placement=\"right\" content=\"Spatial Weights\">\n            <Button\n              isIconOnly\n              size=\"sm\"\n              className={buttonClassName}\n              id=\"icon-weights\"\n              onClick={onClickIconCallback}\n              isDisabled={!isFileLoaded}\n            >\n              <IconWeights />\n            </Button>\n          </Tooltip>\n        </Badge>\n        <Tooltip key=\"spatialJoinTooltip\" placement=\"right\" content=\"Spatial Join\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            id=\"icon-spatial-join\"\n            onClick={onClickIconCallback}\n            isDisabled={!isFileLoaded}\n          >\n            <IconSpatialJoin />\n          </Button>\n        </Tooltip>\n        {/* <Tooltip key=\"customMapTooltip\" placement=\"right\" content=\"Custom Map\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            id=\"icon-custom-map\"\n            onClick={onClickIconCallback}\n            isDisabled={!isFileLoaded}\n          >\n            <IconChoropleth />\n          </Button>\n        </Tooltip> */}\n        <Badge\n          color=\"danger\"\n          content={newHistogramCount}\n          isInvisible={newHistogramCount === 0}\n          size=\"sm\"\n          placement=\"bottom-right\"\n          isOneChar\n        >\n          <Tooltip key=\"histogramTooltip\" placement=\"right\" content=\"Histogram\">\n            <Button\n              isIconOnly\n              size=\"sm\"\n              className={buttonClassName}\n              id=\"icon-histogram\"\n              onClick={onClickIconCallback}\n              isDisabled={!isFileLoaded}\n            >\n              <IconHistogram />\n            </Button>\n          </Tooltip>\n        </Badge>\n        <Badge\n          color=\"danger\"\n          content={newScatterplotCount}\n          isInvisible={newScatterplotCount === 0}\n          size=\"sm\"\n          placement=\"bottom-right\"\n          isOneChar\n        >\n          <Tooltip key=\"scatterplotTooltip\" placement=\"right\" content=\"Scatter Plot\">\n            <Button\n              isIconOnly\n              size=\"sm\"\n              className={buttonClassName}\n              id=\"icon-scatterplot\"\n              onClick={onClickIconCallback}\n              isDisabled={!isFileLoaded}\n            >\n              <IconScatterplot />\n            </Button>\n          </Tooltip>\n        </Badge>\n        <Badge\n          color=\"danger\"\n          content={newBoxplotCount}\n          isInvisible={newBoxplotCount === 0}\n          size=\"sm\"\n          placement=\"bottom-right\"\n          isOneChar\n        >\n          <Tooltip key=\"boxplotTooltip\" placement=\"right\" content=\"Box Plot\">\n            <Button\n              isIconOnly\n              size=\"sm\"\n              className={buttonClassName}\n              id=\"icon-boxplot\"\n              onClick={onClickIconCallback}\n              isDisabled={!isFileLoaded}\n            >\n              <IconBoxplot />\n            </Button>\n          </Tooltip>\n        </Badge>\n        <Badge\n          color=\"danger\"\n          content={newBubbleChartCount}\n          isInvisible={newBubbleChartCount === 0}\n          size=\"sm\"\n          placement=\"bottom-right\"\n          isOneChar\n        >\n          <Tooltip key=\"cartogramTooltip\" placement=\"right\" content=\"BubbleChart\">\n            <Button\n              isIconOnly\n              size=\"sm\"\n              className={buttonClassName}\n              id=\"icon-cartogram\"\n              onClick={onClickIconCallback}\n              isDisabled={!isFileLoaded}\n            >\n              <IconBubbleChart />\n            </Button>\n          </Tooltip>\n        </Badge>\n        <Tooltip key=\"pcpTooltip\" placement=\"right\" content=\"Parallel Coordinate Plot\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            id=\"icon-pcp\"\n            onClick={onClickIconCallback}\n            isDisabled={!isFileLoaded}\n          >\n            <IconParallel />\n          </Button>\n        </Tooltip>\n        <Tooltip\n          key=\"lisaTooltip\"\n          placement=\"right\"\n          content=\"Local Indicators of Spatial Autocorrelation\"\n        >\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            id=\"icon-lisa\"\n            onClick={onClickIconCallback}\n            isDisabled={!isFileLoaded}\n          >\n            <IconLisa />\n          </Button>\n        </Tooltip>\n        <Badge\n          color=\"danger\"\n          content={newRegressionCount}\n          isInvisible={newRegressionCount === 0}\n          size=\"sm\"\n          placement=\"bottom-right\"\n          isOneChar\n        >\n          <Tooltip key=\"spregTooltip\" placement=\"right\" content=\"Spatial Regression\">\n            <Button\n              isIconOnly\n              size=\"sm\"\n              className={buttonClassName}\n              id=\"icon-spreg\"\n              onClick={onClickIconCallback}\n              isDisabled={!isFileLoaded}\n            >\n              <IconSpreg />\n            </Button>\n          </Tooltip>\n        </Badge>\n      </div>\n      <div className=\"justify-top mb-4 mt-4 flex w-full flex-none flex-col items-center gap-2\">\n        <Tooltip key=\"chatgptTooltip\" placement=\"right\" content=\"GeoDa.AI ChatBot\">\n          <Button\n            isIconOnly\n            size=\"sm\"\n            className={buttonClassName}\n            id=\"icon-chatgpt\"\n            onClick={onClickIconCallback}\n            isDisabled={!isFileLoaded}\n          >\n            <Icon icon=\"hugeicons:ai-chat-02\" width={24} style={{color: '#fff'}} />\n          </Button>\n        </Tooltip>\n        <DashboardSwitcher isDisabled={!isFileLoaded} />\n        <ThemeSwitcher />\n        <Button\n          isIconOnly\n          size=\"sm\"\n          className={buttonClassName}\n          id=\"icon-settings\"\n          onClick={onClickIconCallback}\n        >\n          <Avatar showFallback src=\"\" className=\"mt-2 h-6 w-6\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport dynamic from 'next/dynamic';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Icon} from '@iconify/react';\nimport {GeoDaState} from '../../store';\nimport {DEFAULT_TABLE_HEIGHT} from '@/constants';\nimport {Splitter} from '../common/splitter';\nimport {mainTableNameSelector} from '@/store/selectors';\nimport {setKeplerTableModal} from '@/actions';\n\nconst DuckDBTable = dynamic(() => import('./duckdb-table'), {ssr: false});\n\nexport const TableContainer = () => {\n  const dispatch = useDispatch();\n\n  const [tableHeight, setTableHeight] = React.useState<number>(DEFAULT_TABLE_HEIGHT);\n\n  // get showGridView from redux state\n  const showTable = useSelector((state: GeoDaState) => state.root.uiState.showKeplerTable);\n\n  // get table name\n  const tableName = useSelector(mainTableNameSelector);\n\n  const onCloseTableClicked = () => {\n    dispatch(setKeplerTableModal(false));\n  };\n\n  return showTable && tableName ? (\n    <div className=\"relative flex-grow-0 p-0\" style={{height: tableHeight}}>\n      <Splitter\n        mode=\"vertical\"\n        initialSize={tableHeight}\n        onSplitterChange={setTableHeight}\n        minimumSize={100}\n      />\n      <div\n        className=\"absolute right-1 top-0 z-[101] m-2 cursor-pointer\"\n        onClick={onCloseTableClicked}\n      >\n        <Icon icon=\"material-symbols:close\" width={12} color=\"black\" />\n      </div>\n      <DuckDBTable />\n    </div>\n  ) : null;\n};\n","import React, {useMemo, useState} from 'react';\nimport MonacoEditor from '@monaco-editor/react';\nimport {editor} from 'monaco-editor';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Card,\n  CardBody,\n  ModalFooter,\n  CardFooter,\n  Button\n} from '@nextui-org/react';\n\nimport {GeoDaState} from '../store';\nimport {setSaveProjectModal} from '../actions';\nimport {downloadStringToFile} from '@/utils/file-utils';\nimport {MAP_ID} from '@/constants';\nimport KeplerGLSchemaManager from '@kepler.gl/schemas';\nimport {getArrowTableAsBase64, saveGeoDaConfig} from '@/utils/project-utils';\n\nconst ARROW_TABLE_CONTENT_PLACEHOLDER = '[arrow Object][]';\nconst WEIGHTS_CONTENT_PLACEHOLDER = '[weights Object][]';\n\nconst SaveProjectComponent = () => {\n  const dispatch = useDispatch();\n  const [isValid, setIsValid] = useState(true);\n\n  // get the kepler.gl config from redux store\n  const keplerState = useSelector((state: GeoDaState) => state.keplerGl[MAP_ID]);\n  // get the root from redux store\n  const root = useSelector((state: GeoDaState) => state.root);\n  const theme = useSelector((state: GeoDaState) => state.root.uiState.theme);\n\n  // get the datasets to save\n  const datasets = root.datasets.map(d => {\n    return {\n      fileName: d.fileName,\n      dataId: d.dataId,\n      arrowTable: getArrowTableAsBase64(d.arrowTable)\n    };\n  });\n\n  // get the kepler config to save\n  const savedKeplerConfig = useMemo(() => {\n    const config = KeplerGLSchemaManager.getConfigToSave(keplerState);\n    return config.config;\n  }, [keplerState]);\n\n  // get the geoda config to save\n  const savedGeoDaConfig = useMemo(() => {\n    const config = saveGeoDaConfig(root);\n    return config;\n  }, [root]);\n\n  // create a project json string\n  const projectJson = useMemo(() => {\n    return {\n      datasets,\n      keplerConfig: savedKeplerConfig,\n      geodaConfig: savedGeoDaConfig\n    };\n  }, [datasets, savedGeoDaConfig, savedKeplerConfig]);\n\n  // create a preview of the project json string\n  const projectPreview = useMemo(() => {\n    // replace projectJson.arrowTable with ARROW_TABLE_CONTENT_PLACEHOLDER\n    // replace projectJson.geodaConfig.weighs with '[weights Object]'\n    const preview = {\n      ...projectJson,\n      datasets: ARROW_TABLE_CONTENT_PLACEHOLDER,\n      geodaConfig: {\n        ...projectJson.geodaConfig,\n        weights: WEIGHTS_CONTENT_PLACEHOLDER\n      }\n    };\n    return JSON.stringify(preview);\n  }, [projectJson]);\n\n  // set state for monaco editor\n  const [code, setCode] = useState(projectPreview || '');\n\n  // format the code in manaco editor after the component is mounted\n  const onEditorMount = (editor: editor.IStandaloneCodeEditor) => {\n    setTimeout(() => {\n      editor?.getAction('editor.action.formatDocument')?.run();\n    }, 1000);\n  };\n\n  // handle monaco editor change\n  const onMonacoEditorChange = (value: string | undefined) => {\n    if (value) {\n      setCode(value);\n    }\n  };\n\n  const onMonacoEditorValidate = (markers: editor.IMarkerData[]) => {\n    setIsValid(markers.length === 0);\n  };\n\n  // handle save button click\n  const onSaveClick = () => {\n    // save the project\n    // replace ARROW_TABLE_CONTENT_PLACEHOLDER with datasets\n    // replace WEIGHTS_CONTENT_PLACEHOLDER with weights\n    const project = code\n      .replace(`\"${ARROW_TABLE_CONTENT_PLACEHOLDER}\"`, JSON.stringify(datasets))\n      .replace(`\"${WEIGHTS_CONTENT_PLACEHOLDER}\"`, JSON.stringify(savedGeoDaConfig.weights));\n\n    // create a file name 'geoda-[current date and time].json'\n    const fileName = `project-${new Date().toISOString()}.geoda`;\n    const contentType = 'application/json';\n    // save the project to a file download in browser\n    downloadStringToFile(project, fileName, contentType);\n\n    // close modal\n    setTimeout(() => {\n      dispatch(setSaveProjectModal(false));\n    }, 100);\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <Card>\n        <CardBody>\n          <div className=\"h-80 w-full\">\n            <MonacoEditor\n              language=\"json\"\n              value={code}\n              onChange={onMonacoEditorChange}\n              options={{\n                minimap: {enabled: true}\n              }}\n              onMount={onEditorMount}\n              onValidate={onMonacoEditorValidate}\n              theme={theme === 'dark' ? 'vs-dark' : 'vs-light'}\n            />\n          </div>\n        </CardBody>\n        <CardFooter className=\"justify-between text-small\"></CardFooter>\n      </Card>\n      <Button\n        className=\"text-tiny\"\n        color=\"danger\"\n        size=\"sm\"\n        onClick={onSaveClick}\n        isDisabled={!isValid}\n      >\n        Save\n      </Button>\n    </div>\n  );\n};\n\nexport function SaveProjectModal() {\n  // get the dispatch function from the redux store\n  const dispatch = useDispatch();\n\n  // get the state showProjectModal from the redux store\n  const showProjectModal = useSelector(\n    (state: GeoDaState) => state.root.uiState.showSaveProjectModal\n  );\n\n  const onCloseModal = () => {\n    dispatch(setSaveProjectModal(false));\n  };\n\n  return showProjectModal ? (\n    <Modal\n      isOpen={showProjectModal}\n      onClose={onCloseModal}\n      size=\"3xl\"\n      placement=\"center\"\n      className=\"min-w-80\"\n      isDismissable={false}\n    >\n      <ModalContent>\n        <ModalHeader className=\"flex flex-col gap-1\">Save Project</ModalHeader>\n        <ModalBody>\n          <SaveProjectComponent />\n        </ModalBody>\n        <ModalFooter />\n      </ModalContent>\n    </Modal>\n  ) : null;\n}\n","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport dynamic from 'next/dynamic';\nimport {Icon} from '@iconify/react';\nimport {GeoDaState} from '../../store';\nimport {setShowChatPanel} from '@/actions';\nimport {Splitter} from '../common/splitter';\nimport {DEFAULT_CHATPANEL_WIDTH} from '@/constants';\nimport {Button} from '@nextui-org/react';\n\nconst ChatGPTPanel = dynamic(() => import('../chatgpt/chatgpt-panel'), {ssr: false});\n\nexport const ChatPanelContainer = () => {\n  const dispatch = useDispatch();\n\n  const [panelWidth, setPanelWidth] = React.useState<number>(DEFAULT_CHATPANEL_WIDTH);\n\n  // get showGridView from redux state\n  const showChatPanel = useSelector((state: GeoDaState) => state.root.uiState.showChatPanel);\n\n  const onCloseClick = useCallback(\n    (event: React.MouseEvent) => {\n      dispatch(setShowChatPanel(false));\n      event.preventDefault();\n      event.stopPropagation();\n    },\n    [dispatch]\n  );\n\n  return showChatPanel ? (\n    <div\n      className=\"relative flex h-screen flex-row bg-gray-50 dark:bg-stone-900\"\n      style={{width: panelWidth}}\n    >\n      <Splitter\n        mode=\"horizontal\"\n        initialSize={panelWidth}\n        onSplitterChange={setPanelWidth}\n        minimumSize={DEFAULT_CHATPANEL_WIDTH}\n      />\n      <div className=\"relative flex flex-grow flex-col\">\n        <Button\n          className=\"absolute right-1 top-1 z-10\"\n          isIconOnly={true}\n          variant=\"light\"\n          size=\"sm\"\n          onClick={onCloseClick}\n        >\n          <Icon icon=\"system-uicons:window-collapse-right\" width={18} />\n        </Button>\n        <div className=\"h-full\" style={{width: `${panelWidth}px`}}>\n          <ChatGPTPanel />\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","import {setScreenCaptured, setStartScreenCapture} from '@/actions';\nimport {MouseEvent, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport html2canvas from 'html2canvas';\n\nimport {Navigator} from '@/components/navigator';\nimport {TableContainer} from '@/components/table/table-container';\nimport {PanelContainer} from '@/components/panel/panel-container';\nimport {SaveProjectModal} from '@/components/save-project-modal';\nimport {ChatPanelContainer} from '@/components/panel/chat-panel';\n\nimport dynamic from 'next/dynamic';\nconst OpenFileModal = dynamic(() => import('@/components/open-file-modal'), {ssr: false});\nconst GridLayout = dynamic(() => import('@/components/dashboard/grid-layout'), {ssr: false});\nimport {AddDatasetModal} from '@/components/open-file-modal';\nimport {GeoDaState} from '@/store';\n\nexport default function MainContainerWithScreenCapture({projectUrl}: {projectUrl: string | null}) {\n  const dispatch = useDispatch();\n\n  // get startScreenCapture from redux state\n  const startScreenCapture = useSelector(\n    (state: GeoDaState) => state.root.uiState.startScreenCapture\n  );\n\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  const [crossHairsTop, setCrossHairsTop] = useState(0);\n  const [crossHairsLeft, setCrossHairsLeft] = useState(0);\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(0);\n  const [windowHeight, setWindowHeight] = useState(0);\n  const [borderWidth, setBorderWidth] = useState<number | string>(0);\n  const [cropPositionTop, setCropPositionTop] = useState(0);\n  const [cropPositionLeft, setCropPositionLeft] = useState(0);\n  const [cropWidth, setCropWidth] = useState(0);\n  const [cropHeight, setCropHeight] = useState(0);\n\n  const handleWindowResize = () => {\n    const windowWidth =\n      window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const windowHeight =\n      window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    setWindowWidth(windowWidth);\n    setWindowHeight(windowHeight);\n  };\n\n  useEffect(() => {\n    // when the component mounts, set the window width and height\n    handleWindowResize();\n    window.addEventListener('resize', handleWindowResize);\n    // remove the event listener when the component unmounts\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n\n  const handleMouseMove = (e: MouseEvent<HTMLDivElement>) => {\n    if (startScreenCapture === false) {\n      // return and pass the event to the next element\n      return;\n    }\n\n    let cropTop = startY;\n    let cropLeft = startX;\n    const clientX = e.clientX;\n    const clientY = e.clientY;\n    const isStartTop = clientY >= startY;\n    const isStartBottom = clientY <= startY;\n    const isStartLeft = clientX >= startX;\n    const isStartRight = clientX <= startX;\n    const isStartTopLeft = isStartTop && isStartLeft;\n    const isStartTopRight = isStartTop && isStartRight;\n    const isStartBottomLeft = isStartBottom && isStartLeft;\n    const isStartBottomRight = isStartBottom && isStartRight;\n    let newBorderWidth = borderWidth;\n    let cropW = 0;\n    let cropH = 0;\n\n    if (isMouseDown) {\n      if (isStartTopLeft) {\n        newBorderWidth = `${startY}px ${windowWidth - clientX}px ${windowHeight - clientY}px ${startX}px`;\n        cropW = clientX - startX;\n        cropH = clientY - startY;\n      }\n\n      if (isStartTopRight) {\n        newBorderWidth = `${startY}px ${windowWidth - startX}px ${windowHeight - clientY}px ${clientX}px`;\n        cropW = startX - clientX;\n        cropH = clientY - startY;\n        cropLeft = clientX;\n      }\n\n      if (isStartBottomLeft) {\n        newBorderWidth = `${clientY}px ${windowWidth - clientX}px ${windowHeight - startY}px ${startX}px`;\n        cropW = clientX - startX;\n        cropH = startY - clientY;\n        cropTop = clientY;\n      }\n      if (isStartBottomRight) {\n        newBorderWidth = `${clientY}px ${windowWidth - startX}px ${windowHeight - startY}px ${clientX}px`;\n        cropW = startX - clientX;\n        cropH = startY - clientY;\n        cropTop = clientY;\n        cropLeft = clientX;\n      }\n    }\n    setCrossHairsTop(clientY);\n    setCrossHairsLeft(clientX);\n    setBorderWidth(newBorderWidth);\n    setCropWidth(cropW);\n    setCropHeight(cropH);\n    setCropPositionTop(cropTop);\n    setCropPositionLeft(cropLeft);\n  };\n\n  const handleMouseDown = (e: MouseEvent<HTMLDivElement>) => {\n    if (startScreenCapture === false) {\n      // return and pass the event to the next element\n      return;\n    }\n\n    const clientX = e.clientX;\n    const clientY = e.clientY;\n\n    setStartX(clientX);\n    setStartY(clientY);\n    setCropPositionTop(clientY);\n    setCropPositionLeft(clientX);\n    setIsMouseDown(true);\n    setBorderWidth(`${windowWidth}px ${windowHeight}px`);\n  };\n  const handleMoouseUp = () => {\n    if (startScreenCapture === false) {\n      // return and pass the event to the next element\n      return;\n    }\n    handleClickTakeScreenShot();\n    setIsMouseDown(false);\n    setBorderWidth(0);\n    // reset the startScreenCapture to false\n    dispatch(setStartScreenCapture(false));\n  };\n  const handleClickTakeScreenShot = () => {\n    const body = document.querySelector('body');\n    if (body) {\n      // get the scale of hdpi screen\n      const scale = window.devicePixelRatio;\n      html2canvas(body, {scale}).then(canvas => {\n        const croppedCanvas = document.createElement('canvas');\n        const croppedCanvasContext = croppedCanvas.getContext('2d');\n\n        croppedCanvas.width = cropWidth;\n        croppedCanvas.height = cropHeight;\n\n        if (croppedCanvasContext) {\n          croppedCanvasContext.drawImage(\n            canvas,\n            cropPositionLeft * scale,\n            cropPositionTop * scale,\n            cropWidth * scale,\n            cropHeight * scale,\n            0,\n            0,\n            cropWidth,\n            cropHeight\n          );\n        }\n\n        if (croppedCanvas.toDataURL) {\n          const dataURL = croppedCanvas.toDataURL();\n          dispatch(setScreenCaptured(dataURL));\n          // save the image to file\n          // const link = document.createElement('a');\n          // link.download = 'screenshot.png';\n          // link.href = dataURL;\n          // link.click();\n        }\n      });\n    }\n    setCrossHairsLeft(0);\n    setCrossHairsTop(0);\n  };\n\n  return (\n    <div onMouseMove={handleMouseMove} onMouseDown={handleMouseDown} onMouseUp={handleMoouseUp}>\n      <div className=\"min-w-100 relative flex h-screen w-screen flex-row items-start border-none\">\n        <Navigator />\n        <div className=\"shadow-[rgba(0,0,15,0.5)_10px_0px_10px_0px]\">\n          <PanelContainer />\n        </div>\n        <div className=\"flex h-screen flex-1 flex-grow flex-col overflow-auto\">\n          <div className=\"flex-1 flex-grow p-0\">\n            <GridLayout />\n          </div>\n          <TableContainer />\n        </div>\n        <ChatPanelContainer />\n        <OpenFileModal projectUrl={projectUrl} />\n        <AddDatasetModal />\n        <SaveProjectModal />\n      </div>\n      {startScreenCapture && (\n        <>\n          <div\n            className={`overlay ${isMouseDown && 'highlighting'}`}\n            style={{borderWidth: `${borderWidth}`}}\n          />\n          <div\n            className=\"crosshairs\"\n            style={{left: crossHairsLeft + 'px', top: crossHairsTop + 'px'}}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const IconUpload = () => {\n  return (\n    <svg width=\"38\" height=\"38\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g id=\"Upload icon\">\n        <path\n          id=\"Vector\"\n          d=\"M0.85 19.2935C0.85 29.4634 9.12367 37.737 19.2935 37.737C29.4634 37.737 37.737 29.4633 37.737 19.2935C37.737 9.12353 29.4634 0.85 19.2935 0.85C9.12353 0.85 0.85 9.12366 0.85 19.2935ZM2.6138 19.2935C2.6138 10.0966 10.0964 2.6138 19.2935 2.6138C28.4904 2.6138 35.9732 10.0964 35.9732 19.2935C35.9732 28.4904 28.4904 35.9732 19.2935 35.9732C10.0966 35.9732 2.6138 28.4905 2.6138 19.2935Z\"\n          fill=\"black\"\n          stroke=\"#F9FFF9\"\n          strokeWidth=\"0.3\"\n        />\n        <g id=\"arrow\">\n          <path\n            id=\"Vector_2\"\n            d=\"M18.9422 26.6577C18.9422 27.0364 19.2493 27.3435 19.6279 27.3435C20.0064 27.3435 20.3136 27.0368 20.3136 26.6577V12.7292C20.3136 12.3505 20.0065 12.0435 19.6279 12.0435C19.2492 12.0435 18.9422 12.3505 18.9422 12.7292V26.6577Z\"\n            fill=\"black\"\n            stroke=\"#483EA8\"\n            strokeWidth=\"0.3\"\n          />\n          <path\n            id=\"Vector_3\"\n            d=\"M19.6279 13.7003L15.8272 17.5009C15.5596 17.769 15.1251 17.7689 14.8573 17.501C14.5894 17.2331 14.5894 16.7991 14.8573 16.5313L19.1429 12.2457C19.1429 12.2457 19.1429 12.2456 19.143 12.2456C19.4105 11.9776 19.8449 11.9778 20.1127 12.2456L24.3984 16.5313C24.6662 16.7991 24.6663 17.2329 24.3986 17.5008C24.2646 17.6353 24.0884 17.7018 23.9135 17.7019L19.6279 13.7003ZM19.6279 13.7003L23.4286 17.501C23.5624 17.6348 23.7384 17.7018 23.9135 17.7019L19.6279 13.7003Z\"\n            fill=\"black\"\n            stroke=\"#483EA8\"\n            strokeWidth=\"0.3\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","'use client';\n\nimport * as Sentry from '@sentry/nextjs';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Card,\n  CardBody,\n  ModalFooter,\n  CardFooter,\n  Progress\n} from '@nextui-org/react';\nimport {useDropzone} from 'react-dropzone';\nimport {FormattedMessage} from 'react-intl';\nimport {addDataToMap, wrapTo} from '@kepler.gl/actions';\n\nimport {GeoDaState} from '../store';\nimport {setAddDatasetModal, setOpenFileModal} from '../actions';\nimport {IconUpload} from './icons/upload';\nimport {addDataset} from '../actions/file-actions';\nimport {MAP_ID} from '@/constants';\nimport {loadDroppedFile} from '@/utils/file-utils';\nimport {loadGeoDaProject, ProcessDropFilesOutput} from '@/utils/project-utils';\nimport {initDuckDB, useDuckDB} from '@/hooks/use-duckdb';\nimport {ProtoDataset} from '@kepler.gl/types';\nimport {WarningBox, WarningType} from './common/warning-box';\n\nasync function processDropFiles(\n  files: File[],\n  isAddingDataset = false\n): Promise<ProcessDropFilesOutput> {\n  // check if there is a file with extension .geoda\n  const geodaFile = files.find(file => file.name.endsWith('.geoda'));\n  if (geodaFile) {\n    if (isAddingDataset === true) {\n      throw new Error('GeoDa project file cannot be added to the current project.');\n    }\n    // process project file\n    return await loadGeoDaProject(geodaFile);\n  }\n\n  // otherwise check if there is a file with extension .shp\n  return await loadDroppedFile(files);\n}\n\n/**\n * Open File Component\n * @returns JSX.Element\n */\nconst OpenFileComponent = ({\n  onCloseModal,\n  isAddingDataset = false\n}: {\n  onCloseModal: () => void;\n  isAddingDataset?: boolean;\n}) => {\n  const dispatch = useDispatch();\n  const {importArrowFile} = useDuckDB();\n\n  // create a useState to store the status of loading file\n  const [loading, setLoading] = useState(false);\n\n  // useState to store error message\n  const [error, setError] = useState<string | null>(null);\n\n  const onDrop = useCallback(\n    async (acceptedFiles: File[]) => {\n      // show loading bar\n      setLoading(true);\n\n      try {\n        initDuckDB();\n        // process dropped files, and return the file name, arrowTable and arrowFormatData\n        const {datasets, keplerConfig, geodaConfig} = await processDropFiles(\n          acceptedFiles,\n          isAddingDataset\n        );\n        const keplerDatasets: ProtoDataset[] = [];\n        for (let i = 0; i < datasets.length; i++) {\n          const {fileName, arrowTable, arrowFormatData} = datasets[i];\n          // add arrowTable to duckdb\n          await importArrowFile({fileName, arrowTable});\n          // append duckdb instance to arrowFormatData\n          const keplerDataset: ProtoDataset | undefined = arrowFormatData;\n          if (keplerDataset) {\n            keplerDatasets.push(keplerDataset);\n          }\n          // dispatch action to set file data, update redux state state.fileData\n          dispatch(addDataset({fileName, dataId: keplerDataset?.info.id, arrowTable}));\n        }\n\n        if (keplerDatasets.length > 0) {\n          // dispatch addDataToMap action to default kepler.gl instance\n          dispatch(\n            wrapTo(\n              MAP_ID,\n              addDataToMap({\n                datasets: keplerDatasets || [],\n                options: {centerMap: true},\n                ...(keplerConfig && {config: keplerConfig})\n              })\n            )\n          );\n        }\n\n        if (geodaConfig) {\n          // dispatch action to set geoda config, update redux state state.root\n          dispatch({type: 'LOAD_PROJECT', payload: geodaConfig});\n        }\n\n        // set selection mode\n        // dispatch(setEditorMode('DRAW_RECTANGLE'));\n\n        // close modal\n        onCloseModal();\n      } catch (e) {\n        // load file failed, show error message\n        setError((e as Error).message);\n      }\n\n      // set loading to true to show loading bar\n      setLoading(false);\n    },\n    [dispatch, importArrowFile, isAddingDataset, onCloseModal]\n  );\n\n  // Hide the error message after 10 second if error occurs\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => {\n        setError(null);\n      }, 10000);\n    }\n  }, [error]);\n\n  const {getRootProps, getInputProps} = useDropzone({onDrop});\n\n  return (\n    <Card className=\"bg-gray-100 dark:bg-stone-900\">\n      <CardBody>\n        <div\n          className=\"flex h-[200px] w-full place-content-center\"\n          {...getRootProps()}\n          style={{\n            backgroundColor: '#eeeeee',\n            opacity: 0.8\n            // backgroundImage: 'radial-gradient(#444cf7 0.5px, #eeeeee 0.5px)',\n            // backgroundSize: '10px 10px'\n          }}\n        >\n          <input {...getInputProps()} />\n          <div className=\"flex flex-col items-center justify-center gap-y-2 text-black opacity-70\">\n            <IconUpload />\n            <FormattedMessage id=\"fileUpload.dropHere\" defaultMessage=\"Drop the files here ...\" />\n            {loading && (\n              <Progress\n                size=\"sm\"\n                isIndeterminate\n                aria-label=\"Loading...\"\n                className=\"mt-2 max-w-md\"\n              />\n            )}\n          </div>\n        </div>\n      </CardBody>\n      <CardFooter className=\"flex flex-col justify-between gap-3 text-small\">\n        <div>\n          <p className=\"text-tiny\">\n            Supported formates: GeoArrow, GeoJSON, ESRI Shapefiles, CSV and GeoDa.Ai Project file\n          </p>\n        </div>\n        {error && (\n          <WarningBox\n            message={`Failed to open dropped file: ${error}. Please try to refresh current page, or contact us.`}\n            type={WarningType.ERROR}\n          />\n        )}\n      </CardFooter>\n    </Card>\n  );\n};\n\nfunction OpenFileModal({projectUrl}: {projectUrl: string | null}) {\n  // get the dispatch function from the redux store\n  const dispatch = useDispatch();\n\n  // get the state showOpenModal from the redux store\n  const showOpenModal = useSelector((state: GeoDaState) => state.root.uiState.showOpenFileModal);\n\n  // check if there is a default dataset\n  const hasDefaultDataset = useSelector((state: GeoDaState) => state.root.datasets.length > 0);\n\n  // handle close modal event\n  const onCloseModal = () => {\n    dispatch(setOpenFileModal(false));\n  };\n\n  // if projectUrl presents, load the project file using fetch when the component mounts\n  useEffect(() => {\n    if (!projectUrl) {\n      try {\n        throw new Error('Failed to fetch project file');\n      } catch (e) {\n        Sentry.captureException(e);\n      }\n    }\n    (async () => {\n      if (!projectUrl) return;\n      const res = await fetch(projectUrl);\n      if (!res.ok) {\n        throw new Error('Failed to fetch project file');\n      }\n      const data = await res.json();\n      // create a File object from the json data\n      const file = new File([JSON.stringify(data)], 'project.geoda', {\n        type: 'application/json'\n      });\n      // process dropped files, and return the file name, arrowTable and arrowFormatData\n      const {datasets, keplerConfig, geodaConfig} = await processDropFiles([file]);\n      for (let i = 0; i < datasets.length; ++i) {\n        const {fileName, arrowTable, arrowFormatData} = datasets[i];\n        // dispatch addDataToMap action to default kepler.gl instance\n        if (arrowFormatData) {\n          dispatch(\n            wrapTo(\n              MAP_ID,\n              addDataToMap({\n                datasets: arrowFormatData,\n                options: {centerMap: true},\n                ...(keplerConfig && {config: keplerConfig})\n              })\n            )\n          );\n        }\n        // dispatch action to set file data, update redux state state.fileData\n        dispatch(addDataset({fileName, arrowTable}));\n      }\n      // dispatch action to set geoda config, update redux state state.root\n      if (geodaConfig) {\n        setTimeout(() => {\n          dispatch({type: 'LOAD_PROJECT', payload: geodaConfig});\n        }, 1000);\n      }\n    })();\n  }, [dispatch, projectUrl]);\n\n  if (hasDefaultDataset === false && projectUrl !== null) {\n    // showing loading project modal\n    return (\n      <Modal\n        isOpen={hasDefaultDataset === false && projectUrl !== null}\n        size=\"3xl\"\n        placement=\"center\"\n        className=\"min-w-60\"\n        isDismissable={true}\n      >\n        <ModalContent>\n          <ModalHeader className=\"flex flex-col gap-1\">Loading Project...</ModalHeader>\n          <ModalBody>\n            <Progress size=\"sm\" isIndeterminate aria-label=\"Loading...\" className=\"mt-2 max-w-md\" />\n          </ModalBody>\n          <ModalFooter />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  return showOpenModal ? (\n    <Modal\n      isOpen={showOpenModal}\n      onClose={onCloseModal}\n      size=\"3xl\"\n      placement=\"center\"\n      className=\"min-w-80 bg-gray-50 dark:bg-stone-800\"\n      isDismissable={false}\n    >\n      <ModalContent>\n        <ModalHeader className=\"flex flex-col gap-1\">Open File</ModalHeader>\n        <ModalBody>\n          <OpenFileComponent onCloseModal={onCloseModal} />\n        </ModalBody>\n        <ModalFooter />\n      </ModalContent>\n    </Modal>\n  ) : null;\n}\n\nexport default OpenFileModal;\n\n/**\n * Add Dataset Modal\n */\nexport function AddDatasetModal() {\n  // get the dispatch function from the redux store\n  const dispatch = useDispatch();\n\n  // get the state showOpenModal from the redux store\n  const showModal = useSelector((state: GeoDaState) => state.root.uiState.showAddDatasetModal);\n\n  const onCloseModal = () => {\n    dispatch(setAddDatasetModal(false));\n  };\n\n  return showModal ? (\n    <Modal\n      isOpen={showModal}\n      onClose={onCloseModal}\n      size=\"3xl\"\n      placement=\"center\"\n      className=\"min-w-80 bg-gray-50 dark:bg-stone-800\"\n      isDismissable={false}\n    >\n      <ModalContent>\n        <ModalHeader className=\"flex flex-col gap-1\">Add Dataset</ModalHeader>\n        <ModalBody>\n          <OpenFileComponent onCloseModal={onCloseModal} isAddingDataset={true} />\n        </ModalBody>\n        <ModalFooter />\n      </ModalContent>\n    </Modal>\n  ) : null;\n}\n","import React, {useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport {Icon} from '@iconify/react';\nimport {Button, Checkbox, Divider, Input, Link} from '@nextui-org/react';\n\nimport {RightPanelContainer} from '../common/right-panel-template';\n\nexport function SettingsPanel() {\n  const intl = useIntl();\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleVisibility = () => setIsVisible(!isVisible);\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({\n        id: 'settings.title',\n        defaultMessage: 'User Settings'\n      })}\n      description={intl.formatMessage({\n        id: 'settings.description',\n        defaultMessage: 'Change your personal settings'\n      })}\n    >\n      <div className=\"flex flex-col gap-4 p-6 \">\n        <p className=\"pb-2 text-large font-medium\">Log In</p>\n        <form className=\"flex flex-col gap-3\" onSubmit={e => e.preventDefault()}>\n          <Input\n            label=\"Email Address\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            type=\"email\"\n            variant=\"bordered\"\n          />\n          <Input\n            endContent={\n              <button type=\"button\" onClick={toggleVisibility}>\n                {isVisible ? (\n                  <Icon\n                    className=\"pointer-events-none text-2xl text-default-400\"\n                    icon=\"solar:eye-closed-linear\"\n                  />\n                ) : (\n                  <Icon\n                    className=\"pointer-events-none text-2xl text-default-400\"\n                    icon=\"solar:eye-bold\"\n                  />\n                )}\n              </button>\n            }\n            label=\"Password\"\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            type={isVisible ? 'text' : 'password'}\n            variant=\"bordered\"\n          />\n          <div className=\"flex items-center justify-between px-1 py-2\">\n            <Checkbox name=\"remember\" size=\"sm\">\n              Remember me\n            </Checkbox>\n            <Link className=\"text-default-500\" href=\"#\" size=\"sm\">\n              Forgot password?\n            </Link>\n          </div>\n          <Button color=\"primary\" type=\"submit\">\n            Log In\n          </Button>\n        </form>\n        <div className=\"flex items-center gap-4 py-2\">\n          <Divider className=\"flex-1\" />\n          <p className=\"shrink-0 text-tiny text-default-500\">OR</p>\n          <Divider className=\"flex-1\" />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <Button\n            startContent={<Icon icon=\"flat-color-icons:google\" width={24} />}\n            variant=\"bordered\"\n          >\n            Continue with Google\n          </Button>\n          <Button\n            startContent={<Icon className=\"text-default-500\" icon=\"fe:github\" width={24} />}\n            variant=\"bordered\"\n          >\n            Continue with Github\n          </Button>\n        </div>\n        <p className=\"text-center text-small\">\n          Need to create an account?&nbsp;\n          <Link href=\"#\" size=\"sm\">\n            Sign Up\n          </Link>\n        </p>\n      </div>\n    </RightPanelContainer>\n  );\n}\n","import React, {Key, useMemo, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {\n  Tabs,\n  Tab,\n  Card,\n  CardBody,\n  Input,\n  Slider,\n  Checkbox,\n  Spacer,\n  RadioGroup,\n  Radio\n} from '@nextui-org/react';\nimport {Layer} from '@kepler.gl/layers';\nimport {BinaryGeometryType, getDistanceThresholds} from 'geoda-wasm';\n\nimport {addWeights} from '@/actions';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {createWeights} from '@/utils/weights-utils';\nimport {CreateButton} from '../common/create-button';\nimport {BinaryFeatureCollection} from '@loaders.gl/schema';\nimport {\n  getBinaryGeometryTypeFromLayer,\n  getBinaryGeometriesFromLayer\n} from '../spatial-operations/spatial-join-utils';\nimport KeplerTable from '@kepler.gl/table';\ntype WeightsCreationProps = {\n  validFieldNames?: Array<{label: string; value: string}>;\n  keplerLayer: Layer;\n  keplerDataset: KeplerTable;\n};\n\nexport function WeightsCreationComponent({keplerLayer, keplerDataset}: WeightsCreationProps) {\n  const dispatch = useDispatch<any>();\n\n  const [error, setError] = useState<string | null>(null);\n  const [weightsType, setWeightsType] = useState<'contiguity' | 'knn' | 'band'>('contiguity');\n  const [inputK, setInputK] = useState<number>(4);\n  const [contiguityType, setContiguityType] = useState<string>('queen');\n  const [orderOfContiguity, setOrderContiguity] = useState<number>(1);\n  const [precisionThreshold, setPrecisionThreshold] = useState<number>(0);\n  const [includeLowerOrder, setIncludeLowerOrder] = useState<boolean>(false);\n\n  const [minSliderValue, setMinSliderValue] = useState<number>(0);\n  const [maxSliderValue, setMaxSliderValue] = useState<number>(0);\n  const [sliderValue, setSliderValue] = useState<number>(0);\n\n  const binaryGeometryType: BinaryGeometryType = useMemo(\n    () => getBinaryGeometryTypeFromLayer(keplerLayer) as BinaryGeometryType,\n    [keplerLayer]\n  );\n\n  const binaryGeometries = useMemo(\n    () => getBinaryGeometriesFromLayer(keplerLayer, keplerDataset) as BinaryFeatureCollection[],\n    [keplerLayer, keplerDataset]\n  );\n\n  const datasetId = keplerLayer.config.dataId;\n\n  const isMile = false;\n\n  const onWeightsSelectionChange = async (key: Key) => {\n    setWeightsType(key as 'contiguity' | 'knn' | 'band');\n    if (key === 'distance' && binaryGeometries && binaryGeometryType) {\n      // compute the distanceThreshold\n      const {minDistance, maxDistance, maxPairDistance} = await getDistanceThresholds({\n        isMile,\n        binaryGeometryType,\n        // @ts-ignore\n        binaryGeometries\n      });\n      setMinSliderValue(minDistance);\n      setSliderValue(maxDistance);\n      setMaxSliderValue(maxPairDistance);\n    }\n  };\n\n  const onSliderValueChange = (value: number | number[]) => {\n    setSliderValue(value as number);\n  };\n\n  const onContiguityTypeChange = (value: string) => {\n    setContiguityType(value);\n  };\n\n  const onCreateWeights = async () => {\n    setError(null);\n    try {\n      const result = await createWeights({\n        datasetId,\n        weightsType,\n        contiguityType,\n        binaryGeometryType,\n        binaryGeometries,\n        precisionThreshold,\n        orderOfContiguity,\n        includeLowerOrder,\n        k: inputK,\n        distanceThreshold: sliderValue,\n        isMile\n      });\n      if (!result) {\n        throw new Error('weights type is not supported');\n      }\n      const {weights, weightsMeta} = result;\n      // dispatch action to update redux state state.root.weights\n      dispatch(addWeights({weights, weightsMeta, datasetId}));\n    } catch (e) {\n      console.error(e);\n      setError(`Create weights error: ${e}`);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col gap-2 \">\n        <div className=\"mt-4 flex w-full flex-col text-small text-default-600\">\n          <Tabs\n            aria-label=\"Options\"\n            onSelectionChange={onWeightsSelectionChange}\n            defaultSelectedKey={weightsType || 'contiguity'}\n          >\n            <Tab key=\"contiguity\" title=\"Contiguity Weight\">\n              <Card className=\"rounded\">\n                <CardBody>\n                  <div className=\"flex flex-col gap-2 \">\n                    <RadioGroup\n                      label=\"\"\n                      size=\"sm\"\n                      defaultValue={contiguityType}\n                      onValueChange={onContiguityTypeChange}\n                    >\n                      <Radio value=\"queen\">Queen contiguity</Radio>\n                      <Radio value=\"rook\">Rook contiguity</Radio>\n                    </RadioGroup>\n                    <div className=\"flex flex-row items-center gap-2\">\n                      <p className=\"text-small text-default-600 \">Order of contiguity</p>\n                      <Input\n                        size=\"sm\"\n                        type=\"number\"\n                        label=\"\"\n                        labelPlacement=\"outside-left\"\n                        className=\"w-[120px]\"\n                        value={`${orderOfContiguity}`}\n                        onInput={e => setOrderContiguity(parseInt(e.currentTarget.value))}\n                      />\n                    </div>\n                    <Checkbox\n                      size=\"sm\"\n                      isSelected={includeLowerOrder}\n                      onValueChange={e => setIncludeLowerOrder(e)}\n                    >\n                      Include lower Orders\n                    </Checkbox>\n                    <div className=\"flex flex-row items-center gap-2\">\n                      <Checkbox size=\"sm\" className=\"grow\">\n                        Precivion threshold\n                      </Checkbox>\n                      <Input\n                        size=\"sm\"\n                        type=\"number\"\n                        label=\"\"\n                        placeholder=\"0\"\n                        defaultValue=\"0\"\n                        labelPlacement=\"outside-left\"\n                        className=\"w-[120px]\"\n                        value={`${precisionThreshold}`}\n                        onInput={e => setPrecisionThreshold(parseInt(e.currentTarget.value))}\n                      />\n                    </div>\n                  </div>\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab key=\"distance\" title=\"Distance Weight\">\n              <Card>\n                <CardBody>\n                  <div className=\"flex flex-col gap-2 \">\n                    <div className=\"space-y-1\">\n                      <p className=\"text-small text-default-600\">Method:</p>\n                    </div>\n                    <Tabs aria-label=\"distance-method\" onSelectionChange={onWeightsSelectionChange}>\n                      <Tab key=\"knn\" title=\"K-Nearest neighbors\">\n                        <Input\n                          type=\"number\"\n                          label=\"Number of neighbors:\"\n                          placeholder=\"4\"\n                          defaultValue=\"4\"\n                          value={`${inputK}`}\n                          onInput={e => setInputK(parseInt(e.currentTarget.value))}\n                        />\n                      </Tab>\n                      <Tab key=\"band\" title=\"Distance band\">\n                        <Slider\n                          label=\"Specify bandwidth\"\n                          step={0.01}\n                          maxValue={maxSliderValue}\n                          minValue={minSliderValue}\n                          defaultValue={sliderValue}\n                          formatOptions={{style: 'unit', unit: isMile ? 'mile' : 'kilometer'}}\n                          className=\"max-w-md\"\n                          onChange={onSliderValueChange}\n                        />\n                        <div className=\"mt-6 flex flex-row gap-2\">\n                          <Checkbox className=\"flex grow\" size=\"sm\">\n                            Use inverse distance\n                          </Checkbox>\n                          <Input\n                            size=\"sm\"\n                            className=\"flex w-32 shrink\"\n                            type=\"number\"\n                            label=\"Power:\"\n                            placeholder=\"1\"\n                            defaultValue=\"1\"\n                            labelPlacement=\"outside-left\"\n                          />\n                        </div>\n                      </Tab>\n                    </Tabs>\n                  </div>\n                </CardBody>\n              </Card>\n            </Tab>\n          </Tabs>\n        </div>\n        {error && <WarningBox type={WarningType.ERROR} message={error} />}\n        <Spacer y={8} />\n        <CreateButton onClick={onCreateWeights} isDisabled={false}>\n          Create Spatial Weights\n        </CreateButton>\n      </div>\n    </>\n  );\n}\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {useIntl} from 'react-intl';\nimport {useSelector} from 'react-redux';\nimport {Tabs, Tab, Card, CardBody, Chip} from '@nextui-org/react';\n\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {WeightsManagementComponent} from './weights-management';\nimport {WeightsCreationComponent} from './weights-creation';\nimport {getIntegerAndStringFieldNamesFromDataset} from '@/utils/data-utils';\nimport {\n  selectDefaultKeplerDataset,\n  selectKeplerDataset,\n  selectKeplerLayer,\n  selectWeightsByDataId\n} from '@/store/selectors';\nimport {DatasetSelector} from '../common/dataset-selector';\nimport {WeightsProps} from '@/reducers/weights-reducer';\n\nconst NO_MAP_LOADED_MESSAGE =\n  'Please load a map first before creating and managing spatial weights.';\n\nexport function WeightsPanel() {\n  const intl = useIntl();\n\n  const defaultKeplerDataset = useSelector(selectDefaultKeplerDataset);\n  const [datasetId, setDatasetId] = useState(defaultKeplerDataset?.id || '');\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n  const keplerLayer = useSelector(selectKeplerLayer(datasetId));\n  const weights = useSelector(selectWeightsByDataId(datasetId));\n\n  const validFieldNames = useMemo(() => {\n    const fieldNames = keplerDataset ? getIntegerAndStringFieldNamesFromDataset(keplerDataset) : [];\n    return fieldNames.map(fieldName => ({label: fieldName, value: fieldName}));\n  }, [keplerDataset]);\n\n  // check if there is any newly added weights, if there is, show weights management tab\n  const newWeightsCount = weights.filter((weight: WeightsProps) => weight.isNew).length;\n  const [showWeightsManagement, setShowWeightsManagement] = useState(newWeightsCount > 0);\n\n  // reset isNew flag of weights\n  useEffect(() => {\n    if (newWeightsCount > 0) {\n      weights.forEach((weight: WeightsProps) => {\n        if (weight.isNew) {\n          weight.isNew = false;\n        }\n      });\n    }\n  }, [newWeightsCount, weights]);\n\n  // monitor state.root.weights, if weights.length changed, update the tab title\n  const weightsLength = weights?.length;\n  useEffect(() => {\n    if (weightsLength) {\n      setShowWeightsManagement(true);\n    }\n  }, [weightsLength]);\n\n  const onTabChange = (key: React.Key) => {\n    if (key === 'weights-creation') {\n      setShowWeightsManagement(false);\n    } else {\n      setShowWeightsManagement(true);\n    }\n  };\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({\n        id: 'weights.title',\n        defaultMessage: 'Spatial Weights'\n      })}\n      description={intl.formatMessage({\n        id: 'weights.description',\n        defaultMessage: 'Create and manage spatial weights'\n      })}\n    >\n      {!keplerDataset ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type={WarningType.WARNING} />\n      ) : (\n        <div className=\"flex w-full flex-col p-4\">\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            classNames={{}}\n            size=\"md\"\n            selectedKey={showWeightsManagement ? 'weights-management' : 'weights-creation'}\n            onSelectionChange={onTabChange}\n          >\n            <Tab\n              key=\"weights-creation\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Weights Creation</span>\n                </div>\n              }\n            >\n              <Card>\n                <CardBody className=\"flex flex-col gap-4\">\n                  <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n                  <WeightsCreationComponent\n                    validFieldNames={validFieldNames}\n                    keplerLayer={keplerLayer}\n                    keplerDataset={keplerDataset}\n                  />\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab\n              key=\"weights-management\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Weights Management</span>\n                  {weights?.length > 0 && (\n                    <Chip size=\"sm\" variant=\"faded\">\n                      {weights.length}\n                    </Chip>\n                  )}\n                </div>\n              }\n            >\n              <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n              <WeightsManagementComponent datasetId={datasetId} />\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import {Autocomplete, AutocompleteItem, Accordion, AccordionItem} from '@nextui-org/react';\nimport {Key, useState} from 'react';\nimport {accordionItemClasses} from '@/constants';\nimport {useSelector} from 'react-redux';\nimport {CreateButton} from '../common/create-button';\nimport {\n  defaultDatasetIdSelector,\n  selectKeplerDataset,\n  selectWeightsByDataId\n} from '@/store/selectors';\nimport KeplerTable from '@kepler.gl/table';\nimport {WeightsProps} from '@/actions';\nimport {DatasetSelector} from '../common/dataset-selector';\nimport {WeightsSelector} from '../weights/weights-management';\nimport {VariableSelector} from '../common/variable-selector';\n\nexport type RunAnalysisProps = {\n  dataset: KeplerTable;\n  weights: WeightsProps[];\n  selectedWeight: string;\n  variable: string;\n  permValue: string;\n  threshold: string;\n};\n\nexport type UnivariateLisaConfigProps = {\n  runAnalysis: (props: RunAnalysisProps) => void;\n};\n\nexport function UnivariateLisaConfig({runAnalysis}: UnivariateLisaConfigProps) {\n  const defaultDatasetId = useSelector(defaultDatasetIdSelector);\n  const keplerDataset = useSelector(selectKeplerDataset(defaultDatasetId));\n  const [datasetId, setDatasetId] = useState(keplerDataset?.id || '');\n\n  const [isRunning, setIsRunning] = useState(false);\n  // useState for variable name\n  const [variable, setVariable] = useState('');\n\n  const weights = useSelector(selectWeightsByDataId(datasetId));\n  const [weightsId, setWeightsId] = useState<string>(\n    weights.length > 0 ? weights[weights.length - 1].weightsMeta.id || '' : ''\n  );\n\n  // handle select weights\n  const onSelectWeights = (id: string) => {\n    setWeightsId(id);\n  };\n\n  // handle onCreateMap\n  const onCreateMap = async () => {\n    setIsRunning(true);\n    // wait for 0.1s to show loading spinner\n    await new Promise(resolve => setTimeout(resolve, 100));\n    await runAnalysis({\n      dataset: keplerDataset,\n      weights,\n      selectedWeight: weightsId,\n      variable,\n      permValue,\n      threshold\n    });\n    setIsRunning(false);\n  };\n\n  const data = [\n    {label: '999', value: '999'},\n    {label: '9999', value: '9999'},\n    {label: '99999', value: '99999'}\n  ];\n  const [permValue, setPermValue] = useState<string>('');\n  const [, setSelectedPermKey] = useState<Key | null>(null);\n\n  const onPermutationSelectionChange = (key: Key) => {\n    setSelectedPermKey(key);\n    setPermValue(key as string);\n  };\n\n  const onPermutationInputChange = (value: string) => {\n    setPermValue(value);\n  };\n\n  const [threshold, setThreshold] = useState<string>('');\n  const [, setSelectedThresholdKey] = useState<Key | null>(null);\n\n  const onThresholdSelectionChange = (key: Key) => {\n    setSelectedThresholdKey(key);\n    setThreshold(key as string);\n  };\n\n  const onThresholdInputChange = (value: string) => {\n    setThreshold(value);\n  };\n\n  const defaultThresholds = [\n    {label: '0.05', value: '0.05'},\n    {label: '0.01', value: '0.01'},\n    {label: '0.001', value: '0.001'}\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n      <VariableSelector dataId={datasetId} setVariable={setVariable} size=\"sm\" />\n      <WeightsSelector weights={weights} weightsId={weightsId} onSelectWeights={onSelectWeights} />\n      <Accordion\n        className=\"w-full px-0.5 text-small shadow-none\"\n        variant=\"light\"\n        itemClasses={accordionItemClasses}\n      >\n        <AccordionItem\n          key=\"1\"\n          aria-label=\"lisa-parameters\"\n          title=\"Parameters\"\n          className=\"w-full text-small\"\n        >\n          <div className=\"mb-2 flex flex-col gap-3\">\n            <Autocomplete\n              label=\"Input number of permutations\"\n              placeholder=\"999\"\n              defaultItems={data}\n              className=\"w-full\"\n              allowsCustomValue={true}\n              onSelectionChange={onPermutationSelectionChange}\n              onInputChange={onPermutationInputChange}\n            >\n              {item => <AutocompleteItem key={item.value}>{item.label}</AutocompleteItem>}\n            </Autocomplete>\n            <Autocomplete\n              label=\"Input threshold cutoff\"\n              placeholder=\"0.05\"\n              defaultItems={defaultThresholds}\n              className=\"w-full\"\n              allowsCustomValue={true}\n              onSelectionChange={onThresholdSelectionChange}\n              onInputChange={onThresholdInputChange}\n            >\n              {item => <AutocompleteItem key={item.value}>{item.label}</AutocompleteItem>}\n            </Autocomplete>\n          </div>\n        </AccordionItem>\n      </Accordion>\n      <CreateButton\n        isRunning={isRunning}\n        onClick={onCreateMap}\n        isDisabled={variable === '' || weightsId === ''}\n      >\n        Run Analysis\n      </CreateButton>\n    </div>\n  );\n}\n","import {LocalMoranResult, quantileLisa} from 'geoda-wasm';\nimport {Field} from '@kepler.gl/types';\nimport {ALL_FIELD_TYPES} from '@kepler.gl/constants';\nimport {getColumnDataFromKeplerDataset} from './data-utils';\nimport {RunAnalysisProps} from '@/components/lisa/univariate-lisa-config';\n\nexport type runLisaProps = {\n  type: string;\n  lisaFunction: (props: any) => Promise<LocalMoranResult>;\n} & RunAnalysisProps;\n\nexport async function runLisa({\n  type,\n  dataset,\n  weights,\n  selectedWeight,\n  variable,\n  permValue,\n  threshold,\n  lisaFunction\n}: runLisaProps) {\n  if (!dataset) {\n    throw new Error('Dataset not found');\n  }\n\n  // get selected weight\n  const selectedWeightData = weights.find(({weightsMeta}) => weightsMeta.id === selectedWeight);\n  if (!selectedWeightData) {\n    throw new Error('Selected weight not found');\n  }\n\n  // get column data from dataContainer\n  const columnData = getColumnDataFromKeplerDataset(variable, dataset);\n\n  // get permutation input\n  const permutations = parseFloat(permValue) || 999;\n\n  // get significant cutoff input\n  const sigCutoff = parseFloat(threshold) || 0.05;\n\n  // run LISA analysis\n  const lm: LocalMoranResult = await lisaFunction({\n    data: columnData,\n    neighbors: selectedWeightData?.weights,\n    permutation: permutations,\n    significanceCutoff: sigCutoff\n  });\n\n  // get cluster values using significant cutoff\n  const clusters = lm.pValues.map((p: number, i) => {\n    if (p > sigCutoff) {\n      return 0;\n    }\n    return lm.clusters[i];\n  });\n\n  // add new column to kepler.gl\n  const newFieldName = `${type}_${variable}`;\n\n  // get dataset from kepler.gl if dataset.label === tableName\n\n  const dataContainer = dataset.dataContainer;\n  const fieldsLength = dataset.fields.length;\n\n  // create new field\n  const newField: Field = {\n    id: newFieldName,\n    name: newFieldName,\n    displayName: newFieldName,\n    format: '',\n    type: ALL_FIELD_TYPES.real,\n    analyzerType: 'FLOAT',\n    fieldIdx: fieldsLength,\n    valueAccessor: (d: any) => {\n      return dataContainer.valueAt(d.index, fieldsLength);\n    }\n  };\n\n  return {newField, values: clusters, lisaLabels: lm.labels, lisaColors: lm.colors};\n}\n\nexport type RunQuantileLisaProps = {\n  type: string;\n  k: number;\n  quantile: number;\n} & RunAnalysisProps;\n\nexport async function runQuantileLisa({\n  type,\n  dataset,\n  weights,\n  selectedWeight,\n  variable,\n  permValue,\n  threshold,\n  k,\n  quantile\n}: RunQuantileLisaProps) {\n  if (!dataset) {\n    throw new Error('Dataset not found');\n  }\n\n  // get selected weight\n  const selectedWeightData = weights.find(({weightsMeta}) => weightsMeta.id === selectedWeight);\n  if (!selectedWeightData) {\n    throw new Error('Selected weight not found');\n  }\n\n  // get column data from dataContainer\n  const columnData = getColumnDataFromKeplerDataset(variable, dataset);\n\n  // get permutation input\n  const permutations = parseFloat(permValue) || 999;\n\n  // get significant cutoff input\n  const sigCutoff = parseFloat(threshold) || 0.05;\n\n  // run LISA analysis\n  const lm: LocalMoranResult = await quantileLisa({\n    k,\n    quantile,\n    data: columnData,\n    neighbors: selectedWeightData?.weights,\n    permutation: permutations,\n    significanceCutoff: sigCutoff\n  });\n\n  // get cluster values using significant cutoff\n  const clusters = lm.pValues.map((p: number, i) => {\n    if (p > sigCutoff) {\n      return 0;\n    }\n    return lm.clusters[i];\n  });\n\n  // add new column to kepler.gl\n  const newFieldName = `${type}_${variable}`;\n\n  // get dataset from kepler.gl if dataset.label === tableName\n\n  const dataContainer = dataset.dataContainer;\n  const fieldsLength = dataset.fields.length;\n\n  // create new field\n  const newField: Field = {\n    id: newFieldName,\n    name: newFieldName,\n    displayName: newFieldName,\n    format: '',\n    type: ALL_FIELD_TYPES.real,\n    analyzerType: 'FLOAT',\n    fieldIdx: fieldsLength,\n    valueAccessor: (d: any) => {\n      return dataContainer.valueAt(d.index, fieldsLength);\n    }\n  };\n\n  return {newField, values: clusters, lisaLabels: lm.labels, lisaColors: lm.colors};\n}\n","import {RunAnalysisProps} from '@/components/lisa/univariate-lisa-config';\nimport {addColumnWithValues} from '@/hooks/use-duckdb';\nimport {runLisa, runQuantileLisa} from '@/utils/lisa-functions';\nimport {createUniqueValuesMap} from '@/utils/mapping-functions';\nimport {addLayer, addTableColumn} from '@kepler.gl/actions';\nimport {LocalMoranResult} from 'geoda-wasm';\nimport {Dispatch} from 'react';\nimport {UnknownAction} from 'redux';\n\nexport type RunLisaAsyncProps = {\n  type: string;\n  layerLabel: string;\n  lisaFunction: (props: any) => Promise<LocalMoranResult>;\n} & RunAnalysisProps;\n\n// thunk action creators\nexport function runLisaAsync(payload: RunLisaAsyncProps) {\n  return async (dispatch: Dispatch<UnknownAction>) => {\n    const {dataset, type, variable, layerLabel} = payload;\n    const newFieldName = `${type}_${variable}`;\n    const {newField, values, lisaLabels, lisaColors} = await runLisa(payload);\n\n    // Add a new column without data first, so it can avoid error from deduceTypeFromArray()\n    dispatch(addTableColumn(dataset.id, newField, values));\n\n    // add new column to duckdb\n    await addColumnWithValues({\n      tableName: dataset.label,\n      columnName: newFieldName,\n      columnType: 'NUMERIC',\n      columnValues: values\n    });\n\n    // create custom scale map\n    const newLayer = createUniqueValuesMap({\n      dataset,\n      uniqueValues: lisaLabels.map((_l, i) => i),\n      hexColors: lisaColors,\n      legendLabels: lisaLabels,\n      mappingType: layerLabel,\n      colorFieldName: newFieldName\n    });\n\n    // add new layer to keper.gl\n    dispatch(addLayer(newLayer, dataset.id));\n  };\n}\n\nexport type RunQuantileLisaAsyncProps = {\n  type: string;\n  layerLabel: string;\n  k: number;\n  quantile: number;\n} & RunAnalysisProps;\n\nexport function runQuantileLisaAsync(payload: RunQuantileLisaAsyncProps) {\n  return async (dispatch: Dispatch<UnknownAction>) => {\n    const {dataset, type, variable, layerLabel} = payload;\n    const newFieldName = `${type}_${variable}`;\n    const {newField, values, lisaLabels, lisaColors} = await runQuantileLisa(payload);\n\n    // Add a new column without data first, so it can avoid error from deduceTypeFromArray()\n    dispatch(addTableColumn(dataset.id, newField, values));\n\n    // add new column to duckdb\n    await addColumnWithValues({\n      tableName: dataset.label,\n      columnName: newFieldName,\n      columnType: 'NUMERIC',\n      columnValues: values\n    });\n\n    // create custom scale map\n    const newLayer = createUniqueValuesMap({\n      dataset,\n      uniqueValues: lisaLabels.map((_l, i) => i),\n      hexColors: lisaColors,\n      legendLabels: lisaLabels,\n      mappingType: layerLabel,\n      colorFieldName: newFieldName\n    });\n\n    // add new layer to keper.gl\n    dispatch(addLayer(newLayer, dataset.id));\n  };\n}\n","import {Tabs, Tab} from '@nextui-org/react';\nimport {useDispatch} from 'react-redux';\nimport {localMoran} from 'geoda-wasm';\nimport {RunAnalysisProps, UnivariateLisaConfig} from './univariate-lisa-config';\nimport {runLisaAsync} from '@/actions/lisa-actions';\n\nexport function LocalMoranPanel() {\n  const dispatch = useDispatch<any>();\n\n  // handle onCreateMap\n  const runAnalysis = ({\n    dataset,\n    weights,\n    selectedWeight,\n    variable,\n    permValue,\n    threshold\n  }: RunAnalysisProps) => {\n    if (!dataset) {\n      throw new Error('Dataset not found');\n    }\n\n    dispatch(\n      runLisaAsync({\n        type: 'moran',\n        layerLabel: 'Local Moran',\n        lisaFunction: localMoran,\n        dataset,\n        weights,\n        selectedWeight,\n        variable,\n        permValue,\n        threshold\n      })\n    );\n  };\n\n  return (\n    <>\n      <Tabs aria-label=\"Options\" variant=\"underlined\" color=\"default\" classNames={{}} size=\"md\">\n        <Tab\n          key=\"uni-localmoran\"\n          title={\n            <div className=\"flex items-center space-x-2\">\n              <span>Univariate</span>\n            </div>\n          }\n        >\n          <UnivariateLisaConfig runAnalysis={runAnalysis} />\n        </Tab>\n      </Tabs>\n    </>\n  );\n}\n","import {Tabs, Tab} from '@nextui-org/react';\nimport {useDispatch} from 'react-redux';\nimport {localG, localGStar} from 'geoda-wasm';\nimport {RunAnalysisProps, UnivariateLisaConfig} from './univariate-lisa-config';\nimport {Key, useState} from 'react';\nimport {runLisaAsync} from '@/actions/lisa-actions';\n\nexport function LocalGPanel() {\n  const dispatch = useDispatch<any>();\n\n  const [selectedTab, setSelectedTab] = useState('uni-localg');\n\n  const onSelectionChange = (tab: Key) => {\n    setSelectedTab(tab as string);\n  };\n\n  // handle onCreateMap\n  const runLocalG = ({\n    dataset,\n    weights,\n    selectedWeight,\n    variable,\n    permValue,\n    threshold\n  }: RunAnalysisProps) => {\n    if (!dataset) {\n      throw new Error('Dataset not found');\n    }\n    const isGStar = selectedTab === 'uni-localgstart';\n\n    dispatch(\n      runLisaAsync({\n        type: isGStar ? 'gstar' : 'g',\n        layerLabel: isGStar ? 'Local G*' : 'Local G',\n        lisaFunction: isGStar ? localGStar : localG,\n        dataset,\n        weights,\n        selectedWeight,\n        variable,\n        permValue,\n        threshold\n      })\n    );\n  };\n\n  return (\n    <>\n      <Tabs\n        aria-label=\"Options\"\n        variant=\"underlined\"\n        color=\"default\"\n        classNames={{}}\n        size=\"md\"\n        onSelectionChange={onSelectionChange}\n        selectedKey={selectedTab}\n      >\n        <Tab\n          key=\"uni-localg\"\n          title={\n            <div className=\"flex items-center space-x-2\">\n              <span>Getis-Ord G</span>\n            </div>\n          }\n        >\n          <UnivariateLisaConfig runAnalysis={runLocalG} />\n        </Tab>\n        <Tab\n          key=\"uni-localgstart\"\n          title={\n            <div className=\"flex items-center space-x-2\">\n              <span>Getis-Ord G*</span>\n            </div>\n          }\n        >\n          <UnivariateLisaConfig runAnalysis={runLocalG} />\n        </Tab>\n      </Tabs>\n    </>\n  );\n}\n","import {Tabs, Tab, Input} from '@nextui-org/react';\nimport {useDispatch} from 'react-redux';\nimport {RunAnalysisProps, UnivariateLisaConfig} from './univariate-lisa-config';\nimport {Key, useState} from 'react';\nimport {runQuantileLisaAsync} from '@/actions/lisa-actions';\n\nexport function QuantileLisaPanel() {\n  const dispatch = useDispatch<any>();\n\n  const [selectedTab, setSelectedTab] = useState('univariate');\n\n  const onSelectionChange = (tab: Key) => {\n    setSelectedTab(tab as string);\n  };\n\n  const [kValue, setKValue] = useState('5');\n  const onKValueChange = (value: string) => {\n    setKValue(value);\n  };\n\n  const [quantileValue, setQuantileValue] = useState('1');\n  const onQuantileValueChange = (value: string) => {\n    setQuantileValue(value);\n  };\n\n  // handle onCreateMap\n  const runAnalysis = ({\n    dataset,\n    weights,\n    selectedWeight,\n    variable,\n    permValue,\n    threshold\n  }: RunAnalysisProps) => {\n    if (!dataset) {\n      throw new Error('Dataset not found');\n    }\n\n    const k = parseInt(kValue);\n    const quantile = parseInt(quantileValue);\n\n    if (k < 2 || k > 100) {\n      throw new Error('Number of quantiles must be between 2 and 100');\n    }\n    if (quantile < 1 || quantile > k) {\n      throw new Error('Quantile must be between 1 and number of quantiles (k)');\n    }\n\n    dispatch(\n      runQuantileLisaAsync({\n        type: 'ql',\n        layerLabel: 'Quantile LISA',\n        dataset,\n        weights,\n        selectedWeight,\n        variable,\n        permValue,\n        threshold,\n        k,\n        quantile\n      })\n    );\n  };\n\n  return (\n    <>\n      <Tabs\n        aria-label=\"Options\"\n        variant=\"underlined\"\n        color=\"default\"\n        classNames={{}}\n        size=\"md\"\n        onSelectionChange={onSelectionChange}\n        selectedKey={selectedTab}\n      >\n        <Tab\n          key=\"univariate\"\n          title={\n            <div className=\"flex items-center space-x-2\">\n              <span>Univariate</span>\n            </div>\n          }\n        >\n          <div className=\"mb-4 flex flex-col gap-4\">\n            <Input\n              label=\"Enter number of quantiles\"\n              type=\"number\"\n              onValueChange={onKValueChange}\n              value={kValue}\n            />\n            <Input\n              label=\"Enter which quantile to use\"\n              type=\"number\"\n              onValueChange={onQuantileValueChange}\n              value={quantileValue}\n            />\n          </div>\n          <UnivariateLisaConfig runAnalysis={runAnalysis} />\n        </Tab>\n      </Tabs>\n    </>\n  );\n}\n","import {Tabs, Tab} from '@nextui-org/react';\nimport {useDispatch} from 'react-redux';\nimport {localGeary} from 'geoda-wasm';\nimport {RunAnalysisProps, UnivariateLisaConfig} from './univariate-lisa-config';\nimport {runLisaAsync} from '@/actions/lisa-actions';\n\nexport function LocalGearyPanel() {\n  const dispatch = useDispatch<any>();\n\n  // handle onCreateMap\n  const runAnalysis = ({\n    dataset,\n    weights,\n    selectedWeight,\n    variable,\n    permValue,\n    threshold\n  }: RunAnalysisProps) => {\n    if (!dataset) {\n      throw new Error('Dataset not found');\n    }\n\n    dispatch(\n      runLisaAsync({\n        type: 'geary',\n        layerLabel: 'Local Geary',\n        lisaFunction: localGeary,\n        dataset,\n        weights,\n        selectedWeight,\n        variable,\n        permValue,\n        threshold\n      })\n    );\n  };\n\n  return (\n    <>\n      <Tabs aria-label=\"Options\" variant=\"underlined\" color=\"default\" classNames={{}} size=\"md\">\n        <Tab\n          key=\"uni-localgeary\"\n          title={\n            <div className=\"flex items-center space-x-2\">\n              <span>Univariate</span>\n            </div>\n          }\n        >\n          <UnivariateLisaConfig runAnalysis={runAnalysis} />\n        </Tab>\n        {/* <Tab\n          key=\"multi-localgeary\"\n          title={\n            <div className=\"flex items-center space-x-2\">\n              <span>Multivariate</span>\n            </div>\n          }\n        ></Tab> */}\n      </Tabs>\n    </>\n  );\n}\n","import {useIntl} from 'react-intl';\nimport {Card, CardBody, Tab, Tabs} from '@nextui-org/react';\nimport {useSelector} from 'react-redux';\n\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {LocalMoranPanel} from './local-moran-panel';\nimport {LocalGPanel} from './local-g-panel';\nimport {QuantileLisaPanel} from './quantile-lisa-panel';\nimport {LocalGearyPanel} from './local-geary-panel';\nimport {datasetsSelector} from '@/store/selectors';\n\nconst NO_MAP_LOADED_MESSAGE = 'Please load a map first before running LISA analysis.';\n\nexport function LisaPanel() {\n  const intl = useIntl();\n  const datasets = useSelector(datasetsSelector);\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({\n        id: 'lisa.title',\n        defaultMessage: 'Local Spatial Autocorrelation'\n      })}\n      description={intl.formatMessage({\n        id: 'lisa.description',\n        defaultMessage: 'Apply local spatial autocorrelation analysis'\n      })}\n    >\n      {datasets.length === 0 ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type={WarningType.WARNING} />\n      ) : (\n        <div className=\"h-full overflow-y-auto p-4\">\n          <div className=\"flex flex-col gap-2\">\n            <Tabs aria-label=\"Options\" variant=\"light\" color=\"danger\" classNames={{}} size=\"md\">\n              <Tab\n                key=\"local-moran\"\n                title={\n                  <div className=\"flex items-center space-x-2\">\n                    <span>Local Moran</span>\n                  </div>\n                }\n              >\n                <Card>\n                  <CardBody>\n                    <LocalMoranPanel />\n                  </CardBody>\n                </Card>\n              </Tab>\n              <Tab\n                key=\"local-g\"\n                title={\n                  <div className=\"flex items-center space-x-2\">\n                    <span>Local G</span>\n                  </div>\n                }\n              >\n                <Card>\n                  <CardBody>\n                    <LocalGPanel />\n                  </CardBody>\n                </Card>\n              </Tab>\n              <Tab\n                key=\"local-geary\"\n                title={\n                  <div className=\"flex items-center space-x-2\">\n                    <span>Local Geary</span>\n                  </div>\n                }\n              >\n                <Card>\n                  <CardBody>\n                    <LocalGearyPanel />\n                  </CardBody>\n                </Card>\n              </Tab>\n              <Tab\n                key=\"quantile-lisa\"\n                title={\n                  <div className=\"flex items-center space-x-2\">\n                    <span>Quantile LISA</span>\n                  </div>\n                }\n              >\n                <Card>\n                  <CardBody>\n                    <QuantileLisaPanel />\n                  </CardBody>\n                </Card>\n              </Tab>\n            </Tabs>\n          </div>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import {useIntl} from 'react-intl';\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {VariableSelector} from '../common/variable-selector';\nimport {ChangeEvent, useEffect, useState} from 'react';\nimport {Card, CardBody, Chip, Input, Spacer, Tab, Tabs} from '@nextui-org/react';\nimport {PlotActionProps, addPlot, updatePlot} from '@/actions/plot-actions';\nimport {PlotManagementPanel} from './plot-management';\nimport {CreateButton} from '../common/create-button';\nimport {defaultDatasetIdSelector, selectKeplerDataset} from '@/store/selectors';\nimport {DatasetSelector} from '../common/dataset-selector';\n\nconst NO_MAP_LOADED_MESSAGE = 'Please load a map first before creating and managing your plots.';\n\nexport function HistogramPanel() {\n  const intl = useIntl();\n\n  // use dispatch\n  const dispatch = useDispatch();\n\n  // use state for variable\n  const [variable, setVariable] = useState('');\n  // use state for intervals\n  const [intervals, setIntervals] = useState(7);\n\n  const defaultDatasetId = useSelector(defaultDatasetIdSelector);\n  const keplerDataset = useSelector(selectKeplerDataset(defaultDatasetId));\n  const [datasetId, setDatasetId] = useState(keplerDataset?.id || '');\n\n  // use selector to get plots\n  const plots = useSelector((state: GeoDaState) => state.root.plots);\n\n  // on intervals change\n  const onIntervalsChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIntervals(parseInt(e.target.value, 10));\n  };\n\n  // check if there is any newly added plots, if there is, show plots management tab\n  const newPlotsCount = plots.filter((plot: PlotActionProps) => plot.isNew).length;\n  const [showPlotsManagement, setShowPlotsManagement] = useState(newPlotsCount > 0);\n\n  // reset isNew flag of plots\n  useEffect(() => {\n    if (newPlotsCount > 0) {\n      plots.forEach((plot: PlotActionProps) => {\n        if (plot.isNew) {\n          dispatch(updatePlot({...plot, isNew: false}));\n        }\n      });\n    }\n  }, [dispatch, newPlotsCount, plots]);\n\n  // on create histogram\n  const onCreateHistogram = () => {\n    if (keplerDataset && variable && intervals > 0 && variable.length > 0) {\n      // dispatch action to create histogram and add to store\n      dispatch(addPlot({datasetId, type: 'histogram', variable, numberOfBins: intervals}));\n      // Show the plots management panel\n      setShowPlotsManagement(true);\n    }\n  };\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({\n        id: 'plot.histogram.title',\n        defaultMessage: 'Histogram'\n      })}\n      description={intl.formatMessage({\n        id: 'plot.histogram.description',\n        defaultMessage: 'Create and manage your histograms'\n      })}\n      icon={null}\n    >\n      {!keplerDataset ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type={WarningType.WARNING} />\n      ) : (\n        <div className=\"h-full w-full overflow-y-auto p-4\">\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            classNames={{}}\n            size=\"md\"\n            selectedKey={showPlotsManagement ? 'plot-management' : 'histogram-creation'}\n            onSelectionChange={key => setShowPlotsManagement(key === 'plot-management')}\n          >\n            <Tab\n              key=\"histogram-creation\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Create Histogram</span>\n                </div>\n              }\n            >\n              <Card>\n                <CardBody>\n                  <div className=\"flex flex-col gap-2\">\n                    <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n                    <VariableSelector dataId={datasetId} setVariable={setVariable} />\n                    <Input\n                      type=\"number\"\n                      label=\"Intervals in histogram\"\n                      value={`${intervals}`}\n                      onChange={onIntervalsChange}\n                      min={1}\n                    />\n                  </div>\n                  <Spacer y={8} />\n                  <CreateButton\n                    onClick={onCreateHistogram}\n                    isDisabled={variable === '' || intervals <= 0}\n                  >\n                    Create Histogram\n                  </CreateButton>\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab\n              key=\"plot-management\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Plots Management</span>\n                  {plots?.length > 0 && (\n                    <Chip size=\"sm\" variant=\"faded\">\n                      {plots.length}\n                    </Chip>\n                  )}\n                </div>\n              }\n            >\n              <PlotManagementPanel />\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import {selectKeplerDataset} from '@/store/selectors';\nimport {getNumericFieldNamesFromDataset} from '@/utils/data-utils';\nimport {Listbox, ListboxItem, ScrollShadow} from '@nextui-org/react';\nimport {useMemo, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\ntype MultiVariableSelectorProps = {\n  datasetId: string;\n  variables?: string[];\n  excludeVariables?: string[];\n  setVariables: (variables: string[]) => void;\n  label?: string;\n  isInvalid?: boolean;\n};\n\nexport function MultiVariableSelector(props: MultiVariableSelectorProps) {\n  const {datasetId, label, isInvalid, setVariables, excludeVariables} = props;\n  const [selectedKeys, setSelectedKeys] = useState(new Set([]));\n\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  // get numeric columns from redux store\n  const numericColumns = useMemo(() => {\n    const fieldNames = getNumericFieldNamesFromDataset(keplerDataset);\n    if (excludeVariables) {\n      return fieldNames.filter(column => !excludeVariables.includes(column));\n    }\n    return fieldNames;\n  }, [excludeVariables, keplerDataset]);\n\n  // handle variable change\n  function onVariableSelectionChange(keys: any) {\n    setSelectedKeys(keys);\n    setVariables(Array.from(keys));\n  }\n\n  return (\n    <div className=\"flex w-full flex-col gap-2\">\n      <span className={`m-2 text-sm  ${isInvalid ? 'text-danger' : ''}`}>\n        {label || 'Select variables'}\n      </span>\n      <ScrollShadow\n        className={`${isInvalid ? 'bg-danger-50' : ''} h-[200px] w-full overflow-y-scroll rounded-small border-small border-default-200 px-1 py-2 dark:border-default-100`}\n      >\n        <Listbox\n          aria-label=\"select variables\"\n          variant=\"flat\"\n          disallowEmptySelection\n          selectionMode=\"multiple\"\n          selectedKeys={selectedKeys}\n          onSelectionChange={onVariableSelectionChange}\n        >\n          {numericColumns.map(column => (\n            <ListboxItem key={column} value={column}>\n              {column}\n            </ListboxItem>\n          ))}\n        </Listbox>\n      </ScrollShadow>\n    </div>\n  );\n}\n","import {useIntl} from 'react-intl';\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {MultiVariableSelector} from '../common/multivariable-selector';\nimport {Key, useEffect, useState} from 'react';\nimport {Card, CardBody, Chip, Spacer, Tab, Tabs, RadioGroup, Radio} from '@nextui-org/react';\nimport {PlotActionProps, addPlot, updatePlot} from '@/actions/plot-actions';\nimport {PlotManagementPanel} from './plot-management';\nimport {CreateButton} from '../common/create-button';\nimport {defaultDatasetIdSelector, selectKeplerDataset} from '@/store/selectors';\nimport {DatasetSelector} from '../common/dataset-selector';\n\nconst NO_MAP_LOADED_MESSAGE = 'Please load a map first before creating and managing your plots.';\n\nexport function BoxplotPanel() {\n  // Updated function name\n  const intl = useIntl();\n\n  // use dispatch\n  const dispatch = useDispatch();\n\n  // use state for variable\n  const [variables, setVariables] = useState<string[]>([]);\n  // useState for hingeValue\n  const [hingeValue, setHingeValue] = useState('1.5');\n\n  const defaultDatasetId = useSelector(defaultDatasetIdSelector);\n  const keplerDataset = useSelector(selectKeplerDataset(defaultDatasetId));\n  const [datasetId, setDatasetId] = useState(keplerDataset?.id || '');\n\n  // use selector to get plots\n  const plots = useSelector((state: GeoDaState) => state.root.plots);\n\n  // on create boxplot // Updated function name\n  const onCreateBoxplot = () => {\n    if (variables.length > 0) {\n      // get hinge value as number\n      const boundIQR = parseFloat(hingeValue);\n      // dispatch action to create boxplot and add to store\n      dispatch(addPlot({type: 'boxplot', variables, datasetId, boundIQR}));\n      // show plots management tab\n      setShowPlotsManagement(true);\n    }\n  };\n\n  // check if there is any newly added plots, if there is, show plots management tab\n  const newPlotsCount = plots.filter((plot: PlotActionProps) => plot.isNew).length;\n  const [showPlotsManagement, setShowPlotsManagement] = useState(newPlotsCount > 0);\n\n  // reset isNew flag of plots\n  useEffect(() => {\n    if (newPlotsCount > 0) {\n      plots.forEach((plot: PlotActionProps) => {\n        if (plot.isNew) {\n          dispatch(updatePlot({...plot, isNew: false}));\n        }\n      });\n    }\n  }, [dispatch, newPlotsCount, plots]);\n\n  const onTabChange = (key: Key) => {\n    setShowPlotsManagement(key === 'plot-management');\n  };\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({\n        id: 'plot.boxplot.title',\n        defaultMessage: 'Boxplot'\n      })}\n      description={intl.formatMessage({\n        id: 'plot.boxplot.description',\n        defaultMessage: 'Create and manage your boxplots'\n      })}\n      icon={null}\n    >\n      {!keplerDataset ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type={WarningType.WARNING} />\n      ) : (\n        <div className=\"h-full overflow-y-auto p-4\">\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            classNames={{}}\n            size=\"md\"\n            selectedKey={showPlotsManagement ? 'plot-management' : 'boxplot-creation'} // Updated key value\n            onSelectionChange={onTabChange}\n          >\n            <Tab\n              key=\"boxplot-creation\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Create Boxplot</span>\n                </div>\n              }\n            >\n              <Card>\n                <CardBody>\n                  <div className=\"flex flex-col gap-4 text-sm\">\n                    <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n                    <MultiVariableSelector datasetId={datasetId} setVariables={setVariables} />\n                    <RadioGroup\n                      orientation=\"horizontal\"\n                      value={hingeValue}\n                      onValueChange={setHingeValue}\n                      size=\"sm\"\n                    >\n                      <Radio value=\"1.5\">Hinge = 1.5</Radio>\n                      <Radio value=\"3.0\">Hinge = 3.0</Radio>\n                    </RadioGroup>\n                  </div>\n                  <Spacer y={8} />\n                  <CreateButton onClick={onCreateBoxplot} isDisabled={variables.length === 0}>\n                    Create Boxplot\n                  </CreateButton>\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab\n              key=\"plot-management\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Plots Management</span>\n                  {plots?.length > 0 && (\n                    <Chip size=\"sm\" variant=\"faded\">\n                      {plots.length}\n                    </Chip>\n                  )}\n                </div>\n              }\n            >\n              <PlotManagementPanel />\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import {useIntl} from 'react-intl';\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox} from '../common/warning-box';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {MultiVariableSelector} from '../common/multivariable-selector';\nimport {useEffect, useState} from 'react';\nimport {Card, CardBody, Chip, Spacer, Tab, Tabs} from '@nextui-org/react';\nimport {PlotActionProps, addPlot, updatePlot} from '@/actions/plot-actions';\nimport {PlotManagementPanel} from './plot-management';\nimport {CreateButton} from '../common/create-button';\nimport {defaultDatasetIdSelector, selectKeplerDataset} from '@/store/selectors';\nimport {DatasetSelector} from '../common/dataset-selector';\n\nconst NO_MAP_LOADED_MESSAGE = 'Please load a map first before creating and managing your plots.';\n\nexport function ParallelCoordinatePanel() {\n  // Updated function name\n  const intl = useIntl();\n\n  // use dispatch\n  const dispatch = useDispatch();\n\n  // use state for variable\n  const [variables, setVariables] = useState<string[]>([]);\n\n  const defaultDatasetId = useSelector(defaultDatasetIdSelector);\n  const keplerDataset = useSelector(selectKeplerDataset(defaultDatasetId));\n  const [datasetId, setDatasetId] = useState(keplerDataset?.id || '');\n\n  // use selector to get plots\n  const plots = useSelector((state: GeoDaState) => state.root.plots);\n\n  // on create pcp\n  const onCreateParallelCoordinate = () => {\n    // Must have at least 2 variables in order to create a pcp\n    if (variables.length === 2) {\n      // dispatch action to create pcp and add to store\n      dispatch(addPlot({type: 'parallel-coordinate', variables, datasetId}));\n      // Show the plots management panel\n      setShowPlotsManagement(true);\n    }\n  };\n\n  // check if there is any newly added plots, if there is, show plots management tab\n  const newPlotsCount = plots.filter((plot: PlotActionProps) => plot.isNew).length;\n  const [showPlotsManagement, setShowPlotsManagement] = useState(newPlotsCount > 0);\n\n  // reset isNew flag of plots\n  useEffect(() => {\n    if (newPlotsCount > 0) {\n      plots.forEach((plot: PlotActionProps) => {\n        if (plot.isNew) {\n          dispatch(updatePlot({...plot, isNew: false}));\n        }\n      });\n    }\n  }, [dispatch, newPlotsCount, plots]);\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({\n        id: 'plot.parallel-coordinate.title',\n        defaultMessage: 'Parallel Coordinate Plot'\n      })}\n      description={intl.formatMessage({\n        id: 'plot.parallel-coordinate.description',\n        defaultMessage: 'Create and manage your parallel coordinate plots'\n      })}\n      icon={null}\n    >\n      {!keplerDataset ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type=\"warning\" />\n      ) : (\n        <div className=\"h-full overflow-y-auto p-4\">\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            size=\"md\"\n            selectedKey={showPlotsManagement ? 'plot-management' : 'parallel-coordinate-creation'}\n            onSelectionChange={key => setShowPlotsManagement(key === 'plot-management')}\n          >\n            <Tab\n              key=\"parallel-coordinate-creation\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Create PCP</span>\n                </div>\n              }\n            >\n              <Card>\n                <CardBody>\n                  <div className=\"flex flex-col gap-4 text-sm\">\n                    <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n                    <MultiVariableSelector\n                      datasetId={datasetId}\n                      setVariables={setVariables}\n                      label=\"Select at least 2 variables\"\n                      isInvalid={variables.length < 2}\n                    />\n                  </div>\n                  <Spacer y={8} />\n                  <CreateButton\n                    onClick={onCreateParallelCoordinate}\n                    isDisabled={variables.length === 0}\n                  >\n                    Create Parallel Coordinate Plot\n                  </CreateButton>\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab\n              key=\"plot-management\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Plots Management</span>\n                  {plots?.length > 0 && (\n                    <Chip size=\"sm\" variant=\"faded\">\n                      {plots.length}\n                    </Chip>\n                  )}\n                </div>\n              }\n            >\n              <PlotManagementPanel />\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import {useIntl} from 'react-intl';\nimport {Tabs, Tab, Card, CardBody, Chip, RadioGroup, Radio} from '@nextui-org/react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Key, useEffect, useState} from 'react';\n\nimport {GeoDaState} from '@/store';\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {MultiVariableSelector} from '../common/multivariable-selector';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {runRegressionAsync, updateRegression} from '@/actions/regression-actions';\nimport {RegressionReport} from './spreg-report';\nimport {CreateButton} from '../common/create-button';\nimport {WeightsSelector} from '../weights/weights-management';\nimport {datasetsSelector, selectKeplerDataset, selectWeightsByDataId} from '@/store/selectors';\nimport {DatasetSelector} from '../common/dataset-selector';\nimport {VariableSelector} from '../common/variable-selector';\nimport {RegressionProps} from '@/reducers/regression-reducer';\n\nconst NO_MAP_LOADED_MESSAGE = 'Please load a map first before running regression analysis.';\n\nexport function SpregPanel() {\n  const intl = useIntl();\n  // use dispatch\n  const dispatch = useDispatch<any>();\n\n  // get data from redux store\n  const datasets = useSelector(datasetsSelector);\n  const [datasetId, setDatasetId] = useState(datasets?.[0]?.dataId || '');\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n  const weights = useSelector(selectWeightsByDataId(datasetId));\n\n  const regressions = useSelector((state: GeoDaState) => state.root.regressions);\n  const newRegressionCount = regressions?.filter((reg: any) => reg.isNew).length || 0;\n\n  // useState for tab change\n  const [showRegressionManagement, setShowRegressionManagement] = useState(newRegressionCount > 0);\n  // useState for variable name\n  const [yVariable, setYVariable] = useState('');\n  const [weightsId, setWeightsId] = useState<string>(\n    weights.length > 0 ? weights[weights.length - 1].weightsMeta.id || '' : ''\n  );\n  const [model, setModel] = useState('classic');\n  const [xVariables, setXVariables] = useState<string[]>([]);\n\n  // handle select weights\n  const onSelectWeights = (id: string) => {\n    setWeightsId(id);\n  };\n\n  // handle onRunRegression callback\n  const onRunRegression = async () => {\n    // dispatch action to run regression and add result to store\n    dispatch(\n      runRegressionAsync({\n        keplerDataset,\n        model,\n        yVariable,\n        xVariables,\n        weights: weights.find(w => w.weightsMeta.id === weightsId)\n      })\n    );\n  };\n\n  const onSetYVariable = (variable: string) => {\n    setYVariable(variable);\n    // exclude Y variable from X variables\n  };\n\n  const onTabChange = (key: Key) => {\n    if (key === 'regression-creation') {\n      setShowRegressionManagement(false);\n    } else {\n      setShowRegressionManagement(true);\n    }\n  };\n\n  // monitor state.root.regressions, if regressions.length changed, update the tab title\n  useEffect(() => {\n    if (newRegressionCount > 0) {\n      // reset isNew flag of regressions\n      regressions.forEach((reg: any) => {\n        if (reg.isNew) {\n          dispatch(updateRegression(reg.id, false));\n        }\n      });\n    }\n  }, [dispatch, newRegressionCount, regressions]);\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({\n        id: 'spreg.title',\n        defaultMessage: 'Spatial Regression'\n      })}\n      description={intl.formatMessage({\n        id: 'lisa.description',\n        defaultMessage: 'Apply spatial regression analysis'\n      })}\n    >\n      {!keplerDataset ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type={WarningType.WARNING} />\n      ) : (\n        <div className=\"h-full overflow-y-auto p-4\">\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            classNames={{}}\n            size=\"md\"\n            selectedKey={showRegressionManagement ? 'regression-management' : 'regression-creation'}\n            onSelectionChange={onTabChange}\n          >\n            <Tab\n              key=\"regression-creation\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Model Configuration</span>\n                </div>\n              }\n            >\n              <Card>\n                <CardBody>\n                  <div className=\"flex flex-col gap-4 text-sm\">\n                    <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n                    <VariableSelector\n                      dataId={datasetId}\n                      setVariable={onSetYVariable}\n                      size=\"sm\"\n                      label=\"Select dependent variable (Y)\"\n                    />\n                    <MultiVariableSelector\n                      datasetId={datasetId}\n                      excludeVariables={[yVariable]}\n                      setVariables={setXVariables}\n                      label=\"Select independent variables (X)\"\n                      isInvalid={xVariables.length === 0}\n                    />\n                    <WeightsSelector\n                      weights={weights}\n                      weightsId={weightsId}\n                      onSelectWeights={onSelectWeights}\n                    />\n                    <RadioGroup\n                      label=\"Select model\"\n                      size=\"sm\"\n                      className=\"ml-2\"\n                      value={model}\n                      onValueChange={value => {\n                        setModel(value);\n                      }}\n                    >\n                      <Radio value=\"classic\" defaultChecked={true}>\n                        Classic\n                      </Radio>\n                      <Radio value=\"spatial-lag\" isDisabled={weights.length === 0}>\n                        Spatial Lag\n                      </Radio>\n                      <Radio value=\"spatial-error\" isDisabled={weights.length === 0}>\n                        Spatial Error\n                      </Radio>\n                    </RadioGroup>\n                    <CreateButton\n                      onClick={onRunRegression}\n                      isDisabled={xVariables.length === 0 || yVariable === ''}\n                    >\n                      Run Regression\n                    </CreateButton>\n                  </div>\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab\n              key=\"regression-management\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Regression Results</span>\n                  {regressions?.length > 0 && (\n                    <Chip size=\"sm\" variant=\"faded\">\n                      {regressions.length}\n                    </Chip>\n                  )}\n                </div>\n              }\n            >\n              <div className=\"p-1\">\n                <div className=\"flex h-[400px] w-full flex-col gap-4\">\n                  {regressions.toReversed().map((regression: RegressionProps) => (\n                    <RegressionReport\n                      key={regression.id}\n                      regression={regression}\n                      height={400}\n                      width={800}\n                    />\n                  ))}\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import {useIntl} from 'react-intl';\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {useEffect, useState} from 'react';\nimport {Card, CardBody, Chip, Spacer, Tab, Tabs} from '@nextui-org/react';\nimport {VariableSelector} from '../common/variable-selector';\nimport {PlotActionProps, addPlot, updatePlot} from '@/actions/plot-actions';\nimport {PlotManagementPanel} from './plot-management';\nimport {CreateButton} from '../common/create-button';\nimport {defaultDatasetIdSelector, selectKeplerDataset} from '@/store/selectors';\nimport {DatasetSelector} from '../common/dataset-selector';\n\nconst NO_MAP_LOADED_MESSAGE = 'Please load a map first before creating and managing your plots.';\n\nexport function ScatterplotPanel() {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  // State for x and y variables\n  const [variableX, setVariableX] = useState<string | undefined>(undefined);\n  const [variableY, setVariableY] = useState<string | undefined>(undefined);\n\n  const defaultDatasetId = useSelector(defaultDatasetIdSelector);\n  const keplerDataset = useSelector(selectKeplerDataset(defaultDatasetId));\n  const [datasetId, setDatasetId] = useState(keplerDataset?.id || '');\n\n  const plots = useSelector((state: GeoDaState) => state.root.plots);\n\n  // Function to handle creation of scatterplot\n  const onCreateScatterplot = () => {\n    if (keplerDataset && variableX && variableY) {\n      dispatch(\n        addPlot({\n          type: 'scatter',\n          variableX,\n          variableY,\n          datasetId\n        })\n      );\n      // Show the plots management panel\n      setShowPlotsManagement(true);\n    }\n  };\n\n  // Logic for managing new plots\n  const newPlotsCount = plots.filter((plot: PlotActionProps) => plot.isNew).length;\n  const [showPlotsManagement, setShowPlotsManagement] = useState(newPlotsCount > 0);\n\n  useEffect(() => {\n    if (newPlotsCount > 0) {\n      plots.forEach((plot: PlotActionProps) => {\n        if (plot.isNew) {\n          dispatch(updatePlot({...plot, isNew: false}));\n        }\n      });\n    }\n  }, [dispatch, newPlotsCount, plots]);\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({id: 'plot.scatterplot.title', defaultMessage: 'Scatterplot'})}\n      description={intl.formatMessage({\n        id: 'plot.scatterplot.description',\n        defaultMessage: 'Create and manage your scatterplots'\n      })}\n      icon={null}\n    >\n      {!keplerDataset ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type={WarningType.WARNING} />\n      ) : (\n        <div className=\"h-full overflow-y-auto p-4\">\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            selectedKey={showPlotsManagement ? 'plot-management' : 'scatterplot-creation'}\n            onSelectionChange={key => setShowPlotsManagement(key === 'plot-management')}\n          >\n            <Tab key=\"scatterplot-creation\" title=\"Create Scatterplot\">\n              <Card>\n                <CardBody>\n                  <div className=\"flex flex-col gap-4\">\n                    <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n                    <VariableSelector\n                      dataId={datasetId}\n                      setVariable={setVariableX}\n                      label=\"Select Independent Variable X\"\n                    />\n                    <VariableSelector\n                      dataId={datasetId}\n                      setVariable={setVariableY}\n                      label=\"Select Dependent Variable Y\"\n                    />\n                    <Spacer y={1} />\n                    <CreateButton\n                      onClick={onCreateScatterplot}\n                      isDisabled={!variableX || !variableY || !keplerDataset}\n                    >\n                      Create Scatterplot\n                    </CreateButton>\n                  </div>\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab\n              key=\"plot-management\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Plots Management</span>\n                  {plots?.length > 0 && (\n                    <Chip size=\"sm\" variant=\"faded\">\n                      {plots.length}\n                    </Chip>\n                  )}\n                </div>\n              }\n            >\n              <PlotManagementPanel />\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import React, {Key, useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useIntl} from 'react-intl';\nimport {Card, CardBody, Chip, Spacer, Tab, Tabs} from '@nextui-org/react';\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {VariableSelector} from '../common/variable-selector';\nimport {GeoDaState} from '@/store';\nimport {PlotActionProps, addPlot, updatePlot} from '@/actions/plot-actions';\nimport {PlotManagementPanel} from './plot-management';\nimport {CreateButton} from '../common/create-button';\nimport {defaultDatasetIdSelector, selectKeplerDataset} from '@/store/selectors';\nimport {DatasetSelector} from '../common/dataset-selector';\n\nexport function BubbleChartPanel() {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const [variableX, setVariableX] = useState<string>('');\n  const [variableY, setVariableY] = useState<string>('');\n  const [variableSize, setVariableSize] = useState<string>('');\n  const [variableColor, setVariableColor] = useState<string>('');\n\n  // boolean variable to check if variables are selected for bubble chart\n  const isVariablesSelected =\n    variableX.length > 0 && variableY.length > 0 && variableSize.length > 0;\n\n  const defaultDatasetId = useSelector(defaultDatasetIdSelector);\n  const keplerDataset = useSelector(selectKeplerDataset(defaultDatasetId));\n  const [datasetId, setDatasetId] = useState(keplerDataset?.id || '');\n\n  const plots = useSelector((state: GeoDaState) => state.root.plots);\n\n  const onCreateBubbleChart = () => {\n    if (isVariablesSelected) {\n      dispatch(\n        addPlot({\n          datasetId,\n          type: 'bubble',\n          variableX,\n          variableY,\n          variableSize,\n          variableColor\n        })\n      );\n    }\n  };\n\n  const newPlotsCount = plots.filter((plot: PlotActionProps) => plot.isNew).length;\n  const [showPlotsManagement, setShowPlotsManagement] = useState(newPlotsCount > 0);\n\n  useEffect(() => {\n    if (newPlotsCount > 0) {\n      plots.forEach((plot: PlotActionProps) => {\n        if (plot.isNew) {\n          dispatch(updatePlot({...plot, isNew: false}));\n        }\n      });\n    }\n  }, [dispatch, newPlotsCount, plots]);\n\n  const plotsLength = plots?.length;\n  useEffect(() => {\n    if (plotsLength) {\n      setShowPlotsManagement(true);\n    }\n  }, [plotsLength]);\n\n  const onTabChange = (key: Key) => {\n    setShowPlotsManagement(key === 'plot-management');\n  };\n\n  return (\n    <RightPanelContainer\n      title={intl.formatMessage({id: 'plot.bubblechart.title', defaultMessage: 'Bubble Chart'})}\n      description={intl.formatMessage({\n        id: 'plot.bubblechart.description',\n        defaultMessage: 'Create and manage your bubble charts'\n      })}\n      icon={null}\n    >\n      {!keplerDataset ? (\n        <WarningBox\n          message=\"Please load a map first before creating and managing your plots.\"\n          type={WarningType.WARNING}\n        />\n      ) : (\n        <div className=\"h-full overflow-y-auto p-4\">\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            selectedKey={showPlotsManagement ? 'plot-management' : 'bubblechart-creation'}\n            onSelectionChange={onTabChange}\n          >\n            <Tab key=\"bubblechart-creation\" title=\"Create Bubble Chart\">\n              <Card>\n                <CardBody>\n                  <div className=\"flex flex-col gap-4\">\n                    <DatasetSelector datasetId={datasetId} setDatasetId={setDatasetId} />\n                    <VariableSelector\n                      dataId={datasetId}\n                      setVariable={setVariableX}\n                      label=\"Select variable for X-axis\"\n                    />\n                    <VariableSelector\n                      dataId={datasetId}\n                      setVariable={setVariableY}\n                      label=\"Select variable for Y-axis\"\n                    />\n                    <VariableSelector\n                      dataId={datasetId}\n                      setVariable={setVariableSize}\n                      label=\"Select variable for bubble size\"\n                    />\n                    <VariableSelector\n                      dataId={datasetId}\n                      setVariable={setVariableColor}\n                      label=\"Select variable for bubble color (optional)\"\n                      optional\n                    />\n                    <Spacer y={1} />\n                    <CreateButton\n                      onClick={onCreateBubbleChart}\n                      isDisabled={isVariablesSelected ? false : true}\n                    >\n                      Create Bubble Chart\n                    </CreateButton>\n                  </div>\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab\n              key=\"plot-management\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Plots Management</span>\n                  {plots?.length > 0 && (\n                    <Chip size=\"sm\" variant=\"faded\">\n                      {plots.length}\n                    </Chip>\n                  )}\n                </div>\n              }\n            >\n              <PlotManagementPanel />\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import {Key, useState, ReactNode} from 'react';\nimport {Accordion, AccordionItem, Button, Tab, Tabs, Radio, RadioGroup} from '@nextui-org/react';\nimport dynamic from 'next/dynamic';\n\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {getLayer} from '@/utils/data-utils';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {NO_MAP_LOADED_MESSAGE} from '../chatgpt/chatgpt-component';\nimport {generateRandomId} from '@/utils/ui-utils';\nimport {addTextGridItem, updateMode} from '@/actions/dashboard-actions';\nimport {MAP_ID, accordionItemClasses} from '@/constants';\nimport {Layer} from '@kepler.gl/layers';\nimport {PlotActionProps} from '@/actions';\nimport {PlotWrapper} from '../plots/plot-management';\nimport {KeplerMapContainer} from '../common/kepler-map-container';\nimport {RegressionReport} from '../spreg/spreg-report';\nimport {TextCell} from './text-cell';\nimport {WeightsMetaTable} from '../weights/weights-management';\nimport {EditorState} from 'lexical';\n\nconst DuckDBTable = dynamic(() => import('../table/duckdb-table'), {ssr: false});\n\ntype DraggableElementProps = {\n  id: string;\n  children: ReactNode;\n};\n\nconst DraggableElement = ({id, children}: DraggableElementProps) => {\n  return (\n    <div\n      className=\"relative h-[200px] w-5/6 overflow-clip rounded-md border-1 border-dashed border-gray-300\"\n      draggable={true}\n      unselectable=\"on\"\n      // this is a hack for firefox\n      // Firefox requires some kind of initialization\n      // which we can do by adding this attribute\n      // @see https://bugzilla.mozilla.org/show_bug.cgi?id=568313\n      onDragStart={e => e.dataTransfer.setData('text/plain', JSON.stringify({id}))}\n    >\n      <div className=\"pointer-events-none h-full w-full \">{children}</div>\n      <div className=\"absolute left-0 top-0 h-full w-full bg-gray-200 bg-opacity-50\" />\n    </div>\n  );\n};\n\n// React function component DashboardPanel, returns a JSX element, which includes the following:\n//   - RightPanelContainer\n//    - a div element\n//     - a select element \"Mode\" with options \"Edit\", \"Display\"\n//     - a button element \"Add Text\"\nexport function DashboardPanel() {\n  const dispatch = useDispatch();\n\n  // get grid items from redux store\n  const gridItems = useSelector((state: GeoDaState) => state.root.dashboard.gridItems); // get all layers from kepler.gl visstate\n  const layerOrder = useSelector(\n    (state: GeoDaState) => state.keplerGl[MAP_ID]?.visState?.layerOrder\n  );\n  const layers = useSelector((state: GeoDaState) =>\n    // get layers that their ids are in layerOrder\n    state.keplerGl[MAP_ID]?.visState?.layers?.filter((l: Layer) => layerOrder.includes(l.id))\n  );\n  const layerIds = layers?.map((layer: Layer) => layer.id);\n  // get all plots from redux state\n  const plots = useSelector((state: GeoDaState) => state.root.plots);\n  const plotIds = plots?.map((plot: any) => plot.id);\n  // get all regressions from redux store\n  const regressions = useSelector((state: GeoDaState) => state.root.regressions);\n  // get text items from redux store\n  const textItems = useSelector((state: GeoDaState) => state.root.dashboard.textItems);\n  // get weights from redux store\n  const weights = useSelector((state: GeoDaState) => state.root.weights);\n  // get dashboard mode from redux store\n  // const mode = useSelector((state: GeoDaState) => state.root.dashboard.mode);\n  // get theme from redux store\n  const theme = useSelector((state: GeoDaState) => state.root.uiState.theme);\n\n  const [showSettings, setShowSettings] = useState(false);\n\n  const layer = useSelector((state: GeoDaState) => getLayer(state));\n\n  const onModeChange = (key: string) => {\n    const mode = key === 'edit' ? 'edit' : 'display';\n    dispatch(updateMode(mode));\n  };\n\n  const onAddTextClick = () => {\n    const id = generateRandomId();\n    dispatch(addTextGridItem({id, content: null}));\n  };\n\n  const onTabChange = (key: Key) => {\n    if (key === 'dashboard-settings') {\n      setShowSettings(true);\n    } else {\n      setShowSettings(false);\n    }\n  };\n\n  return (\n    <RightPanelContainer\n      title=\"Dashboard\"\n      description=\"Create and manage your dashboard\"\n      icon={null}\n    >\n      {!layer ? (\n        <WarningBox message={NO_MAP_LOADED_MESSAGE} type={WarningType.WARNING} />\n      ) : (\n        <div className=\"flex h-full flex-col gap-4 overflow-y-auto p-4\">\n          <div className=\"flex flex-row gap-4 text-sm\">\n            <p className=\"text-small text-default-600 \">Select mode</p>\n            <RadioGroup\n              label=\"\"\n              defaultValue=\"edit\"\n              defaultChecked={true}\n              size=\"sm\"\n              orientation=\"horizontal\"\n              onValueChange={onModeChange}\n            >\n              <Radio value=\"edit\">Edit</Radio>\n              <Radio value=\"display\">Display</Radio>\n            </RadioGroup>\n          </div>\n          <Tabs\n            aria-label=\"Options\"\n            variant=\"solid\"\n            color=\"danger\"\n            classNames={{}}\n            size=\"md\"\n            selectedKey={showSettings ? 'dashboard-settings' : 'dashboard-widgets'}\n            onSelectionChange={onTabChange}\n          >\n            <Tab\n              key=\"dashboard-settings\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Widget Setting</span>\n                </div>\n              }\n            ></Tab>\n            <Tab\n              key=\"dashboard-widgets\"\n              title={\n                <div className=\"flex items-center space-x-2\">\n                  <span>Widgets Management</span>\n                </div>\n              }\n            >\n              <div className=\"flex flex-col gap-4 text-sm\">\n                <Accordion\n                  defaultExpandedKeys={['1', '2']}\n                  itemClasses={accordionItemClasses}\n                  selectionMode=\"multiple\"\n                  variant=\"splitted\"\n                >\n                  <AccordionItem\n                    key=\"1\"\n                    aria-label=\"new-widgets\"\n                    subtitle=\"Add a new widget to dashboard\"\n                    title=\"New Widgets\"\n                  >\n                    <Button\n                      onClick={onAddTextClick}\n                      radius=\"sm\"\n                      color=\"danger\"\n                      className=\"bg-blue-900\"\n                      size=\"sm\"\n                    >\n                      Add Text Widget\n                    </Button>\n                  </AccordionItem>\n                  <AccordionItem\n                    key=\"2\"\n                    aria-label=\"available-widgets\"\n                    subtitle=\"Drag and drop a widget to dashboard\"\n                    title=\"Available Widgets\"\n                  >\n                    <div className=\"flex flex-col items-center space-y-4 align-middle\">\n                      {layerIds &&\n                        layerIds.map(\n                          (layerId: string) =>\n                            gridItems?.find(l => l.id === layerId && l.show === false) && (\n                              <DraggableElement key={layerId} id={layerId}>\n                                <KeplerMapContainer layerId={layerId} mapIndex={1} />\n                              </DraggableElement>\n                            )\n                        )}\n                      {plotIds &&\n                        plots.map(\n                          (plot: PlotActionProps) =>\n                            gridItems?.find(l => l.id === plot.id && l.show === false) && (\n                              <DraggableElement key={plot.id} id={plot.id}>\n                                {PlotWrapper(plot, false)}\n                              </DraggableElement>\n                            )\n                        )}\n                      {regressions &&\n                        regressions.map(\n                          (regression: any) =>\n                            gridItems?.find(l => l.id === regression.id && l.show === false) && (\n                              <DraggableElement key={regression.id} id={regression.id}>\n                                <RegressionReport key={regression.id} regression={regression} />\n                              </DraggableElement>\n                            )\n                        )}\n                      {textItems &&\n                        textItems.map(\n                          (textItem: {id: string; content: EditorState}) =>\n                            gridItems?.find(l => l.id === textItem.id && l.show === false) && (\n                              <DraggableElement key={textItem.id} id={textItem.id}>\n                                <TextCell\n                                  id={textItem.id}\n                                  mode={'display'}\n                                  theme={theme}\n                                  initialState={textItem.content}\n                                />\n                              </DraggableElement>\n                            )\n                        )}\n                      {weights &&\n                        weights.map(\n                          (weight: any) =>\n                            gridItems?.find(\n                              l => l.id === weight.weightsMeta.id && l.show === false\n                            ) && (\n                              <DraggableElement\n                                key={weight.weightsMeta.id}\n                                id={weight.weightsMeta.id}\n                              >\n                                <WeightsMetaTable weightsMeta={weight.weightsMeta} />\n                              </DraggableElement>\n                            )\n                        )}\n                      {gridItems?.find(l => l.id === 'table' && l.show === false) && (\n                        <DraggableElement key=\"table\" id=\"table\">\n                          <DuckDBTable />\n                        </DraggableElement>\n                      )}\n                    </div>\n                  </AccordionItem>\n                </Accordion>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","'use client';\n\nimport type {ComponentProps} from 'react';\nimport type {ButtonProps} from '@nextui-org/react';\n\n// eslint-disable-next-line no-duplicate-imports\nimport React from 'react';\nimport {useControlledState} from '@react-stately/utils';\nimport {m, LazyMotion, domAnimation} from 'framer-motion';\n\nimport {cn} from './cn';\n\nexport type VerticalStepProps = {\n  className?: string;\n  description?: React.ReactNode;\n  element?: React.ReactElement;\n  title?: React.ReactNode;\n};\n\nexport interface VerticalStepsProps extends React.HTMLAttributes<HTMLButtonElement> {\n  /**\n   * An array of steps.\n   *\n   * @default []\n   */\n  steps?: VerticalStepProps[];\n  /**\n   * The color of the steps.\n   *\n   * @default \"primary\"\n   */\n  color?: ButtonProps['color'];\n  /**\n   * The current step index.\n   */\n  currentStep?: number;\n  /**\n   * The default step index.\n   *\n   * @default 0\n   */\n  defaultStep?: number;\n  /**\n   * Whether to hide the progress bars.\n   *\n   * @default false\n   */\n  hideProgressBars?: boolean;\n  /**\n   * The custom class for the steps wrapper.\n   */\n  className?: string;\n  /**\n   * The custom class for the step.\n   */\n  stepClassName?: string;\n  /**\n   * Callback function when the step index changes.\n   */\n  onStepChange?: (stepIndex: number) => void;\n}\n\nfunction CheckIcon(props: ComponentProps<'svg'>) {\n  return (\n    <svg {...props} fill=\"none\" stroke=\"currentColor\" strokeWidth={2} viewBox=\"0 0 24 24\">\n      <m.path\n        animate={{pathLength: 1}}\n        d=\"M5 13l4 4L19 7\"\n        initial={{pathLength: 0}}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        transition={{\n          delay: 0.2,\n          type: 'tween',\n          ease: 'easeOut',\n          duration: 0.3\n        }}\n      />\n    </svg>\n  );\n}\n\nconst VerticalSteps = React.forwardRef<HTMLButtonElement, VerticalStepsProps>(\n  (\n    {\n      color = 'primary',\n      steps = [],\n      defaultStep = 0,\n      onStepChange,\n      currentStep: currentStepProp,\n      hideProgressBars = false,\n      stepClassName,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const [currentStep, setCurrentStep] = useControlledState(\n      currentStepProp,\n      defaultStep,\n      onStepChange\n    );\n\n    const colors = React.useMemo(() => {\n      let userColor;\n      let fgColor;\n\n      const colorsVars = [\n        '[--active-fg-color:var(--step-fg-color)]',\n        '[--active-border-color:var(--step-color)]',\n        '[--active-color:var(--step-color)]',\n        '[--complete-background-color:var(--step-color)]',\n        '[--complete-border-color:var(--step-color)]',\n        '[--inactive-border-color:hsl(var(--nextui-default-300))]',\n        '[--inactive-color:hsl(var(--nextui-default-300))]'\n      ];\n\n      switch (color) {\n        case 'primary':\n          userColor = '[--step-color:hsl(var(--nextui-primary))]';\n          fgColor = '[--step-fg-color:hsl(var(--nextui-primary-foreground))]';\n          break;\n        case 'secondary':\n          userColor = '[--step-color:hsl(var(--nextui-secondary))]';\n          fgColor = '[--step-fg-color:hsl(var(--nextui-secondary-foreground))]';\n          break;\n        case 'success':\n          userColor = '[--step-color:hsl(var(--nextui-success))]';\n          fgColor = '[--step-fg-color:hsl(var(--nextui-success-foreground))]';\n          break;\n        case 'warning':\n          userColor = '[--step-color:hsl(var(--nextui-warning))]';\n          fgColor = '[--step-fg-color:hsl(var(--nextui-warning-foreground))]';\n          break;\n        case 'danger':\n          userColor = '[--step-color:hsl(var(--nextui-error))]';\n          fgColor = '[--step-fg-color:hsl(var(--nextui-error-foreground))]';\n          break;\n        case 'default':\n          userColor = '[--step-color:hsl(var(--nextui-default))]';\n          fgColor = '[--step-fg-color:hsl(var(--nextui-default-foreground))]';\n          break;\n        default:\n          userColor = '[--step-color:hsl(var(--nextui-primary))]';\n          fgColor = '[--step-fg-color:hsl(var(--nextui-primary-foreground))]';\n          break;\n      }\n\n      if (!className?.includes('--step-fg-color')) colorsVars.unshift(fgColor);\n      if (!className?.includes('--step-color')) colorsVars.unshift(userColor);\n      if (!className?.includes('--inactive-bar-color'))\n        colorsVars.push('[--inactive-bar-color:hsl(var(--nextui-default-300))]');\n\n      return colorsVars;\n    }, [color, className]);\n\n    return (\n      <nav aria-label=\"Progress\" className=\"max-w-fit\">\n        <ol className={cn('flex flex-col gap-y-3', colors, className)}>\n          {steps?.map((step, stepIdx) => {\n            let status =\n              currentStep === stepIdx ? 'active' : currentStep < stepIdx ? 'inactive' : 'complete';\n\n            return (\n              <li key={stepIdx} className=\"relative\">\n                <div className=\"flex w-full max-w-full items-center\">\n                  <button\n                    key={stepIdx}\n                    ref={ref}\n                    aria-current={status === 'active' ? 'step' : undefined}\n                    className={cn(\n                      'group flex w-full cursor-pointer items-center justify-center gap-4 rounded-large px-3 py-2.5',\n                      stepClassName\n                    )}\n                    onClick={() => setCurrentStep(stepIdx)}\n                    {...props}\n                  >\n                    <div className=\"flex h-full items-center\">\n                      <LazyMotion features={domAnimation}>\n                        <div className=\"relative\">\n                          <m.div\n                            animate={status}\n                            className={cn(\n                              'relative flex h-[34px] w-[34px] items-center justify-center rounded-full border-medium text-large font-semibold text-default-foreground',\n                              {\n                                'shadow-lg': status === 'complete'\n                              }\n                            )}\n                            data-status={status}\n                            initial={false}\n                            transition={{duration: 0.25}}\n                            variants={{\n                              inactive: {\n                                backgroundColor: 'transparent',\n                                borderColor: 'var(--inactive-border-color)',\n                                color: 'var(--inactive-color)'\n                              },\n                              active: {\n                                backgroundColor: 'transparent',\n                                borderColor: 'var(--active-border-color)',\n                                color: 'var(--active-color)'\n                              },\n                              complete: {\n                                backgroundColor: 'var(--complete-background-color)',\n                                borderColor: 'var(--complete-border-color)'\n                              }\n                            }}\n                          >\n                            <div className=\"flex items-center justify-center\">\n                              {status === 'complete' ? (\n                                <CheckIcon className=\"h-6 w-6 text-[var(--active-fg-color)]\" />\n                              ) : (\n                                <span>{stepIdx + 1}</span>\n                              )}\n                            </div>\n                          </m.div>\n                        </div>\n                      </LazyMotion>\n                    </div>\n                    <div className=\"flex-1 text-left\">\n                      <div>\n                        <div\n                          className={cn(\n                            'text-medium font-medium text-default-foreground transition-[color,opacity] duration-300 group-active:opacity-70',\n                            {\n                              'text-default-500': status === 'inactive'\n                            }\n                          )}\n                        >\n                          {step.title}\n                        </div>\n                        <div\n                          className={cn(\n                            'text-tiny text-default-600 transition-[color,opacity] duration-300 group-active:opacity-70 lg:text-small',\n                            {\n                              'text-default-500': status === 'inactive'\n                            }\n                          )}\n                        >\n                          {step.description}\n                        </div>\n                        <div className={'mt-4'}>{step.element}</div>\n                      </div>\n                    </div>\n                  </button>\n                </div>\n                {stepIdx < steps.length - 1 && !hideProgressBars && (\n                  <div\n                    aria-hidden=\"true\"\n                    className={cn(\n                      'pointer-events-none absolute left-3 top-[calc(64px_*_var(--idx)_+_1)] flex h-1/2 -translate-y-1/3 items-center px-4'\n                    )}\n                    style={{\n                      // @ts-ignore\n                      '--idx': stepIdx\n                    }}\n                  >\n                    <div\n                      className={cn(\n                        'relative h-full w-0.5 bg-[var(--inactive-bar-color)] transition-colors duration-300',\n                        \"after:absolute after:block after:h-0 after:w-full after:bg-[var(--active-border-color)] after:transition-[height] after:duration-300 after:content-['']\",\n                        {\n                          'after:h-full': stepIdx < currentStep\n                        }\n                      )}\n                    />\n                  </div>\n                )}\n              </li>\n            );\n          })}\n        </ol>\n      </nav>\n    );\n  }\n);\n\nVerticalSteps.displayName = 'VerticalSteps';\n\nexport default VerticalSteps;\n","import {Input, Spacer} from '@nextui-org/react';\nimport {DatasetSelector} from '../common/dataset-selector';\nimport VerticalSteps from '../common/vertical-steps';\nimport {CreateButton} from '../common/create-button';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  datasetsSelector,\n  selectKeplerDataset,\n  selectKeplerLayer,\n  selectSpatialCountConfig\n} from '@/store/selectors';\nimport React, {useState} from 'react';\nimport {getDatasetName} from '@/utils/data-utils';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {runSpatialCountAsync} from '@/actions/spatial-join-actions';\n\nexport function SpatialCountPanel() {\n  const dispatch = useDispatch<any>();\n\n  const datasets = useSelector(datasetsSelector);\n\n  const spatialCountConfig = useSelector(selectSpatialCountConfig);\n\n  const [firstDatasetId, setFirstDatasetId] = useState(\n    spatialCountConfig?.leftDatasetId || datasets?.[0]?.dataId || ''\n  );\n\n  const [secondDatasetId, setSecondDatasetId] = useState(spatialCountConfig?.rightDatasetId || '');\n\n  const [newColumnName, setNewColumnName] = useState(spatialCountConfig?.newColumnName || '');\n\n  const [errorMessage, setErrorMessage] = useState(spatialCountConfig?.errorMessage || '');\n\n  const [status, setStatus] = useState(spatialCountConfig?.status || '');\n\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const [isRunning, setIsRunning] = useState(false);\n\n  const resetRunningState = () => {\n    setIsRunning(false);\n    setErrorMessage('');\n    setStatus('');\n  };\n\n  const onSetFirstDatasetId = (datasetId: string) => {\n    setFirstDatasetId(datasetId);\n    setCurrentStep(1);\n    // reset\n    resetRunningState();\n  };\n\n  const onSetSecondDatasetId = (datasetId: string) => {\n    setSecondDatasetId(datasetId);\n    setCurrentStep(2);\n    resetRunningState();\n  };\n\n  const onNewColumnNameChange = (value: string) => {\n    setNewColumnName(value);\n    setCurrentStep(3);\n    resetRunningState();\n  };\n\n  const leftLayer = useSelector(selectKeplerLayer(firstDatasetId));\n  const rightLayer = useSelector(selectKeplerLayer(secondDatasetId));\n  const leftDataset = useSelector(selectKeplerDataset(firstDatasetId));\n  const rightDataset = useSelector(selectKeplerDataset(secondDatasetId));\n\n  const onSpatialCount = async () => {\n    setIsRunning(true);\n    // wait 100 ms to show loading spinner\n    await new Promise(resolve => setTimeout(resolve, 500));\n    dispatch(\n      runSpatialCountAsync({\n        leftDatasetId: firstDatasetId,\n        leftTableName: getDatasetName(datasets, firstDatasetId),\n        newColumnName,\n        leftLayer,\n        rightLayer,\n        leftDataset,\n        rightDataset\n      })\n    );\n    resetRunningState();\n  };\n\n  return (\n    <div className=\"flex h-full flex-col gap-2 overflow-y-auto\">\n      <section className=\"max-w-sm\">\n        <p className=\"mb-5 text-small text-default-500\">\n          Spatial count is a spatial operation that counts the number of geometries (e.g. points) in\n          one dataset that intersect with geometries (e.g. polygons) in another dataset. For\n          example, count how many events occurred in each zipcode area and save the counts in a new\n          column.\n        </p>\n        <VerticalSteps\n          hideProgressBars\n          className=\"max-w-sm\"\n          defaultStep={-1}\n          currentStep={currentStep}\n          stepClassName=\"border border-default-200 dark:border-default-50 aria-[current]:bg-default-100 dark:aria-[current]:bg-default-50\"\n          steps={[\n            {\n              title: 'Select the first dataset',\n              description:\n                'The first dataset with geometries (e.g. polygons) that contain/intersect geometries from the second dataset.',\n              element: (\n                <DatasetSelector setDatasetId={onSetFirstDatasetId} datasetId={firstDatasetId} />\n              )\n            },\n            {\n              title: 'Select the second dataset',\n              description:\n                'The second dataset with geometries (e.g. points) that will be counted by the geometries in the first dataset.',\n              element: (\n                <DatasetSelector setDatasetId={onSetSecondDatasetId} datasetId={secondDatasetId} />\n              )\n            },\n            {\n              title: 'Input the new column name',\n              description:\n                'The new column name that will be created in the first dataset with the count values.',\n              element: (\n                <Input\n                  type=\"text\"\n                  label=\"New column\"\n                  placeholder=\"Enter the new column name\"\n                  onValueChange={onNewColumnNameChange}\n                  value={newColumnName}\n                  isInvalid={newColumnName?.length === 0}\n                />\n              )\n            }\n          ]}\n        />\n      </section>\n      {status === 'success' ? (\n        <WarningBox message=\"Spatial count applied successfully\" type={WarningType.SUCCESS} />\n      ) : (\n        isRunning &&\n        errorMessage.length > 0 && <WarningBox message={errorMessage} type={WarningType.ERROR} />\n      )}\n      <Spacer y={2} />\n      <CreateButton\n        onClick={onSpatialCount}\n        isDisabled={\n          newColumnName?.length === 0 ||\n          secondDatasetId?.length === 0 ||\n          firstDatasetId?.length === 0\n        }\n        isRunning={isRunning}\n      >\n        Apply Spatial Count\n      </CreateButton>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport {Input, Spacer} from '@nextui-org/react';\nimport {DatasetSelector} from '../common/dataset-selector';\nimport VerticalSteps from '../common/vertical-steps';\nimport {CreateButton} from '../common/create-button';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  datasetsSelector,\n  selectKeplerDataset,\n  selectKeplerLayer,\n  selectSpatialAssignConfig\n} from '@/store/selectors';\nimport {getDatasetName} from '@/utils/data-utils';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {VARIABLE_TYPE, VariableSelector} from '../common/variable-selector';\nimport {runSpatialAssignAsync} from '@/actions/spatial-join-actions';\n\nexport function SpatialAssignPanel() {\n  const dispatch = useDispatch<any>();\n\n  const datasets = useSelector(datasetsSelector);\n\n  const spatialAssignConfig = useSelector(selectSpatialAssignConfig);\n\n  const [firstDatasetId, setFirstDatasetId] = useState(\n    spatialAssignConfig?.leftDatasetId || datasets?.[0]?.dataId || ''\n  );\n\n  const [secondDatasetId, setSecondDatasetId] = useState(spatialAssignConfig?.rightDatasetId || '');\n\n  const [secondVariable, setSecondVariable] = useState(spatialAssignConfig?.rightColumnName || '');\n\n  const [newColumnName, setNewColumnName] = useState(spatialAssignConfig?.newColumnName || '');\n\n  const [status, setStatus] = useState(spatialAssignConfig?.status || '');\n\n  const [errorMessage, setErrorMessage] = useState(spatialAssignConfig?.errorMessage || '');\n\n  const [isRunning, setIsRunning] = useState(false);\n\n  const [currentStep, setCurrentStep] = useState(1);\n\n  // get layers and datasets\n  const leftLayer = useSelector(selectKeplerLayer(firstDatasetId));\n  const rightLayer = useSelector(selectKeplerLayer(secondDatasetId));\n  const leftDataset = useSelector(selectKeplerDataset(firstDatasetId));\n  const rightDataset = useSelector(selectKeplerDataset(secondDatasetId));\n\n  const resetRunningState = () => {\n    setIsRunning(false);\n    setErrorMessage('');\n    setStatus('');\n  };\n\n  const onSetFirstDatasetId = (datasetId: string) => {\n    setFirstDatasetId(datasetId);\n    setCurrentStep(1);\n    // reset\n    resetRunningState();\n  };\n\n  const onSetSecondDatasetId = (datasetId: string) => {\n    setSecondDatasetId(datasetId);\n    setCurrentStep(2);\n    resetRunningState();\n  };\n\n  const onSelectSecondVariable = (variable: string) => {\n    setSecondVariable(variable);\n    setCurrentStep(3);\n    resetRunningState();\n  };\n\n  const onNewColumnNameChange = (value: string) => {\n    setNewColumnName(value);\n    // check if column name not existed in first dataset\n    setCurrentStep(4);\n    resetRunningState();\n  };\n\n  const onSpatialAssign = async () => {\n    setIsRunning(true);\n    // wait 100 ms to show loading spinner\n    await new Promise(resolve => setTimeout(resolve, 500));\n    dispatch(\n      runSpatialAssignAsync({\n        leftDatasetId: firstDatasetId,\n        leftTableName: getDatasetName(datasets, firstDatasetId),\n        newColumnName,\n        leftLayer,\n        rightLayer,\n        leftDataset,\n        rightDataset,\n        rightColumnName: secondVariable\n      })\n    );\n    resetRunningState();\n  };\n\n  return (\n    <div className=\"flex h-full flex-col gap-2 overflow-y-auto\">\n      <section className=\"max-w-sm\">\n        <p className=\"mb-5 text-small text-default-500\">\n          Spatial assign operation assigns the value (e.g. the zipcode) from one dataset (e.g.\n          zipcode areas) to another dataset (e.g. crime event) based on the spatial relationship\n          between the two datasets.\n        </p>\n        <VerticalSteps\n          hideProgressBars\n          className=\"max-w-sm\"\n          defaultStep={-1}\n          currentStep={currentStep}\n          stepClassName=\"border border-default-200 dark:border-default-50 aria-[current]:bg-default-100 dark:aria-[current]:bg-default-50\"\n          steps={[\n            {\n              title: 'Select the first dataset',\n              description:\n                'The first dataset contains geometries (e.g. points) to which the values (e.g. zipcode or city name) from the second dataset will be assigned.',\n              element: (\n                <DatasetSelector setDatasetId={onSetFirstDatasetId} datasetId={firstDatasetId} />\n              )\n            },\n            {\n              title: 'Select the second dataset',\n              description:\n                'The second dataset contains geometries (e.g. polygons) and values (e.g. zip codes or city names) that will be assigned to the geometries in the first dataset.',\n              element: (\n                <DatasetSelector setDatasetId={onSetSecondDatasetId} datasetId={secondDatasetId} />\n              )\n            },\n            {\n              title: 'Select the column in the second dataset',\n              description:\n                'The column in the second dataset that contains the values (e.g. zip codes or city names) to be assigned to the geometries in the first dataset.',\n              element: (\n                <VariableSelector\n                  dataId={secondDatasetId}\n                  setVariable={onSelectSecondVariable}\n                  variableType={VARIABLE_TYPE.IntegerOrString}\n                  isInvalid={secondVariable === null || secondVariable.length === 0}\n                />\n              )\n            },\n            {\n              title: 'Input the new column name',\n              description:\n                'The new column name that will be created in the first dataset with the assigned value.',\n              element: (\n                <Input\n                  type=\"text\"\n                  label=\"New column\"\n                  placeholder=\"Enter the new column name\"\n                  onValueChange={onNewColumnNameChange}\n                  value={newColumnName}\n                  isInvalid={newColumnName?.length === 0}\n                />\n              )\n            }\n          ]}\n        />\n      </section>\n      {status === 'success' ? (\n        <WarningBox message=\"Spatial assign applied successfully\" type={WarningType.SUCCESS} />\n      ) : (\n        isRunning &&\n        errorMessage.length > 0 && <WarningBox message={errorMessage} type={WarningType.ERROR} />\n      )}\n      <Spacer y={2} />\n      <CreateButton\n        onClick={onSpatialAssign}\n        isDisabled={\n          newColumnName?.length === 0 ||\n          secondDatasetId?.length === 0 ||\n          firstDatasetId?.length === 0\n        }\n        isRunning={isRunning}\n      >\n        Apply Spatial Assign\n      </CreateButton>\n    </div>\n  );\n}\n","import {useSelector, useDispatch} from 'react-redux';\nimport {RightPanelContainer} from '../common/right-panel-template';\nimport {datasetsSelector} from '@/store/selectors';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport React from 'react';\nimport {Card, CardBody, Tab, Tabs} from '@nextui-org/react';\nimport {SpatialCountPanel} from './spatial-count-panel';\nimport {setAddDatasetModal} from '../../actions';\nimport {SpatialAssignPanel} from './spatial-assign-panel';\n\nexport function SpatialJoinPanel() {\n  const datasets = useSelector(datasetsSelector);\n  const dispatch = useDispatch();\n\n  const onClickWarningBox = () => {\n    // dispatch to show add dataset modal\n    dispatch(setAddDatasetModal(true));\n  };\n\n  return (\n    <RightPanelContainer\n      title=\"Spatial Join\"\n      description=\"Apply spatial count, assign and dissolve operations.\"\n    >\n      {datasets?.length < 2 ? (\n        <WarningBox\n          message=\"Please load at least two datasets to perform spatial count.\"\n          type={WarningType.WARNING}\n          onClick={onClickWarningBox}\n        />\n      ) : (\n        <div className=\"flex h-full w-full flex-col overflow-y-auto p-4\">\n          <Tabs aria-label=\"spatial-join\" variant=\"solid\" color=\"danger\" classNames={{}} size=\"md\">\n            <Tab key=\"spatial-count\" title=\"Spatial Count\">\n              <Card>\n                <CardBody>\n                  <SpatialCountPanel />\n                </CardBody>\n              </Card>\n            </Tab>\n            <Tab key=\"spatial-assign\" title=\"Spatial Assign\">\n              <Card>\n                <CardBody>\n                  <SpatialAssignPanel />\n                </CardBody>\n              </Card>\n            </Tab>\n            {/* <Tab key=\"spatial-dissolve\" title=\"Spatial Dissolve\">\n              <Card>\n                <CardBody>\n                  <div>Content</div>\n                </CardBody>\n              </Card>\n            </Tab> */}\n          </Tabs>\n        </div>\n      )}\n    </RightPanelContainer>\n  );\n}\n","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport dynamic from 'next/dynamic';\nimport {Icon} from '@iconify/react';\n\nimport {GeoDaState} from '../../store';\nimport {SettingsPanel} from './settings-panel';\nimport {setShowPropertyPanel} from '@/actions';\n\nimport {WeightsPanel} from '../weights/weights-panel';\nimport {LisaPanel} from '../lisa/lisa-panel';\nimport {HistogramPanel} from '../plots/histogram-panel';\nimport {BoxplotPanel} from '../plots/boxplot-panel';\nimport {ParallelCoordinatePanel} from '../plots/parallel-coordinate-panel';\nimport {SpregPanel} from '../spreg/spreg-panel';\nimport {ScatterplotPanel} from '../plots/scatterplot-panel';\nimport {BubbleChartPanel} from '../plots/bubble-chart-panel';\nimport {DashboardPanel} from '../dashboard/dashboard-panel';\nimport {Splitter} from '../common/splitter';\nimport {DEFAULT_PANEL_WIDTH} from '@/constants';\nimport {SpatialJoinPanel} from '../spatial-operations/spatial-join-panel';\nimport {Button} from '@nextui-org/react';\n\nconst TablePanel = dynamic(() => import('../table/table-panel'), {ssr: false});\nconst MappingPanel = dynamic(() => import('../mapping/mapping-panel'), {ssr: false});\n\n// define enum for panel names\nexport enum PanelName {\n  SETTINGS = 'Settings',\n  TABLE = 'Table',\n  MAPPING = 'Mapping',\n  WEIGHTS = 'Weights',\n  LISA = 'Lisa',\n  HISTOGRAM = 'Histogram',\n  SCATTERPLOT = 'Scatterplot',\n  BOXPLOT = 'Boxplot',\n  SPREG = 'Spatial Regression',\n  PARALLEL_COORDINATE = 'Parallel Coordinate',\n  BUBBLE_CHART = 'Bubble Chart',\n  DASHBOARD = 'Dashboard',\n  SPATIAL_JOIN = 'Spatial Join'\n}\n\nexport const PanelContainer = () => {\n  const dispatch = useDispatch();\n\n  const [panelWidth, setPanelWidth] = React.useState<number>(DEFAULT_PANEL_WIDTH);\n\n  // get showGridView from redux state\n  const showPropertyPanel = useSelector(\n    (state: GeoDaState) => state.root.uiState.showPropertyPanel\n  );\n\n  // get panel name\n  const propertyPanelName = useSelector(\n    (state: GeoDaState) => state.root.uiState.propertyPanelName\n  );\n\n  const onCloseClick = useCallback(\n    (event: React.MouseEvent) => {\n      dispatch(setShowPropertyPanel(false));\n      event.preventDefault();\n      event.stopPropagation();\n    },\n    [dispatch]\n  );\n\n  return showPropertyPanel ? (\n    <div\n      className=\"relative flex h-screen flex-row bg-gray-50 dark:bg-stone-900\"\n      style={{width: panelWidth}}\n    >\n      <Splitter\n        mode=\"horizontal\"\n        initialSize={panelWidth}\n        onSplitterChange={setPanelWidth}\n        minimumSize={DEFAULT_PANEL_WIDTH}\n      />\n      <div className=\"relative flex flex-grow flex-col\">\n        <Button\n          className=\"absolute right-1 top-1 z-10\"\n          isIconOnly={true}\n          variant=\"light\"\n          size=\"sm\"\n          onClick={onCloseClick}\n        >\n          <Icon icon=\"system-uicons:window-collapse-left\" width={18} />\n        </Button>\n        <div className=\"h-full\" style={{width: `${panelWidth}px`}}>\n          {propertyPanelName === PanelName.SETTINGS && <SettingsPanel />}\n          {propertyPanelName === PanelName.MAPPING && <MappingPanel />}\n          {propertyPanelName === PanelName.WEIGHTS && <WeightsPanel />}\n          {propertyPanelName === PanelName.LISA && <LisaPanel />}\n          {propertyPanelName === PanelName.HISTOGRAM && <HistogramPanel />}\n          {propertyPanelName === PanelName.BOXPLOT && <BoxplotPanel />}\n          {propertyPanelName === PanelName.PARALLEL_COORDINATE && <ParallelCoordinatePanel />}\n          {propertyPanelName === PanelName.SPREG && <SpregPanel />}\n          {propertyPanelName === PanelName.SCATTERPLOT && <ScatterplotPanel />}\n          {propertyPanelName === PanelName.BUBBLE_CHART && <BubbleChartPanel />}\n          {propertyPanelName === PanelName.DASHBOARD && <DashboardPanel />}\n          {propertyPanelName === PanelName.TABLE && <TablePanel />}\n          {propertyPanelName === PanelName.SPATIAL_JOIN && <SpatialJoinPanel />}\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","import {useMemo, useRef, useState} from 'react';\nimport {Card, CardHeader, CardBody} from '@nextui-org/react';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\n// Import the echarts core module, which provides the necessary interfaces for using echarts.\nimport * as echarts from 'echarts/core';\n// Import charts, all with Chart suffix\nimport {BoxplotChart, ScatterChart} from 'echarts/charts';\n// import components, all suffixed with Component\nimport {\n  GridComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  BrushComponent,\n  TitleComponent,\n  DataZoomComponent,\n  DataZoomInsideComponent\n} from 'echarts/components';\nimport {CanvasRenderer} from 'echarts/renderers';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {CreateBoxplotProps, getBoxPlotChartOption} from '@/utils/plots/boxplot-utils';\nimport {GeoDaState} from '@/store';\nimport {EChartsUpdater, onBrushSelected} from './echarts-updater';\nimport {getColumnDataFromKeplerDataset} from '@/utils/data-utils';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {ECHARTS_DARK_THEME} from './echarts-theme';\nimport {ChartInsightButton} from '../common/chart-insight';\nimport {BoxPlotStateProps} from '@/reducers/plot-reducer';\n\n// Register the required components\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  ToolboxComponent,\n  BrushComponent,\n  GridComponent,\n  DataZoomComponent,\n  DataZoomInsideComponent,\n  BoxplotChart,\n  ScatterChart,\n  CanvasRenderer\n]);\necharts.registerTheme('dark', ECHARTS_DARK_THEME);\n\n/**\n * The react component of a box plot using eCharts\n */\nexport const BoxPlot = ({props}: {props: BoxPlotStateProps}) => {\n  const {id, datasetId, variables, data: boxPlotData} = props;\n\n  const dispatch = useDispatch();\n  const eChartsRef = useRef<ReactEChartsCore>(null);\n  const [rendered, setRendered] = useState(false);\n\n  // use selector to get theme\n  const theme = useSelector((state: GeoDaState) => state.root.uiState.theme);\n  // use selector to get sourceId of interaction\n  const sourceId = useSelector((state: GeoDaState) => state.root.interaction?.sourceId);\n  // use selector to get keplerDataset\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  const seriesIndex = variables.map((_, i) => i);\n\n  // get chart option by calling getChartOption only once\n  const option = useMemo(() => {\n    const rawData = variables.reduce((prev: CreateBoxplotProps['data'], cur: string) => {\n      const values = getColumnDataFromKeplerDataset(cur, keplerDataset);\n      prev[cur] = values;\n      return prev;\n    }, {});\n\n    return getBoxPlotChartOption({\n      rawData,\n      boxData: boxPlotData.boxData,\n      meanPoint: boxPlotData.meanPoint,\n      theme: theme\n    });\n  }, [variables, boxPlotData.boxData, boxPlotData.meanPoint, theme, keplerDataset]);\n\n  const bindEvents = useMemo(\n    () => ({\n      brushSelected: function (params: any) {\n        onBrushSelected(params, dispatch, datasetId, id, eChartsRef.current?.getEchartsInstance());\n      },\n      rendered: function () {\n        setRendered(true);\n      }\n    }),\n    [dispatch, datasetId, id]\n  );\n\n  // generate a unique id for the chart\n  const chartId = `box-plot-${id}`;\n\n  return useMemo(\n    () => (\n      <Card className=\"my-4\" shadow=\"none\" id={chartId}>\n        <CardHeader className=\"flex-col items-start px-4 pb-0 pt-2\">\n          <p className=\"text-tiny font-bold uppercase\">{variables.join(',')}</p>\n          <small className=\"text-default-500\">{keplerDataset.label}</small>\n          <ChartInsightButton parentElementId={chartId} />\n        </CardHeader>\n        <CardBody className=\"w-full py-2\">\n          <ReactEChartsCore\n            echarts={echarts}\n            option={option}\n            notMerge={true}\n            lazyUpdate={true}\n            theme={theme}\n            onEvents={bindEvents}\n            style={{height: '200px', width: '100%'}}\n            ref={eChartsRef}\n            // onChartReady={() => {\n            //   setRendered(true);\n            // }}\n          />\n          {rendered && sourceId && sourceId !== id && (\n            <EChartsUpdater dataId={datasetId} eChartsRef={eChartsRef} seriesIndex={seriesIndex} />\n          )}\n        </CardBody>\n      </Card>\n    ),\n    [\n      chartId,\n      variables,\n      keplerDataset.label,\n      option,\n      theme,\n      bindEvents,\n      rendered,\n      sourceId,\n      id,\n      datasetId,\n      seriesIndex\n    ]\n  );\n};\n","export type BubbleChartDataProps = {\n  variableX: string;\n  variableY: string;\n  variableSize: string;\n  variableColor?: string;\n};\n\nexport type BubbleChartOptionProps = {\n  variableX: string;\n  variableY: string;\n  xData: number[];\n  yData: number[];\n  sizeData: number[];\n  colorData?: number[];\n};\n\nexport function getBubbleChartOption({\n  variableX,\n  variableY,\n  xData,\n  yData,\n  sizeData,\n  colorData\n}: BubbleChartOptionProps) {\n  // standardize sizeData in the range [0, 1]\n  const sizeDataMin = Math.min(...sizeData);\n  const sizeDataMax = Math.max(...sizeData);\n  const sizeDataRange = sizeDataMax - sizeDataMin;\n  const sizeDataStandardized = sizeData.map(d => (50 * (d - sizeDataMin)) / sizeDataRange);\n\n  const seriesData = xData.map((x, i) => [\n    x,\n    yData[i],\n    sizeDataStandardized[i],\n    colorData?.[i] || 0\n  ]);\n\n  const option = {\n    xAxis: {\n      type: 'value'\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [\n      {\n        data: seriesData,\n        type: 'scatter',\n        symbolSize: function (data: any) {\n          return data[2]; // the third element in the data array for size adjustments\n        },\n        itemStyle: {\n          color: function (data: any) {\n            return data[3] || 'lightblue'; // fourth element for color\n          },\n          borderColor: '#555',\n          opacity: 0.5\n        },\n        emphasis: {\n          focus: 'series',\n          itemStyle: {\n            borderColor: 'red'\n          }\n        },\n        animationDelay: 0\n      }\n    ],\n    tooltip: {\n      trigger: 'item',\n      formatter: function (params: any) {\n        const idx = params.dataIndex;\n        // format number to 2 decimal places\n        const sizeValue = sizeDataStandardized[idx].toFixed(2);\n        return (\n          `${variableX}: ${params.value[0]}<br/>${variableY}: ${params.value[1]}<br/>Size: ${sizeValue}` +\n          (params.value[3] ? `<br/>Color: ${params.value[3]}` : '')\n        );\n      },\n      axisPointer: {\n        type: 'cross'\n      }\n    },\n    brush: {\n      toolbox: ['rect', 'polygon', 'clear'],\n      xAxisIndex: 0,\n      yAxisIndex: 0\n    },\n    grid: {\n      left: '3%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    animation: false,\n    progressive: 0\n  };\n\n  return option;\n}\n","import React, {useRef, useMemo, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getBubbleChartOption} from '@/utils/bubblechart-utils';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\nimport {ScatterChart} from 'echarts/charts';\nimport * as echarts from 'echarts/core';\nimport {\n  TooltipComponent,\n  GridComponent,\n  BrushComponent,\n  ToolboxComponent\n} from 'echarts/components';\nimport {CanvasRenderer} from 'echarts/renderers';\nimport {GeoDaState} from '@/store';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport {Card, CardHeader, CardBody} from '@nextui-org/react';\nimport {BubbleChartStateProps} from '@/reducers/plot-reducer';\nimport {getColumnDataFromKeplerDataset} from '@/utils/data-utils';\nimport {EChartsUpdater, onBrushSelected} from './echarts-updater';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {ChartInsightButton} from '../common/chart-insight';\nimport {ECHARTS_DARK_THEME} from './echarts-theme';\n\n// Register the required ECharts components\necharts.use([\n  TooltipComponent,\n  GridComponent,\n  ScatterChart,\n  CanvasRenderer,\n  BrushComponent,\n  ToolboxComponent\n]);\necharts.registerTheme('dark', ECHARTS_DARK_THEME);\n\nexport const BubbleChart = ({props}: {props: BubbleChartStateProps}) => {\n  const {id, datasetId, variableX, variableY, variableSize, variableColor} = props;\n\n  const dispatch = useDispatch();\n  const eChartsRef = useRef<ReactEChartsCore>(null);\n  // flag to check if the chart is rendered\n  const [rendered, setRendered] = useState(false);\n\n  // use selector to get theme\n  const theme = useSelector((state: GeoDaState) => state.root.uiState.theme);\n  // use selector to get source id\n  const sourceId = useSelector((state: GeoDaState) => state.root.interaction?.sourceId);\n  // use selector to get keplerDataset\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  // get chart option by calling getChartOption only once\n  const option = useMemo(() => {\n    const xData = getColumnDataFromKeplerDataset(variableX, keplerDataset);\n    const yData = getColumnDataFromKeplerDataset(variableY, keplerDataset);\n    const sizeData = getColumnDataFromKeplerDataset(variableSize, keplerDataset);\n    const colorData = variableColor\n      ? getColumnDataFromKeplerDataset(variableColor, keplerDataset)\n      : undefined;\n\n    return getBubbleChartOption({\n      variableX,\n      variableY,\n      xData,\n      yData,\n      sizeData,\n      colorData\n    });\n  }, [keplerDataset, variableColor, variableSize, variableX, variableY]);\n\n  const bindEvents = useMemo(\n    () => ({\n      brushSelected: function (params: any) {\n        onBrushSelected(params, dispatch, datasetId, id, eChartsRef.current?.getEchartsInstance());\n      }\n    }),\n    [dispatch, datasetId, id]\n  );\n\n  const title = `${variableX} vs ${variableY} by ${variableSize}`;\n\n  // generate a unique id for the chart\n  const chartId = `bubble-chart-${id}`;\n\n  return useMemo(\n    () => (\n      <AutoSizer>\n        {({height, width}) => (\n          <div style={{height, width}}>\n            <Card className=\"h-full w-full\" shadow=\"none\" id={chartId}>\n              <CardHeader className=\"flex-col items-start px-4 pb-0 pt-2\">\n                <p className=\"text-tiny font-bold uppercase\">{title}</p>\n                <small className=\"text-default-500\">{keplerDataset.label}</small>\n                <ChartInsightButton parentElementId={chartId} />\n              </CardHeader>\n              <CardBody className=\"py-2\">\n                <ReactEChartsCore\n                  echarts={echarts}\n                  option={option}\n                  notMerge={true}\n                  lazyUpdate={false}\n                  theme={theme}\n                  onEvents={bindEvents}\n                  style={{height: '100%', width: '100%'}}\n                  ref={eChartsRef}\n                  onChartReady={() => {\n                    setRendered(true);\n                  }}\n                />\n                {rendered && sourceId && sourceId !== id && (\n                  <EChartsUpdater dataId={datasetId} eChartsRef={eChartsRef} />\n                )}\n              </CardBody>\n            </Card>\n          </div>\n        )}\n      </AutoSizer>\n    ),\n    [\n      chartId,\n      title,\n      keplerDataset.label,\n      option,\n      theme,\n      bindEvents,\n      rendered,\n      sourceId,\n      id,\n      datasetId\n    ]\n  );\n};\n","import {Dispatch, RefObject, useEffect} from 'react';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\nimport {useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {geodaBrushLink} from '@/actions';\nimport {EChartsType} from 'echarts';\nimport {selectKeplerDataset} from '@/store/selectors';\n\ntype EChartsUpdaterProps = {\n  dataId: string;\n  eChartsRef: RefObject<ReactEChartsCore>;\n  seriesIndex?: number | number[];\n};\n\n// Update the chart when the filteredIndexes change by other components\nexport const EChartsUpdater = ({dataId, eChartsRef, seriesIndex}: EChartsUpdaterProps) => {\n  const filteredIndexes = useSelector(\n    (state: GeoDaState) => state.root.interaction?.brushLink?.[dataId]\n  );\n\n  // get dataset from store\n  const dataset = useSelector(selectKeplerDataset(dataId));\n  const numberOfRows = dataset?.length || 0;\n\n  // when filteredIndexTrigger changes, update the chart option using setOption\n  useEffect(() => {\n    if (eChartsRef.current && filteredIndexes) {\n      const chart = eChartsRef.current;\n      const chartInstance = chart?.getEchartsInstance();\n      chartInstance?.dispatchAction({type: 'downplay'});\n      if (filteredIndexes.length < numberOfRows) {\n        // chartInstance.dispatchAction({type: 'brush', command: 'clear', areas: []});\n        chartInstance?.dispatchAction({\n          type: 'highlight',\n          dataIndex: filteredIndexes,\n          ...(seriesIndex ? {seriesIndex} : {})\n        });\n        // const updatedOption = getChartOption(filteredIndexes, props);\n        // chartInstance.setOption(updatedOption, true);\n      }\n    }\n  }, [eChartsRef, filteredIndexes, numberOfRows, seriesIndex]);\n\n  return null;\n};\n\nexport function onBrushSelected(\n  params: any,\n  dispatch: Dispatch<any>,\n  dataId: string,\n  id: string,\n  eChart?: EChartsType\n) {\n  if (!id || !params.batch || params.batch.length === 0) {\n    return;\n  }\n\n  const brushed = [];\n  const brushComponent = params.batch[0];\n  for (let sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\n    const rawIndices = brushComponent.selected[sIdx].dataIndex;\n    // merge rawIndices to brushed\n    brushed.push(...rawIndices);\n  }\n\n  // check if brushed.length is 0 after 100ms, since brushSelected may return empty array for some reason?!\n  setTimeout(() => {\n    if (eChart && brushed.length === 0) {\n      // clear any highlighted if no data is brushed\n      eChart.dispatchAction({type: 'downplay'});\n    }\n  }, 100);\n\n  // Dispatch action to highlight selected in other components\n  dispatch(geodaBrushLink({sourceId: id, dataId, filteredIndex: brushed}));\n}\n","import AutoSizer from 'react-virtualized-auto-sizer';\nimport {Card, CardHeader, CardBody} from '@nextui-org/react';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\n// Import the echarts core module, which provides the necessary interfaces for using echarts.\nimport * as echarts from 'echarts/core';\n// Import charts, all with Chart suffix\nimport {\n  // LineChart,\n  BarChart\n  // PieChart,\n  // ScatterChart,\n  // RadarChart,\n  // MapChart,\n  // TreeChart,\n  // TreemapChart,\n  // GraphChart,\n  // GaugeChart,\n  // FunnelChart,\n  // ParallelChart,\n  // SankeyChart,\n  // BoxplotChart,\n  // CandlestickChart,\n  // EffectScatterChart,\n  // LinesChart,\n  // HeatmapChart,\n  // PictorialBarChart,\n  // ThemeRiverChart,\n  // SunburstChart,\n  // CustomChart,\n} from 'echarts/charts';\n// import components, all suffixed with Component\nimport {\n  // GridSimpleComponent,\n  GridComponent,\n  // PolarComponent,\n  // RadarComponent,\n  // GeoComponent,\n  // SingleAxisComponent,\n  // ParallelComponent,\n  // CalendarComponent,\n  // GraphicComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  // AxisPointerComponent,\n  BrushComponent,\n  TitleComponent\n  // TimelineComponent,\n  // MarkPointComponent,\n  // MarkLineComponent,\n  // MarkAreaComponent,\n  // LegendComponent,\n  // LegendScrollComponent,\n  // LegendPlainComponent,\n  // DataZoomComponent,\n  // DataZoomInsideComponent,\n  // DataZoomSliderComponent,\n  // VisualMapComponent,\n  // VisualMapContinuousComponent,\n  // VisualMapPiecewiseComponent,\n  // AriaComponent,\n  // TransformComponent,\n  // DatasetComponent\n} from 'echarts/components';\n// Import renderer, note that introducing the CanvasRenderer or SVGRenderer is a required step\nimport {\n  CanvasRenderer\n  // SVGRenderer,\n} from 'echarts/renderers';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {GeoDaState} from '@/store';\nimport {RefObject, useEffect, useMemo, useRef, useState} from 'react';\nimport {getHistogramChartOption, HistogramDataProps} from '@/utils/plots/histogram-utils';\nimport {geodaBrushLink} from '@/actions';\nimport {getColumnDataFromKeplerDataset} from '@/utils/data-utils';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {ChartInsightButton} from '../common/chart-insight';\nimport {HistogramPlotStateProps} from '@/reducers/plot-reducer';\n\n// Register the required components\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  ToolboxComponent,\n  BrushComponent,\n  GridComponent,\n  BarChart,\n  CanvasRenderer\n]);\n\ntype ChartsUpdaterProps = {\n  dataId: string;\n  eChartsRef: RefObject<ReactEChartsCore>;\n  histogramData: HistogramDataProps[];\n  barDataIndexes: number[][];\n  getChartOption: typeof getHistogramChartOption;\n};\n\nconst ChartsUpdater = ({\n  dataId,\n  eChartsRef,\n  histogramData,\n  barDataIndexes,\n  getChartOption\n}: ChartsUpdaterProps) => {\n  const filteredIndexes = useSelector(\n    (state: GeoDaState) => state.root.interaction?.brushLink?.[dataId]\n  );\n\n  // get dataset from store\n  const dataset = useSelector(selectKeplerDataset(dataId));\n  const numberOfRows = dataset?.length || 0;\n\n  // when filteredIndexTrigger changes, update the chart option using setOption\n  useEffect(() => {\n    if (eChartsRef.current && filteredIndexes) {\n      const updatedOption = getHistogramChartOption(filteredIndexes, histogramData, barDataIndexes);\n      const chart = eChartsRef.current;\n      if (chart && filteredIndexes.length < numberOfRows) {\n        const chartInstance = chart.getEchartsInstance();\n        chartInstance.setOption(updatedOption, true);\n      }\n    }\n  }, [barDataIndexes, eChartsRef, filteredIndexes, getChartOption, histogramData, numberOfRows]);\n\n  return null;\n};\n\n/**\n * The react component of a histogram plot using Nivo bar chart\n */\nexport const HistogramPlot = ({props}: {props: HistogramPlotStateProps}) => {\n  const dispatch = useDispatch();\n  const eChartsRef = useRef<ReactEChartsCore>(null);\n\n  const [rendered, setRendered] = useState(false);\n\n  const {id, datasetId, variable, data: histogramData} = props;\n\n  // use selector to get theme\n  const theme = useSelector((state: GeoDaState) => state.root.uiState.theme);\n  // use selector to get source id\n  const sourceId = useSelector((state: GeoDaState) => state.root.interaction?.sourceId);\n  // use selector to get keplerDataset\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  // get data from variable\n  const rawData = useMemo(\n    () => getColumnDataFromKeplerDataset(variable, keplerDataset),\n    [keplerDataset, variable]\n  );\n\n  // get indexes of data items for each bar\n  const barDataIndexes = useMemo(\n    () =>\n      histogramData.map((d: HistogramDataProps) => {\n        const indexes = [];\n        for (let i = 0; i < rawData.length; i++) {\n          const value = rawData[i];\n          if (value >= d.binStart && value < d.binEnd) {\n            indexes.push(i);\n          }\n        }\n        return indexes;\n      }),\n    [histogramData, rawData]\n  );\n\n  // get chart option by calling getChartOption only once\n  const option = useMemo(() => {\n    return getHistogramChartOption(null, histogramData, barDataIndexes);\n  }, [histogramData, barDataIndexes]);\n\n  // bind events for brush selection in eCharts Histogram\n  const bindEvents = useMemo(() => {\n    return {\n      brushSelected: function (params: any) {\n        const brushed = [];\n        const brushComponent = params.batch[0];\n\n        for (let sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\n          const rawIndices = brushComponent.selected[sIdx].dataIndex;\n          // merge rawIndices to brushed\n          brushed.push(...rawIndices);\n        }\n\n        // get selected ids from brushed bars\n        const filteredIndex =\n          brushed.length > 0 ? brushed.map((idx: number) => barDataIndexes[idx]).flat() : [];\n\n        // check if this plot is in state.plots\n        if (brushed.length === 0) {\n          // reset options\n          const chart = eChartsRef.current;\n          if (chart) {\n            const chartInstance = chart.getEchartsInstance();\n            const updatedOption = getHistogramChartOption(null, histogramData, barDataIndexes);\n            chartInstance.setOption(updatedOption);\n          }\n        }\n        // Dispatch action to highlight selected in other components\n        dispatch(geodaBrushLink({sourceId: id, dataId: datasetId, filteredIndex}));\n      }\n    };\n  }, [barDataIndexes, datasetId, dispatch, histogramData, id]);\n\n  // generate a unique id for the chart\n  const chartId = `histogram-${id}`;\n\n  return useMemo(\n    () => (\n      <AutoSizer>\n        {({height, width}) => (\n          <div style={{height, width}}>\n            <Card className=\"h-full w-full\" shadow=\"none\" id={chartId}>\n              <CardHeader className=\"flex-col items-start px-4 pb-0 pt-2\">\n                <p className=\"text-tiny font-bold uppercase\">{variable}</p>\n                <small className=\"truncate text-default-500\">{keplerDataset.label}</small>\n                <ChartInsightButton parentElementId={chartId} />\n              </CardHeader>\n              <CardBody className=\"py-2\">\n                <ReactEChartsCore\n                  echarts={echarts}\n                  option={option}\n                  notMerge={true}\n                  lazyUpdate={true}\n                  theme={theme}\n                  onEvents={bindEvents}\n                  style={{height: '100%', width: '100%'}}\n                  ref={eChartsRef}\n                  onChartReady={() => {\n                    setRendered(true);\n                  }}\n                />\n                {rendered && sourceId && sourceId !== id && (\n                  <ChartsUpdater\n                    dataId={datasetId}\n                    eChartsRef={eChartsRef}\n                    histogramData={histogramData}\n                    barDataIndexes={barDataIndexes}\n                    getChartOption={getHistogramChartOption}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </div>\n        )}\n      </AutoSizer>\n    ),\n    [\n      barDataIndexes,\n      bindEvents,\n      chartId,\n      datasetId,\n      histogramData,\n      id,\n      keplerDataset.label,\n      option,\n      rendered,\n      sourceId,\n      theme,\n      variable\n    ]\n  );\n};\n","import {ParallelCoordinateActionProps} from '@/actions';\nimport {EChartsOption} from 'echarts';\nimport {numericFormatter} from './format-utils';\n\nexport type CreateParallelCoordinateProps = {\n  data: {[key: string]: number[]};\n};\n\nexport function getPCPChartOption(props: ParallelCoordinateActionProps, rawDataArray?: number[][]) {\n  const variableNames = props.variables;\n  // get the longest length of variableNames\n  const maxLabelLength = Math.max(...variableNames.map(variable => variable.length));\n  // assume each character is 12px\n  const maxLabelPixel = maxLabelLength * 12;\n\n  const axis = variableNames.map((variable, index) => ({dim: index, name: variable}));\n  let dataCols: number[][] = [];\n  if (rawDataArray) {\n    const transposedData = rawDataArray[0].map((_, colIndex) =>\n      rawDataArray.map(row => row[colIndex])\n    );\n    dataCols = transposedData;\n  }\n\n  // build option for echarts\n  const option: EChartsOption = {\n    parallel: {\n      left: '5%',\n      right: `${maxLabelPixel}px`,\n      top: '23%',\n      bottom: '15%',\n      layout: 'vertical',\n      parallelAxisDefault: {\n        axisLabel: {\n          formatter: numericFormatter\n        }\n      }\n    },\n    brush: {\n      toolbox: ['rect', 'keep', 'clear'],\n      brushLink: 'all',\n      inBrush: {\n        color: '#0096C7',\n        opacity: 0.8\n      },\n      outOfBrush: {\n        opacity: 0.5\n      }\n    },\n    parallelAxis: axis,\n    series: {\n      type: 'parallel',\n      lineStyle: {\n        width: 0.5,\n        opacity: 0.8,\n        color: 'lightblue'\n      },\n      data: dataCols,\n      // highlight\n      emphasis: {\n        focus: 'series',\n        lineStyle: {\n          color: 'red',\n          opacity: 0.5\n        }\n      }\n    },\n    grid: [\n      {\n        left: '3%',\n        right: '5%',\n        top: '20%',\n        bottom: '0%',\n        containLabel: true,\n        height: 'auto'\n      }\n    ],\n    // avoid flickering when brushing\n    progressive: 0\n  };\n  return option;\n}\n","import {useMemo, useRef, useState} from 'react';\nimport {Card, CardHeader, CardBody} from '@nextui-org/react';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\nimport * as echarts from 'echarts/core';\nimport {CanvasRenderer} from 'echarts/renderers';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {ParallelChart} from 'echarts/charts';\nimport {GeoDaState} from '@/store';\nimport {getColumnDataFromKeplerDataset} from '@/utils/data-utils';\nimport {getPCPChartOption} from '@/utils/plots/parallel-coordinate-utils';\nimport {EChartsUpdater} from './echarts-updater';\nimport {geodaBrushLink} from '@/actions';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {ChartInsightButton} from '../common/chart-insight';\nimport {ParallelCoordinateStateProps} from '@/reducers/plot-reducer';\n\n// Register the required components\necharts.use([CanvasRenderer, ParallelChart]);\n\n/**\n * The react component of a parallel-coordinate using eCharts\n */\nexport const ParallelCoordinatePlot = ({props}: {props: ParallelCoordinateStateProps}) => {\n  const {id, datasetId, variables} = props;\n  const dispatch = useDispatch();\n  const eChartsRef = useRef<ReactEChartsCore>(null);\n  const [rendered, setRendered] = useState(false);\n\n  // use selector to get theme\n  const theme = useSelector((state: GeoDaState) => state.root.uiState.theme);\n  // use selector to get source id\n  const sourceId = useSelector((state: GeoDaState) => state.root.interaction?.sourceId);\n  // use selector to get keplerDataset\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  // get raw data from props.variable\n  const rawDataArray = useMemo(() => {\n    const data = variables.map(variable => getColumnDataFromKeplerDataset(variable, keplerDataset));\n    return data;\n  }, [variables, keplerDataset]);\n\n  // get chart option by calling getChartOption only once\n  const option = useMemo(() => {\n    return getPCPChartOption(props, rawDataArray);\n  }, [props, rawDataArray]);\n\n  const bindEvents = useMemo(\n    () => ({\n      rendered: function () {\n        setRendered(true);\n      },\n      axisareaselected: function (params: any) {\n        console.log('axisareaselected', params);\n        if (eChartsRef.current) {\n          const chartInstance = eChartsRef.current.getEchartsInstance();\n          // @ts-ignore todo: will fix later\n          const series = chartInstance.getModel().getSeries()[0];\n          const brushed = series.getRawIndicesByActiveState('active');\n\n          // clear any highlighted if no data is brushed\n          if (chartInstance && brushed.length === 0) {\n            chartInstance.dispatchAction({type: 'downplay'});\n          }\n          // Dispatch action to highlight selected in other components\n          dispatch(geodaBrushLink({sourceId: id, dataId: datasetId, filteredIndex: brushed}));\n        }\n      }\n    }),\n    [datasetId, dispatch, id]\n  );\n\n  // dynamically increase height with set max\n  const DEFAULT_PCP_HEIGHT = 175;\n  const PCP_HEIGHT_PER_VARIABLE = 25;\n  const height =\n    DEFAULT_PCP_HEIGHT + Math.min(props.variables.length - 2, 3) * PCP_HEIGHT_PER_VARIABLE;\n\n  // generate a unique id for the chart\n  const chartId = `parallel-coordinate-${props.id}`;\n\n  return useMemo(\n    () => (\n      <Card className=\"my-4\" shadow=\"none\">\n        <CardHeader className=\"flex-col items-start px-4 pb-0 pt-2\" id={chartId}>\n          <p className=\"text-tiny font-bold uppercase\">{props.variables.join(',')}</p>\n          <small className=\"text-default-500\">{keplerDataset.label}</small>\n          <ChartInsightButton parentElementId={chartId} />\n        </CardHeader>\n        <CardBody className=\"w-full py-2\">\n          <ReactEChartsCore\n            echarts={echarts}\n            option={option}\n            notMerge={true}\n            lazyUpdate={true}\n            theme={theme}\n            style={{height: height + 'px', width: '100%'}}\n            onEvents={bindEvents}\n            ref={eChartsRef}\n          />\n          {rendered && sourceId && sourceId !== props.id && (\n            <EChartsUpdater dataId={datasetId} eChartsRef={eChartsRef} />\n          )}\n        </CardBody>\n      </Card>\n    ),\n    [\n      chartId,\n      props.variables,\n      props.id,\n      keplerDataset.label,\n      option,\n      theme,\n      height,\n      bindEvents,\n      rendered,\n      sourceId,\n      datasetId\n    ]\n  );\n};\n","import {useSelector} from 'react-redux';\nimport {Tab, Tabs} from '@nextui-org/react';\n\nimport {BoxPlot} from './box-plot';\nimport {HistogramPlot} from './histogram-plot';\nimport {BubbleChart} from './bubble-chart-plot';\nimport {Scatterplot} from './scatter-plot';\nimport {\n  HistogramPlotStateProps,\n  BoxPlotStateProps,\n  ParallelCoordinateStateProps,\n  PlotStateProps,\n  ScatterPlotStateProps,\n  BubbleChartStateProps\n} from '@/reducers/plot-reducer';\nimport {GeoDaState} from '@/store';\nimport {ParallelCoordinatePlot} from './parallel-coordinate-plot';\n\n// type guard function to check if the plot is a histogram plot\nexport function isHistogramPlot(plot: PlotStateProps): plot is HistogramPlotStateProps {\n  return plot.type === 'histogram';\n}\n\n// type guard function to check if the plot is a boxplot\nexport function isBoxPlot(plot: PlotStateProps): plot is BoxPlotStateProps {\n  return plot.type === 'boxplot';\n}\n\n// type guard function to check if the plot is a boxplot\nexport function isParallelCoordinate(plot: PlotStateProps): plot is ParallelCoordinateStateProps {\n  return plot.type === 'parallel-coordinate';\n}\n\n// type guard function to check if the plot is a scatter plot\nexport function isScatterPlot(plot: PlotStateProps): plot is ScatterPlotStateProps {\n  return plot.type === 'scatter';\n}\n\n// type guard function to check if the plot is a bubble chart\nexport function isBubbleChart(plot: PlotStateProps): plot is BubbleChartStateProps {\n  return plot.type === 'bubble';\n}\n\n// PlotWrapper component with fixed height\nexport function PlotWrapper(plot: PlotStateProps, isFixedHeight = true) {\n  return (\n    <div className={isFixedHeight ? 'h-[280px] w-full p-1' : 'h-full w-full'}>\n      {isHistogramPlot(plot) ? (\n        <HistogramPlot key={plot.id} props={plot} />\n      ) : isBoxPlot(plot) ? (\n        <BoxPlot key={plot.id} props={plot} />\n      ) : isParallelCoordinate(plot) ? (\n        <ParallelCoordinatePlot key={plot.id} props={plot} />\n      ) : isBubbleChart(plot) ? (\n        <BubbleChart key={plot.id} props={plot} />\n      ) : isScatterPlot(plot) ? (\n        <Scatterplot key={plot.id} props={plot} />\n      ) : null}\n    </div>\n  );\n}\n\nconst PlotsWrapper = ({plots, plotType}: {plots: PlotStateProps[]; plotType?: string}) => {\n  const filteredPlots = plotType ? plots.filter(plot => plot.type === plotType) : plots;\n  return (\n    <div className=\"flow flow-col space-y-2\">\n      {filteredPlots.toReversed().map(plot => PlotWrapper(plot))}\n    </div>\n  );\n};\n\nexport const PlotManagementPanel = () => {\n  // use selector to get plots\n  const plots = useSelector((state: GeoDaState) => state.root.plots);\n\n  return (\n    <div className=\"flex flex-col overflow-y-scroll\" style={{width: 'calc(100%)'}}>\n      <Tabs aria-label=\"Options\" color=\"primary\" variant=\"solid\" size=\"md\" fullWidth={true}>\n        <Tab key=\"all\" title=\"All\">\n          <PlotsWrapper plots={plots} />\n        </Tab>\n        <Tab key=\"histogram\" title=\"Histogram\">\n          <PlotsWrapper plots={plots} plotType=\"histogram\" />\n        </Tab>\n        <Tab key=\"scatter\" title=\"Scatter Plot\">\n          <PlotsWrapper plots={plots} plotType=\"scatter\" />\n        </Tab>\n        <Tab key=\"bubble\" title=\"Bubble Chart\">\n          <PlotsWrapper plots={plots} plotType=\"bubble\" />\n        </Tab>\n        <Tab key=\"boxplot\" title=\"Box plot\">\n          <PlotsWrapper plots={plots} plotType=\"boxplot\" />\n        </Tab>\n        <Tab key=\"parallel-coordinate\" title=\"Parallel Coordinate\">\n          <PlotsWrapper plots={plots} plotType=\"parallel-coordinate\" />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n","import {numericFormatter} from './format-utils';\n\nexport type ScatPlotDataProps = {\n  variableX: string;\n  variableY: string;\n};\n\nexport function getScatterChartOption(\n  xVariableName: string,\n  xData: number[],\n  yVariableName: string,\n  yData: number[]\n) {\n  const seriesData = xData.map((x, i) => [x, yData[i]]);\n\n  const option = {\n    xAxis: {\n      type: 'value',\n      axisLabel: {\n        formatter: numericFormatter\n      }\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: {show: false},\n      axisLabel: {\n        formatter: numericFormatter\n      }\n    },\n    series: [\n      {\n        data: seriesData,\n        type: 'scatter',\n        symbolSize: 6,\n        itemStyle: {\n          color: 'lightblue',\n          borderColor: '#555',\n          opacity: 0.8,\n          borderWidth: 1\n        },\n        // highlight\n        emphasis: {\n          // focus: 'series',\n          symbolSize: 6,\n          itemStyle: {\n            color: 'red',\n            borderWidth: 1\n          }\n        },\n        animationDelay: 0\n      }\n    ],\n    tooltip: {\n      trigger: 'item',\n      formatter: function (params: any) {\n        return `${xVariableName}: ${params.value[0]}<br/>${yVariableName}: ${params.value[1]}`;\n      },\n      axisPointer: {\n        type: 'cross'\n      }\n    },\n    brush: {\n      toolbox: ['rect', 'polygon', 'clear'],\n      xAxisIndex: 0,\n      yAxisIndex: 0\n    },\n    grid: {\n      left: '3%',\n      right: '5%',\n      bottom: '3%',\n      containLabel: true\n    },\n    // avoid flickering when brushing\n    animation: false,\n    progressive: 0\n  };\n\n  return option;\n}\n","import React, {useRef, useMemo, useState} from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n//import {ScatterplotDataItemProps, ScatPlotDataProps} from '@/utils/scatterplot-utils';\nimport {ScatterChart} from 'echarts/charts';\nimport * as echarts from 'echarts/core';\n//import { transform } from 'echarts-stat';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GeoDaState} from '@/store';\nimport {\n  TooltipComponent,\n  GridComponent,\n  BrushComponent,\n  ToolboxComponent\n  //DataZoomComponent\n} from 'echarts/components';\nimport ReactEChartsCore from 'echarts-for-react/lib/core';\nimport {Card, CardHeader, CardBody} from '@nextui-org/react';\nimport {CanvasRenderer} from 'echarts/renderers';\nimport {getScatterChartOption} from '@/utils/plots/scatterplot-utils';\nimport {EChartsUpdater, onBrushSelected} from './echarts-updater';\nimport {getColumnDataFromKeplerDataset} from '@/utils/data-utils';\nimport {selectKeplerDataset} from '@/store/selectors';\nimport {ChartInsightButton} from '../common/chart-insight';\nimport {ScatterPlotStateProps} from '@/reducers/plot-reducer';\n\n// Register the required ECharts components\necharts.use([\n  TooltipComponent,\n  GridComponent,\n  ScatterChart,\n  CanvasRenderer,\n  BrushComponent,\n  ToolboxComponent\n  //DataZoomComponent\n]);\n//echarts.registerTransform(transform.regression);\n\nexport const Scatterplot = ({props}: {props: ScatterPlotStateProps}) => {\n  const dispatch = useDispatch();\n  const eChartsRef = useRef<ReactEChartsCore>(null);\n  const [rendered, setRendered] = useState(false);\n\n  const {id, datasetId, variableX, variableY} = props;\n\n  // use selector to get theme and table name\n  const theme = useSelector((state: GeoDaState) => state.root.uiState.theme);\n  // use selector to get sourceId of interaction\n  const sourceId = useSelector((state: GeoDaState) => state.root.interaction?.sourceId);\n  // use selector to get keplerDataset\n  const keplerDataset = useSelector(selectKeplerDataset(datasetId));\n\n  // get chart option by calling getChartOption only once\n  const option = useMemo(() => {\n    const xData = getColumnDataFromKeplerDataset(variableX, keplerDataset);\n    const yData = getColumnDataFromKeplerDataset(variableY, keplerDataset);\n\n    return getScatterChartOption(variableX, xData, variableY, yData);\n  }, [keplerDataset, variableX, variableY]);\n\n  const bindEvents = useMemo(\n    () => ({\n      brushSelected: function (params: any) {\n        onBrushSelected(params, dispatch, datasetId, id, eChartsRef.current?.getEchartsInstance());\n      }\n    }),\n    [dispatch, datasetId, id]\n  );\n\n  const title = `X: ${variableX} vs Y: ${variableY}`;\n\n  // generate a unique id for the chart\n  const chartId = `scatterplot-${id}`;\n\n  return useMemo(\n    () => (\n      <AutoSizer>\n        {({height, width}) => (\n          <div style={{height, width}}>\n            <Card className=\"h-full w-full\" shadow=\"none\" id={chartId}>\n              <CardHeader className=\"flex-col items-start px-4 pb-0 pt-2\">\n                <p className=\"text-tiny font-bold uppercase\">{title}</p>\n                <small className=\"text-default-500\">{keplerDataset.label}</small>\n                <ChartInsightButton parentElementId={chartId} />\n              </CardHeader>\n              <CardBody className=\"py-2\">\n                <ReactEChartsCore\n                  echarts={echarts}\n                  option={option}\n                  notMerge={true}\n                  lazyUpdate={false}\n                  theme={theme}\n                  onEvents={bindEvents}\n                  style={{height: '100%', width: '100%'}}\n                  ref={eChartsRef}\n                  onChartReady={() => {\n                    setRendered(true);\n                  }}\n                />\n                {rendered && sourceId && sourceId !== id && (\n                  <EChartsUpdater dataId={datasetId} eChartsRef={eChartsRef} />\n                )}\n              </CardBody>\n            </Card>\n          </div>\n        )}\n      </AutoSizer>\n    ),\n    [\n      chartId,\n      title,\n      keplerDataset.label,\n      option,\n      theme,\n      bindEvents,\n      rendered,\n      sourceId,\n      id,\n      datasetId\n    ]\n  );\n};\n","import React, {useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Table as ArrowTable, Field as ArrowField} from 'apache-arrow';\n// @ts-ignore\nimport {DATA_TYPES as AnalyzerDATA_TYPES} from 'type-analyzer';\nimport {\n  appInjector,\n  DatasetTabs,\n  DataTableFactory,\n  makeGetActionCreators,\n  renderedSize\n} from '@kepler.gl/components';\nimport {ProcessorResult, Field} from '@kepler.gl/types';\nimport {arrowDataTypeToFieldType, arrowDataTypeToAnalyzerDataType} from '@kepler.gl/utils';\nimport {ALL_FIELD_TYPES} from '@kepler.gl/constants';\n\nimport {GeoDaState} from '../../store';\nimport {useTheme} from 'styled-components';\nimport {\n  defaultDatasetIdSelector,\n  keplerDatasetsSelector,\n  selectKeplerDataset\n} from '@/store/selectors';\nimport {wrapTo} from '@kepler.gl/actions';\nimport {MAP_ID} from '@/constants';\nimport {setDefaultDatasetId} from '@/actions';\n\nexport const MIN_STATS_CELL_SIZE = 122;\n\n// get DataTableModal component from appInjector\nconst DataTable = appInjector.get(DataTableFactory);\n\nexport function processArrowTable(arrowTable: ArrowTable): ProcessorResult | null {\n  const fields: Field[] = [];\n\n  // parse fields\n  arrowTable.schema.fields.forEach((field: ArrowField, index: number) => {\n    const isGeometryColumn = field.metadata.get('ARROW:extension:name')?.startsWith('geoarrow');\n    fields.push({\n      name: field.name,\n      id: field.name,\n      displayName: field.name,\n      format: '',\n      fieldIdx: index,\n      type: isGeometryColumn ? ALL_FIELD_TYPES.geoarrow : arrowDataTypeToFieldType(field.type),\n      analyzerType: isGeometryColumn\n        ? AnalyzerDATA_TYPES.GEOMETRY\n        : arrowDataTypeToAnalyzerDataType(field.type),\n      valueAccessor: (dc: any) => (d: {index: any}) => {\n        return dc.valueAt(d.index, index);\n      },\n      metadata: field.metadata\n    });\n  });\n\n  const cols = [...Array(arrowTable.numCols).keys()].map(i => arrowTable.getChildAt(i));\n  // return empty rows and use raw arrow table to construct column-wise data container\n  return {fields, rows: [], cols, metadata: arrowTable.schema.metadata};\n}\n\nexport function DuckDBTableComponent() {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const defaultDatasetId = useSelector(defaultDatasetIdSelector);\n\n  // get Kepler state from redux store\n  const keplerDatasets = useSelector(keplerDatasetsSelector);\n  const keplerDataset = useSelector(selectKeplerDataset(defaultDatasetId));\n\n  const {fields, dataContainer, pinnedColumns, label: tableName, id: dataId} = keplerDataset;\n\n  // get filteredIndex from redux\n  const filteredIndex = useSelector(\n    (state: GeoDaState) => state.root.interaction?.brushLink?.[dataId]\n  );\n\n  const filteredIndexDict = useMemo(() => {\n    const dict: {[key: number]: boolean} = {};\n    filteredIndex?.forEach((i: number) => {\n      dict[i] = true;\n    });\n    return dict;\n  }, [filteredIndex]);\n\n  const columns = useMemo(() => fields.map((f: Field) => f.name), [fields]);\n\n  const colMeta = useMemo(\n    () =>\n      fields.reduce(\n        (acc: Object, {name, displayName, type, filterProps, format, displayFormat}: Field) => ({\n          ...acc,\n          [name]: {\n            name: displayName || name,\n            type,\n            ...(format ? {format} : {}),\n            ...(displayFormat ? {displayFormat} : {}),\n            ...(filterProps?.columnStats ? {columnStats: filterProps.columnStats} : {})\n          }\n        }),\n        {}\n      ),\n    [fields]\n  );\n\n  const cellSizeCache = useMemo(\n    () =>\n      fields.reduce(\n        (acc: Object, field: Field, colIdx: number) => ({\n          ...acc,\n          [field.name]: renderedSize({\n            text: {\n              dataContainer,\n              column: field.displayName\n            },\n            colIdx,\n            type: field.type,\n            fontSize: theme.cellFontSize,\n            font: theme.fontFamily,\n            minCellSize: MIN_STATS_CELL_SIZE\n          })\n        }),\n        {}\n      ),\n    [fields, dataContainer, theme.cellFontSize, theme.fontFamily]\n  );\n\n  // get action creators from kepler.gl\n  // const {visStateActions} = useMemo(() => keplerActionSelector(dispatch, {}), [dispatch]);\n  // get kepler actions\n  const dispatchKepler = (action: any) => dispatch(wrapTo(MAP_ID, action));\n  const keplerActionSelector = makeGetActionCreators();\n  const keplerOwnProps = {};\n  const {visStateActions} = keplerActionSelector(dispatchKepler, keplerOwnProps);\n\n  const onShowDatasetTable = useCallback(\n    (datasetId: string) => {\n      dispatch(setDefaultDatasetId(datasetId));\n    },\n    [dispatch]\n  );\n\n  return useMemo(\n    () => (\n      <div\n        className=\"item-center flex w-full flex-col bg-white\"\n        style={{height: '100%', minWidth: '50vw', padding: '0px'}}\n      >\n        <DatasetTabs\n          activeDataset={keplerDataset}\n          datasets={keplerDatasets}\n          showDatasetTable={onShowDatasetTable}\n        />\n        <DataTable\n          key={tableName}\n          dataId={tableName}\n          columns={columns}\n          colMeta={colMeta}\n          cellSizeCache={cellSizeCache}\n          dataContainer={dataContainer}\n          filteredIndex={filteredIndexDict}\n          pinnedColumns={pinnedColumns}\n          sortColumn={{}}\n          sortTableColumn={visStateActions.sortTableColumn}\n          pinTableColumn={visStateActions.pinTableColumn}\n          copyTableColumn={visStateActions.copyTableColumn}\n          setColumnDisplayFormat={visStateActions.setColumnDisplayFormat}\n          theme={theme}\n        />\n      </div>\n    ),\n    [\n      cellSizeCache,\n      colMeta,\n      columns,\n      dataContainer,\n      filteredIndexDict,\n      keplerDataset,\n      keplerDatasets,\n      onShowDatasetTable,\n      pinnedColumns,\n      tableName,\n      theme,\n      visStateActions.copyTableColumn,\n      visStateActions.pinTableColumn,\n      visStateActions.setColumnDisplayFormat,\n      visStateActions.sortTableColumn\n    ]\n  );\n}\n\nexport default DuckDBTableComponent;\n","import {appInjector, DataTableFactory, renderedSize} from '@kepler.gl/components';\nimport {Field} from '@kepler.gl/types';\nimport {useTheme} from 'styled-components';\nimport {MIN_STATS_CELL_SIZE} from './duckdb-table';\nimport KeplerTable from '@kepler.gl/table';\nimport {useMemo} from 'react';\nimport {fieldTypeToAnalyzerType} from '@/utils/table-utils';\n\n// get DataTableModal component from appInjector\nconst DataTable = appInjector.get(DataTableFactory);\n\nexport function PreviewDataTable({\n  fieldName,\n  fieldType,\n  columnData,\n  numberOfRows\n}: {\n  fieldName: string;\n  fieldType: string;\n  columnData: unknown | unknown[];\n  numberOfRows: number;\n}) {\n  const dataId = 'preview-data';\n  const theme = useTheme();\n\n  const analyzerType = fieldTypeToAnalyzerType(fieldType);\n\n  const rows = useMemo(() => {\n    const data: any[][] = [];\n    // convert columnData to rows\n    if (Array.isArray(columnData) && columnData.length > 0) {\n      columnData.forEach(val => {\n        data.push([val]);\n      });\n    } else {\n      for (let i = 0; i < numberOfRows; ++i) {\n        data.push([Array.isArray(columnData) ? null : columnData]);\n      }\n    }\n    return data;\n  }, [columnData, numberOfRows]);\n\n  const fields: Field[] = useMemo(\n    () => [\n      {\n        name: fieldName,\n        type: fieldType,\n        format: '',\n        displayName: fieldName,\n        fieldIdx: 0,\n        analyzerType,\n        valueAccessor: (d: any) => d[0]\n      }\n    ],\n    [fieldName, fieldType, analyzerType]\n  );\n\n  const columns = useMemo(() => fields.map((f: Field) => f.name), [fields]);\n\n  const dataContainer = useMemo(() => {\n    const data = {fields, rows};\n    // create a data container with a single column\n    const keplerTable = new KeplerTable({info: {id: dataId}, data, color: [0, 0, 0]});\n    const dataContainer = keplerTable.dataContainer;\n    return dataContainer;\n  }, [fields, rows]);\n\n  const colMeta = useMemo(\n    () =>\n      fields.reduce(\n        (acc: Object, {name, displayName, type, filterProps, format, displayFormat}: Field) => ({\n          ...acc,\n          [name]: {\n            name: displayName || name,\n            type,\n            ...(format ? {format} : {}),\n            ...(displayFormat ? {displayFormat} : {}),\n            ...(filterProps?.columnStats ? {columnStats: filterProps.columnStats} : {})\n          }\n        }),\n        {}\n      ),\n    [fields]\n  );\n\n  const cellSizeCache = useMemo(\n    () =>\n      fields.reduce(\n        (acc: Object, field: Field, colIdx: number) => ({\n          ...acc,\n          [field.name]: renderedSize({\n            text: {\n              dataContainer,\n              column: field.displayName\n            },\n            colIdx,\n            type: field.type,\n            fontSize: theme.cellFontSize,\n            font: theme.fontFamily,\n            minCellSize: MIN_STATS_CELL_SIZE\n          })\n        }),\n        {}\n      ),\n    [fields, dataContainer, theme.cellFontSize, theme.fontFamily]\n  );\n\n  return (\n    <div className=\"item-center flex h-80 w-full flex-col  bg-white dark:bg-black\">\n      <DataTable\n        key={dataId}\n        dataId={dataId}\n        columns={columns}\n        colMeta={colMeta}\n        cellSizeCache={cellSizeCache}\n        dataContainer={dataContainer}\n        // filteredIndex={filteredIndexDict}\n        // pinnedColumns={pinnedColumns}\n        sortColumn={{}}\n        // sortTableColumn={visStateActions.sortTableColumn}\n        // pinTableColumn={visStateActions.pinTableColumn}\n        // copyTableColumn={visStateActions.copyTableColumn}\n        // setColumnDisplayFormat={visStateActions.setColumnDisplayFormat}\n        theme={theme}\n      />\n    </div>\n  );\n}\n","import React, {useMemo, useState} from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableColumn,\n  TableBody,\n  TableRow,\n  TableCell,\n  getKeyValue,\n  Card,\n  CardBody,\n  Select,\n  SelectItem\n} from '@nextui-org/react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {WeightsMeta} from 'geoda-wasm';\nimport {WarningBox, WarningType} from '../common/warning-box';\nimport {setPropertyPanel} from '@/actions';\nimport {PanelName} from '../panel/panel-container';\nimport {selectWeightsByDataId} from '@/store/selectors';\n\n// weightsMeta: mapping its key to descriptive label\nconst WeightsMetaLables: Record<string, string> = {\n  id: 'ID',\n  name: 'Name',\n  type: 'Type',\n  symmetry: 'Symmetry',\n  numberOfObservations: '# Observations',\n  k: 'Neigbhors',\n  order: 'Order',\n  incLowerOrder: 'Include Lower Order',\n  threshold: 'Threshold',\n  distanceMetric: 'Distance Metric',\n  minNeighbors: 'Min Neighbors',\n  maxNeighbors: 'Max Neighbors',\n  meanNeighbors: 'Mean Neighbors',\n  medianNeighbors: 'Median Neighbors',\n  pctNoneZero: '% Non-Zero'\n};\n\nexport function WeightsMetaTable({weightsMeta}: {weightsMeta: WeightsMeta}): React.ReactElement {\n  const rows = useMemo(() => {\n    const rows = Object.keys(WeightsMetaLables)\n      .filter(key => key in weightsMeta)\n      .map((key, i) => {\n        const value = weightsMeta[key];\n        // if value is a number, format it to string with 3 decimal places\n        let valueString = `${value}`;\n        if (typeof value === 'number') {\n          if (Number.isInteger(value)) {\n            valueString = `${value}`;\n          } else {\n            valueString = `${value.toFixed(4)}`;\n          }\n        }\n        return {\n          key: `${i}`,\n          property: WeightsMetaLables[key],\n          value: valueString\n        };\n      });\n    return rows;\n  }, [weightsMeta]);\n\n  return (\n    <Table aria-label=\"Weights Property Table\" color=\"success\" selectionMode=\"single\">\n      <TableHeader>\n        <TableColumn key=\"property\" className=\"bg-lime-600 text-white\">\n          Property\n        </TableColumn>\n        <TableColumn key=\"value\" className=\"bg-lime-600 text-white\">\n          Value\n        </TableColumn>\n      </TableHeader>\n      <TableBody emptyContent={'No rows to display.'} items={rows}>\n        {item => (\n          <TableRow key={item.key}>\n            {columnKey => <TableCell>{getKeyValue(item, columnKey)}</TableCell>}\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n\nexport type WeightsSelectorProps = {\n  weights: {weightsMeta: WeightsMeta}[];\n  weightsId?: string;\n  onSelectWeights: (value: any) => void;\n  label?: string;\n  showWarningBox?: boolean;\n};\n\nexport function WeightsSelector({\n  weights,\n  weightsId,\n  onSelectWeights,\n  label,\n  showWarningBox = true\n}: WeightsSelectorProps) {\n  const dispatch = useDispatch();\n  const [selectedWeight, setSelectedWeight] = useState(weightsId);\n\n  // handle select weights\n  const onSelectionChange = (value: any) => {\n    const selectValue = value.currentKey;\n    setSelectedWeight(selectValue);\n    onSelectWeights(selectValue);\n  };\n\n  // handle warning box click\n  const onWarningBoxClick = () => {\n    // dispatch action to open weights panel\n    dispatch(setPropertyPanel(PanelName.WEIGHTS));\n  };\n\n  return weights.length > 0 ? (\n    <Select\n      label={label || 'Select Spatial Weights'}\n      className=\"max-w mb-6\"\n      onSelectionChange={onSelectionChange}\n      selectedKeys={[selectedWeight ?? weights[weights.length - 1].weightsMeta.id ?? '']}\n    >\n      {weights.map(({weightsMeta}, i) => (\n        <SelectItem key={weightsMeta.id ?? i} value={weightsMeta.id}>\n          {weightsMeta.id}\n        </SelectItem>\n      ))}\n    </Select>\n  ) : (\n    showWarningBox && (\n      <WarningBox\n        message={'No Spatial Weights'}\n        type={WarningType.WARNING}\n        onClick={onWarningBoxClick}\n      />\n    )\n  );\n}\n\n/**\n * WeightsManagementComponent\n * @component\n * @description Component for managing spatial weights\n */\nexport function WeightsManagementComponent({datasetId}: {datasetId: string}): React.ReactElement {\n  const [selectedWeight, setSelectedWeight] = useState<string | null>(null);\n\n  const weights = useSelector(selectWeightsByDataId(datasetId));\n\n  // create rows from weightsMeta using useMemo\n  const weightsMeta = useMemo(() => {\n    if (weights && weights.length > 0) {\n      // find weights using selectedWeight\n      const {weightsMeta} =\n        weights.find(({weightsMeta}) => weightsMeta.id === selectedWeight) ??\n        weights[weights.length - 1];\n\n      return weightsMeta;\n    }\n    return null;\n  }, [selectedWeight, weights]);\n\n  // handle select weights\n  const onSelectWeights = (value: any) => {\n    const selectValue = value.currentKey;\n    setSelectedWeight(selectValue);\n  };\n\n  return (\n    <Card>\n      <CardBody>\n        {weights?.length > 0 ? (\n          <>\n            <WeightsSelector weights={weights} onSelectWeights={onSelectWeights} />\n            {weightsMeta && <WeightsMetaTable weightsMeta={weightsMeta} />}\n          </>\n        ) : (\n          <p className=\"text-small\">No Spatial Weights</p>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n"],"names":["COMMON_UNITS","twMerge","extendTailwindMerge","extend","theme","opacity","spacing","borderWidth","borderRadius","classGroups","shadow","text","cn","_len","arguments","length","inputs","_key","clsx","ECHARTS_DARK_THEME","color","backgroundColor","textStyle","title","subtextStyle","line","itemStyle","lineStyle","width","symbolSize","symbol","smooth","radar","bar","barBorderWidth","barBorderColor","pie","borderColor","scatter","boxplot","parallel","sankey","funnel","gauge","candlestick","color0","borderColor0","graph","label","map","areaColor","emphasis","geo","categoryAxis","axisLine","show","axisTick","axisLabel","splitLine","splitArea","areaStyle","valueAxis","logAxis","timeAxis","toolbox","iconStyle","legend","tooltip","axisPointer","crossStyle","timeline","controlStyle","checkpointStyle","visualMap","dataZoom","dataBackgroundColor","fillerColor","handleColor","handleSize","markPoint","STATE","isFeature","json","type","BlobFile","close","stat","size","handle","bigsize","BigInt","isDirectory","read","start","slice","arrayBuffer","constructor","blob","ArrayBuffer","Blob","byteLength","url","File","name","BrowserFileSystem","fetch","path","options","includes","_fetch","file","files","Response","status","statusText","range","headers","Headers","get","bytes","exec","parseInt","end","data","response","Object","defineProperty","value","readdir","dirname","push","unlink","lowerCaseFiles","usedFiles","openReadableFile","pathname","flags","_getFile","used","i","toLowerCase","bind","BinaryChunkReader","write","arrayBuffers","ended","hasAvailableBytes","bytesAvailable","offset","findBufferOffsets","selectedBuffers","buf","Math","abs","getDataView","bufferOffsets","bufferIndex","view","DataView","disposeBuffers","_combineArrayBuffers","maxRewindBytes","shift","bufferOffset","result","Uint8Array","resultOffset","sourceArray","set","subarray","buffer","skip","rewind","parseSHPHeader","headerView","header","magic","getInt32","version","bbox","minX","getFloat64","minY","minZ","minM","maxX","maxY","maxZ","maxM","parsePoint","dim","positions","parsePositions","parseMultiPoint","Float64Array","BYTES_PER_ELEMENT","nPoints","Int32Array","xyPositions","mPositions","zPositions","concatPositions","parsePoly","nParts","byteOffset","bufferLength","ringIndices","pathIndices","polygonIndices","startRingIndex","endRingIndex","sign","getSignedArea","area","nCoords","primitivePolygonIndices","Uint32Array","arrayLength","nDim","EXPECTING_HEADER","EXPECTING_RECORD","END","ERROR","SHPParser","binaryReader","state","parseState","error","geometries","progress","bytesTotal","NaN","bytesUsed","rows","currentIndex","parseSHP","shpParser","parseSHPInBatches","asyncIterator","parser","headerReturned","dataView","recordHeaderView","recordHeader","recordNumber","SHP_RECORD_HEADER_SIZE","recordView","geometry","parseRecord","_maxDimensions","shp","min","concat","message","SHP_MAGIC_NUMBER","SHPLoader","id","module","__VERSION__","worker","category","extensions","mimeTypes","tests","parse","parseSync","parseInBatches","arrayBufferIterator","zipBatchIterators","iterator1","iterator2","shape","batch1Data","batch2Data","iterator1Done","iterator2Done","done","next","batchData","extractBatchData","batch1","batch2","batchLength","batch","splice","batchType","DBFParser","textDecoder","TextDecoder","encoding","parseDBF","dbf","dbfParser","schema","parseDBFInBatches","dbfHeader","year","getUint8","month","day","nRecords","getUint32","headerLength","getUint16","recordLength","languageDriver","rowsTotal","fieldDescriptorView","dbfFields","parseFieldDescriptors","nFields","fields","decode","replace","dataType","String","fromCharCode","fieldLength","decimal","makeField","param","nullable","metadata","dbfField","row","parseRow","out","field","parseField","parseNumber","number","parseFloat","isNaN","trim","Date","UTC","str","test","DBFLoader","parseShapefileInBatches","context","shapeIterable","propertyIterable","reproject","_targetCrs","gis","shx","cpg","prj","loadShapefileSidecarFiles","parseInBatchesFromContext","shapeIterator","Symbol","iterator","propertyIterator","dbfResponse","replaceExtension","ok","shapeHeader","zippedIterator","properties","features","joinProperties","parseGeometries","reprojectFeatures","parseShapefile","propertyTable","parseFromContext","geojsonGeometries","shapefile","geom","binaryToGeometry","feature","sourceCrs","targetCrs","projection","Proj4Projection","from","to","transformGeoJsonCoords","fn","coordinates","coordMap","array","isArray","Number","isFinite","item","project","coord","shxPromise","cpgPromise","prjPromise","Promise","all","shxResponse","parseShx","contentLength","contentView","offsets","lengths","cpgResponse","prjResponse","newExtension","baseName","basename","extIndex","lastIndexOf","substr","extension","extname","toUpperCase","ShapefileLoader","flattenPoint","indices","coordLength","flattenLineString","c","flattenPolygon","areas","count","ringAreas","polygons","lineString","lineString2d","p","getPolygonSignedArea","flat","ccw","fixRingWinding","reverse","geojsonToBinary","triangulate","geometryInfo","extractGeometryInfo","pointPositionsCount","pointFeaturesCount","linePositionsCount","linePathsCount","lineFeaturesCount","polygonPositionsCount","polygonObjectsCount","polygonRingsCount","polygonFeaturesCount","coordLengths","Set","add","point","flattened","polygon","max","flatFeatures","geojsonToFlatGeojson","flattenFeature","flatGeojsonToBinary","numericPropKeys","PositionDataType","Float32Array","GeoJSONLoader","geojson","jsonpaths","format","parseTextSync","geojsonIterator","parseJSONInBatches","makeBinaryGeometryIterator","JSON","e","table","CSV_LOADER_OPTIONS","dynamicTyping","ARROW_LOADER_OPTIONS","JSON_LOADER_OPTIONS","SHAPEFILE_LOADER_OPTIONS","loadArrowFile","loaders","ArrowLoader","batchIterator","arrow","progressIterator","makeProgressIterator","batches","readBatch","content","fileName","parsedData","processFileData","fileCache","arrowTable","ArrowTable","dataId","info","arrowFormatData","loadDroppedFile","CSVLoader","droppedFilesFS","shpFile","find","endsWith","loadOptions","csv","MAX_SAFE_INTEGER","readFileInBatches","isArrowData","datasets","convertFileCacheItemToArrowTable","fileCacheItem","columnValues","j","vectors","arrowField","arrowVector","KeplerFieldTypeToArrowFieldType","values","ALL_FIELD_TYPES","real","ArrowField","ArrowFloat","makeVector","integer","ArrowInteger","boolean","ArrowBool","ArrowList","vectorFromArray","geojsonFeaturesToArrow","geometryType","geojsonPointToArrow","points","dimension","firstPoint","coordType","pointType","FixedSizeList","metaData","Map","builder","makeBuilder","nullValues","coords","append","finish","toVector","geojsonMultiPointToArrow","multiPointType","geojsonLineStringToArrow","lines","firstLine","lineType","geojsonMultiLineStringToArrow","multiLineType","geojsonPolygonToArrow","firstPolygon","ringType","polygonType","poly","geojsonMultiPolygonToArrow","multiPolygonType","ArrowString","utf8Builder","ArrowSchema","cols","Array","numCols","keys","getChildAt","DATASET_FORMATS","generateHashIdFromString","arrayBufferToBase64","binary","len","btoa","base64ToArrayBuffer","base64","binary_string","atob","charCodeAt","downloadStringToFile","contentType","a","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","loadGeoDaProject","geodaFile","geodaFileData","dataset","arrowTableBuffer","Buffer","arrowFile","getDataFormat","suffix","split","pop","toLocaleLowerCase","geodaConfig","loadGeoDaConfig","weights","savedWeights","valuesString","w","offsetsString","neighbors","neighborIds","datasetId","weightsMeta","isNew","updatedTextItems","dashboard","textItems","stringify","ai","uiState","plots","regressions","keplerConfig","saveGeoDaConfig","root","flatValues","reduce","accu","showSaveProjectModal","getArrowTableAsBase64","bufferArray","tableToIPC","PromptInput","React","ref","classNames","props","jsx_runtime","jsx","Textarea","aria-label","className","input","minRows","placeholder","radius","variant","displayName","VoiceChatButton","onRecordingComplete","shouldSave","setShouldSave","useState","isRecording","recordingBlob","startRecording","stopRecording","useAudioRecorder","noiseSuppression","echoCancellation","err","console","onTalkClicked","useEffect","Button","startContent","Icon","icon","endContent","jsxs","svg","fill","viewBox","xmlns","circle","cx","cy","r","strokeWidth","stroke","d","onClick","Component","onSendMessage","onVoiceMessage","onScreenshotClick","onRemoveScreenshot","enableAttachFile","screenCaptured","defaultPromptText","prompt","setPrompt","onSendClick","isShiftPressed","setIsShiftPressed","onClickIdea","textContent","currentTarget","voiceBlob","div","ScrollShadow","hideScrollBar","orientation","ideas","description","index","form","Badge","isOneChar","isIconOnly","onPress","img","src","inputWrapper","innerWrapper","Tooltip","showArrow","isDisabled","onValueChange","onKeyDown","event","shiftKey","key","preventDefault","onKeyUp","CustomLocalMoranMessage","functionOutput","functionArgs","dispatch","useDispatch","lm","variableName","permutations","clusters","metaDataOfClusters","layerOrder","useSelector","keplerGl","MAP_ID","visState","keplerDataset","selectKeplerDataset","updateLayer","useMemo","uniqueValues","newFieldName","fieldsLength","newField","analyzerType","fieldIdx","valueAccessor","dataContainer","valueAt","addTableColumn","hexColors","cluster","legendLabels","newLayer","createUniqueValuesMap","mappingType","colorFieldName","addLayer","otherLayers","filter","reorderLayer","hide","setHide","Fragment","KeplerMapContainer","layerId","mapIndex","CustomCreateButton","newOrder","CustomHistogramMessage","numberOfBins","histogram","histogramPlotProps","variable","plot","Boolean","HistogramPlot","addPlot","CustomScatterPlotMessage","variableX","variableY","scatterPlotProps","Scatterplot","CustomBubbleChartMessage","variableSize","variableColor","bubbleChartProps","BubbleChart","CustomBoxplotMessage","variables","boundIQR","boxPlotProps","BoxPlot","GreenCheckIcon","HeartIcon","CustomParallelCoordinateMessage","parallelCoordinateProps","ParallelCoordinatePlot","CustomSpregMessage","regResult","generateRandomId","addRegression","CustomMapMessage","classificationMethod","classificationValues","k","MappingTypes","UNIQUE_VALUES","layers","selectedColorRange","setSelectedColorRange","getDefaultColorRange","existingLayer","layer","config","newVisCconfig","visConfig","colorRange","colorMap","colors","colorLegend","layerVisConfigChange","v","toString","createCustomScaleMap","breaks","ColorSelector","numberOfColors","defaultColorRange","onSelectColorRange","CustomCreateVariableMessage","newColumn","columnType","datasetName","sql","generateSQLUpdateColumn","tableName","columnName","PreviewDataTable","fieldName","fieldType","columnData","numberOfRows","addColumnBySQL","addKeplerColumn","VALID_CUSTOM_MESSAGE_TYPES","CustomMessage","output","isCustomMapOutput","isCustomWeightsOutput","CustomWeightsMessage","isCustomLisaOutput","isCustomHistogramOutput","isCustomScatterPlotOutput","isCustomBubbleChartOutput","isCustomBoxPlotOutput","isCustomParallelCoordinateOutput","isCustomRegressionOutput","isCustomCreateVariableOutput","MessageCard","avatar","customMessage","showFeedback","attempts","currentAttempt","onMessageCopy","onAttemptChange","onFeedback","onAttemptFeedback","messageClassName","stopChat","feedback","setFeedback","attemptFeedback","setAttemptFeedback","messageRef","copied","copy","useClipboard","failedMessage","Link","target","hasFailed","handleCopy","stringValue","forEach","child","childString","children","valueToCopy","current","handleFeedback","liked","handleAttemptFeedback","handleStopChat","isInvisible","placement","Avatar","showFallback","Spinner","payload","undefined","functionName","button","createMessageFromCustomFunctionCall","CUSTOM_FUNCTIONS","funcName","sender","direction","position","NO_MAP_LOADED_MESSAGE","ChatGPTComponent","messages","isTyping","setIsTyping","isMessageDraggable","showGridView","sendMessage","speechToText","useChatGPT","customFunctions","customFunctionContext","textMessage","streamMessage","imageMessage","processMessage","customMessageCallback","streamMessageCallback","audioBlob","translateVoiceToText","initOpenAI","queryValuesBySQL","handleSend","useCallback","screenshotImage","newMessages","setMessages","setScreenCaptured","deltaMessage","isCompleted","localStorage","removeItem","element","getElementById","firstElementChild","scrollTop","scrollHeight","setDefaultPromptText","setStartScreenCapture","stopRunningChat","cancelOpenAI","reportQuestion","question","messageIndex","window","open","draggable","unselectable","onDragStart","dataTransfer","setData","PromptInputWithBottomActions","ChartInsightButton","parentElementId","getChartInsights","chartElement","screenshot","takeSnapshot","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","colorRanges","ALL_COLOR_RANGES","Select","items","renderValue","ColorPalette","isReversed","isSelected","selectedKeys","onSelectionChange","selectValue","currentKey","SelectItem","textValue","CreateButton","isRunning","isLoading","DatasetSelector","setDatasetId","updateDefaultDatasetId","datasetsSelector","Autocomplete","setDefaultDatasetId","selectedKey","isInvalid","AutocompleteItem","MapContainer","appInjector","MapContainerFactory","initialMapUiState","mapControls","uiStateUpdaters","active","activeSidePanel","readonly","mainTableNameSelector","keplerState","uiTheme","selectedTheme","themeLT","visStateActions","mapStateActions","uiStateActions","providerActions","mapStyleActions","keplerActionSelector","makeGetActionCreators","wrapTo","NO_MAP_ID","action","updatedLayers","startsWith","l","splitMaps","visibleLayers","s","connectedProps","getState","initialUiState","mapboxApiAccessToken","updateLayerConfig","isVisible","layerData","findIndex","mapState","isViewportSynced","isZoomLocked","providerState","mapStyle","styleType","bottomMapStyle","hexToRgb","mapFields","mapFieldsSelector","AutoSizer","defaultHeight","defaultWidth","height","bounds","findMapBounds","centerAndZoom","getCenterAndZoomFromBounds","newMapState","latitude","center","longitude","zoom","style","MapViewStateContextProvider","primary","containerId","RightPanelContainer","showAIHelp","askAIForHelp","configPanel","h4","Divider","Splitter","mode","initialSize","minimumSize","onSplitterChange","mousePosition","setMousePosition","divSize","setDivSize","dragging","setDragging","handleDragEnd","stopPropagation","top","left","onMouseDown","clientX","clientY","onMouseMove","currentPos","newDivSize","onMouseUp","onMouseOut","VARIABLE_TYPE","getFieldNames","variableType","getNumericFieldNamesFromDataset","getIntegerFieldNamesFromDataset","getStringFieldNamesFromDataset","getIntegerAndStringFieldNamesFromDataset","VariableSelector","defaultVariable","setVariable","columnNames","localVariable","setLocalVariable","indexOf","column","WarningType","WarningIcon","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","CheckIcon","polyline","ErrorIcon","WaitingIcon","WarningBox","visible","setVisible","dismissAfter","setTimeout","supportedBlockTypes","blockTypeToBlockName","code","h1","h2","h3","h5","ol","paragraph","quote","ul","positionEditorElement","editor","rect","pageYOffset","pageXOffset","offsetWidth","FloatingLinkEditor","editorRef","useRef","inputRef","mouseDownRef","linkUrl","setLinkUrl","isEditMode","setEditMode","lastSelection","setLastSelection","updateLinkEditor","selection","$getSelection","$isRangeSelection","node","getSelectedNode","parent","getParent","$isLinkNode","getURL","editorElem","nativeSelection","getSelection","activeElement","rootElement","getRootElement","isCollapsed","contains","anchorNode","domRange","getRangeAt","inner","getBoundingClientRect","mergeRegister","registerUpdateListener","editorState","registerCommand","SELECTION_CHANGE_COMMAND","getEditorState","focus","onChange","dispatchCommand","TOGGLE_LINK_COMMAND","rel","role","tabIndex","select","option","hidden","anchor","getNode","focusNode","isBackward","$isAtNodeEnd","BlockOptionsDropdownList","blockType","toolbarRef","setShowBlockOptionsDropDown","dropDownRef","toolbar","dropDown","addEventListener","removeEventListener","update","$wrapNodes","$createParagraphNode","span","$createHeadingNode","INSERT_UNORDERED_LIST_COMMAND","REMOVE_LIST_COMMAND","INSERT_ORDERED_LIST_COMMAND","$createQuoteNode","$createCodeNode","ToolbarPlugin","useLexicalComposerContext","canUndo","setCanUndo","canRedo","setCanRedo","setBlockType","selectedElementKey","setSelectedElementKey","showBlockOptionsDropDown","codeLanguage","setCodeLanguage","isRTL","setIsRTL","isLink","setIsLink","isBold","setIsBold","isItalic","setIsItalic","isUnderline","setIsUnderline","isStrikethrough","setIsStrikethrough","isCode","setIsCode","updateToolbar","getKey","getTopLevelElementOrThrow","elementKey","elementDOM","getElementByKey","$isListNode","parentList","$getNearestNodeOfType","ListNode","getTag","$isHeadingNode","getType","$isCodeNode","getLanguage","getDefaultCodeLanguage","hasFormat","$isParentElementRTL","_payload","newEditor","CAN_UNDO_COMMAND","CAN_REDO_COMMAND","codeLanguges","getCodeLanguages","onCodeLanguageSelect","$getNodeByKey","setLanguage","insertLink","disabled","UNDO_COMMAND","REDO_COMMAND","has","createPortal","body","FORMAT_TEXT_COMMAND","FORMAT_ELEMENT_COMMAND","editorConfig","namespace","nodes","HeadingNode","ListItemNode","QuoteNode","CodeNode","CodeHighlightNode","TableNode","TableCellNode","TableRowNode","AutoLinkNode","LinkNode","onError","ltr","rtl","heading","list","nested","listitem","image","link","bold","italic","overflowed","hashtag","underline","strikethrough","underlineStrikethrough","codeHighlight","atrule","attr","builtin","cdata","char","class","comment","constant","deleted","doctype","entity","function","important","inserted","keyword","operator","prolog","property","punctuation","regex","selector","string","tag","Placeholder","OnChangePlugin","listener","updateTextGridContent","newContent","TextCell","initialState","LexicalComposer","initialConfig","RichTextPlugin","contentEditable","ContentEditable","ErrorBoundary","LexicalErrorBoundary","HistoryPlugin","AutoFocusPlugin","ListPlugin","indent","GeoDaLogo","g","defs","x","y","filterUnits","colorInterpolationFilters","feFlood","floodOpacity","feColorMatrix","in","feOffset","dy","feGaussianBlur","stdDeviation","feComposite","in2","feBlend","IconSave","fillRule","clipRule","linearGradient","gradientUnits","stop","stopOpacity","IconBoxplot","IconBubbleChart","IconHistogram","IconLisa","clipPath","stopColor","transform","IconMap","IconOpen","IconParallel","IconScatterplot","IconTable","IconWeights","IconSpreg","IconSpatialJoin","rx","ry","SunIcon","aria-hidden","focusable","MoonIcon","ThemeSwitcher","mounted","setMounted","setTheme","useNextTheme","DashboardIcon","DashboardConfigIcon","clip-path","MapIcon","DashboardSwitcher","showPropertyPanel","propertyPanel","propertyPanelName","dashboardState","PanelName","DASHBOARD","onToggleGridCallback","setGridView","setPropertyPanel","setShowPropertyPanel","IconAddDataset","Navigator","showOpenModal","showOpenFileModal","showAddDatasetModal","isFileLoaded","showChatPanel","newWeightsCount","weight","newHistogramCount","newRegressionCount","reg","newScatterplotCount","newBubbleChartCount","newBoxplotCount","onOpenCallback","setOpenFileModal","onSaveCallback","setSaveProjectModal","onAddCallback","setAddDatasetModal","onTableCallback","TABLE","setKeplerTableModal","onClickIconCallback","WEIGHTS","MAPPING","setShowChatPanel","SETTINGS","LISA","HISTOGRAM","SCATTERPLOT","BUBBLE_CHART","BOXPLOT","SPREG","PARALLEL_COORDINATE","SPATIAL_JOIN","buttonClassName","DuckDBTable","dynamic","resolve","then","__webpack_require__","ssr","TableContainer","tableHeight","setTableHeight","DEFAULT_TABLE_HEIGHT","showTable","showKeplerTable","ARROW_TABLE_CONTENT_PLACEHOLDER","WEIGHTS_CONTENT_PLACEHOLDER","SaveProjectComponent","isValid","setIsValid","savedKeplerConfig","KeplerGLSchemaManager","getConfigToSave","savedGeoDaConfig","projectJson","projectPreview","setCode","Card","CardBody","MonacoEditor","language","minimap","enabled","onMount","getAction","run","onValidate","markers","CardFooter","toISOString","SaveProjectModal","showProjectModal","Modal","isOpen","onClose","isDismissable","ModalContent","ModalHeader","ModalBody","ModalFooter","ChatGPTPanel","ChatPanelContainer","panelWidth","setPanelWidth","DEFAULT_CHATPANEL_WIDTH","onCloseClick","OpenFileModal","GridLayout","MainContainerWithScreenCapture","projectUrl","startScreenCapture","startX","setStartX","startY","setStartY","crossHairsTop","setCrossHairsTop","crossHairsLeft","setCrossHairsLeft","isMouseDown","setIsMouseDown","windowWidth","setWindowWidth","windowHeight","setWindowHeight","setBorderWidth","cropPositionTop","setCropPositionTop","cropPositionLeft","setCropPositionLeft","cropWidth","setCropWidth","cropHeight","setCropHeight","handleWindowResize","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","handleClickTakeScreenShot","querySelector","scale","devicePixelRatio","html2canvas","canvas","croppedCanvas","croppedCanvasContext","getContext","drawImage","toDataURL","dataURL","cropTop","cropLeft","isStartTop","isStartBottom","isStartLeft","isStartRight","newBorderWidth","cropW","cropH","PanelContainer","AddDatasetModal","IconUpload","processDropFiles","isAddingDataset","OpenFileComponent","onCloseModal","importArrowFile","useDuckDB","loading","setLoading","setError","onDrop","acceptedFiles","initDuckDB","keplerDatasets","addDataset","addDataToMap","centerMap","getRootProps","getInputProps","useDropzone","FormattedMessage","defaultMessage","Progress","isIndeterminate","open_file_modal","hasDefaultDataset","Sentry","res","showModal","SettingsPanel","intl","useIntl","setIsVisible","formatMessage","onSubmit","Input","Checkbox","WeightsCreationComponent","keplerLayer","weightsType","setWeightsType","inputK","setInputK","contiguityType","setContiguityType","orderOfContiguity","setOrderContiguity","precisionThreshold","setPrecisionThreshold","includeLowerOrder","setIncludeLowerOrder","minSliderValue","setMinSliderValue","maxSliderValue","setMaxSliderValue","sliderValue","setSliderValue","binaryGeometryType","getBinaryGeometryTypeFromLayer","binaryGeometries","getBinaryGeometriesFromLayer","onWeightsSelectionChange","minDistance","maxDistance","maxPairDistance","getDistanceThresholds","isMile","onCreateWeights","createWeights","distanceThreshold","addWeights","Tabs","defaultSelectedKey","Tab","RadioGroup","defaultValue","Radio","labelPlacement","onInput","Slider","step","maxValue","minValue","formatOptions","unit","Spacer","WeightsPanel","defaultKeplerDataset","selectDefaultKeplerDataset","selectKeplerLayer","selectWeightsByDataId","validFieldNames","fieldNames","showWeightsManagement","setShowWeightsManagement","weightsLength","Chip","WeightsManagementComponent","WARNING","UnivariateLisaConfig","runAnalysis","defaultDatasetId","defaultDatasetIdSelector","setIsRunning","weightsId","setWeightsId","onCreateMap","selectedWeight","permValue","threshold","setPermValue","setSelectedPermKey","setThreshold","setSelectedThresholdKey","WeightsSelector","onSelectWeights","Accordion","itemClasses","accordionItemClasses","AccordionItem","defaultItems","allowsCustomValue","onInputChange","runLisa","lisaFunction","selectedWeightData","getColumnDataFromKeplerDataset","sigCutoff","permutation","significanceCutoff","pValues","lisaLabels","labels","lisaColors","runQuantileLisa","quantile","quantileLisa","runLisaAsync","layerLabel","addColumnWithValues","_l","LocalMoranPanel","localMoran","LocalGPanel","selectedTab","setSelectedTab","runLocalG","isGStar","localGStar","localG","tab","QuantileLisaPanel","kValue","setKValue","quantileValue","setQuantileValue","LocalGearyPanel","localGeary","LisaPanel","HistogramPanel","intervals","setIntervals","newPlotsCount","showPlotsManagement","setShowPlotsManagement","updatePlot","PlotManagementPanel","MultiVariableSelector","setVariables","excludeVariables","setSelectedKeys","numericColumns","Listbox","disallowEmptySelection","selectionMode","ListboxItem","BoxplotPanel","hingeValue","setHingeValue","ParallelCoordinatePanel","SpregPanel","showRegressionManagement","setShowRegressionManagement","yVariable","setYVariable","model","setModel","xVariables","setXVariables","onRunRegression","runRegressionAsync","updateRegression","defaultChecked","toReversed","RegressionReport","regression","ScatterplotPanel","setVariableX","setVariableY","BubbleChartPanel","setVariableSize","setVariableColor","isVariablesSelected","plotsLength","optional","DraggableElement","DashboardPanel","gridItems","layerIds","plotIds","showSettings","setShowSettings","getLayer","updateMode","defaultExpandedKeys","subtitle","addTextGridItem","PlotWrapper","textItem","WeightsMetaTable","m","animate","pathLength","initial","transition","delay","ease","duration","VerticalSteps","steps","defaultStep","onStepChange","currentStep","currentStepProp","hideProgressBars","stepClassName","setCurrentStep","useControlledState","userColor","fgColor","colorsVars","unshift","nav","stepIdx","li","aria-current","LazyMotion","domAnimation","data-status","variants","inactive","complete","SpatialCountPanel","spatialCountConfig","selectSpatialCountConfig","firstDatasetId","setFirstDatasetId","leftDatasetId","secondDatasetId","setSecondDatasetId","rightDatasetId","newColumnName","setNewColumnName","errorMessage","setErrorMessage","setStatus","resetRunningState","leftLayer","rightLayer","leftDataset","rightDataset","onSpatialCount","runSpatialCountAsync","leftTableName","getDatasetName","section","SUCCESS","SpatialAssignPanel","spatialAssignConfig","selectSpatialAssignConfig","secondVariable","setSecondVariable","rightColumnName","onSpatialAssign","runSpatialAssignAsync","IntegerOrString","SpatialJoinPanel","TablePanel","MappingPanel","DEFAULT_PANEL_WIDTH","echarts","TitleComponent","TooltipComponent","ToolboxComponent","BrushComponent","GridComponent","DataZoomComponent","DataZoomInsideComponent","BoxplotChart","ScatterChart","CanvasRenderer","boxPlotData","eChartsRef","rendered","setRendered","sourceId","interaction","seriesIndex","_","rawData","prev","cur","getBoxPlotChartOption","boxData","meanPoint","bindEvents","brushSelected","params","onBrushSelected","getEchartsInstance","chartId","CardHeader","join","small","ReactEChartsCore","notMerge","lazyUpdate","onEvents","EChartsUpdater","xData","yData","getBubbleChartOption","sizeData","colorData","sizeDataMin","sizeDataRange","sizeDataMax","sizeDataStandardized","xAxis","yAxis","series","animationDelay","trigger","formatter","sizeValue","dataIndex","toFixed","brush","xAxisIndex","yAxisIndex","grid","right","bottom","containLabel","animation","progressive","onChartReady","filteredIndexes","brushLink","chart","chartInstance","dispatchAction","eChart","brushed","brushComponent","sIdx","selected","rawIndices","geodaBrushLink","filteredIndex","BarChart","ChartsUpdater","histogramData","barDataIndexes","getChartOption","updatedOption","getHistogramChartOption","setOption","indexes","binStart","binEnd","idx","ParallelChart","rawDataArray","getPCPChartOption","variableNames","maxLabelLength","axis","dataCols","colIndex","transposedData","layout","parallelAxisDefault","numericFormatter","inBrush","outOfBrush","parallelAxis","axisareaselected","getModel","getSeries","getRawIndicesByActiveState","DEFAULT_PCP_HEIGHT","isFixedHeight","isHistogramPlot","isBoxPlot","isParallelCoordinate","isBubbleChart","isScatterPlot","PlotsWrapper","plotType","filteredPlots","fullWidth","getScatterChartOption","xVariableName","yVariableName","seriesData","MIN_STATS_CELL_SIZE","DataTable","DataTableFactory","processArrowTable","isGeometryColumn","geoarrow","arrowDataTypeToFieldType","AnalyzerDATA_TYPES","GEOMETRY","arrowDataTypeToAnalyzerDataType","dc","DuckDBTableComponent","useTheme","keplerDatasetsSelector","pinnedColumns","filteredIndexDict","dict","columns","f","colMeta","acc","filterProps","displayFormat","columnStats","cellSizeCache","colIdx","renderedSize","fontSize","cellFontSize","font","fontFamily","minCellSize","onShowDatasetTable","minWidth","padding","DatasetTabs","activeDataset","showDatasetTable","sortColumn","sortTableColumn","pinTableColumn","copyTableColumn","setColumnDisplayFormat","__webpack_exports__","fieldTypeToAnalyzerType","val","keplerTable","KeplerTable","WeightsMetaLables","symmetry","numberOfObservations","order","incLowerOrder","distanceMetric","minNeighbors","maxNeighbors","meanNeighbors","medianNeighbors","pctNoneZero","valueString","isInteger","Table","TableHeader","TableColumn","TableBody","emptyContent","TableRow","columnKey","TableCell","getKeyValue","showWarningBox","setSelectedWeight"],"sourceRoot":""}
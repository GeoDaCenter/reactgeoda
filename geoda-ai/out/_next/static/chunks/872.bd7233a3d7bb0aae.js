"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[872],{37770:function(e,t,s){e.exports=s.p+"static/media/duckdb-browser-eh.worker.8ad5de0d.js"},82471:function(e,t,s){e.exports=s.p+"static/media/duckdb-browser-mvp.worker.72ac7b78.js"},41762:function(e,t,s){e.exports=s.p+"static/media/duckdb-eh.e46bd00c.wasm"},37037:function(e,t,s){e.exports=s.p+"static/media/duckdb-mvp.6b0360a1.wasm"},79121:function(e,t,s){let n;s.d(t,{Dn:function(){return ea},ak:function(){return K},kw:function(){return b}});var r,a,i,o,E,l,_,R,T,c,u,S,I,h,p=s(20345),d=s(78392),N=s(36629),y=s(94987),O=Object.create,w=Object.defineProperty,F=Object.getOwnPropertyDescriptor,m=Object.getOwnPropertyNames,A=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty,L=(r=(e,t)=>{t.exports=Worker},()=>(a||r((a={exports:{}}).exports,a),a.exports)),D=((i=D||{})[i.UNDEFINED=0]="UNDEFINED",i[i.AUTOMATIC=1]="AUTOMATIC",i[i.READ_ONLY=2]="READ_ONLY",i[i.READ_WRITE=3]="READ_WRITE",i),C=((o=C||{})[o.IDENTIFIER=0]="IDENTIFIER",o[o.NUMERIC_CONSTANT=1]="NUMERIC_CONSTANT",o[o.STRING_CONSTANT=2]="STRING_CONSTANT",o[o.OPERATOR=3]="OPERATOR",o[o.KEYWORD=4]="KEYWORD",o[o.COMMENT=5]="COMMENT",o),U=((E=U||{})[E.NONE=0]="NONE",E[E.DEBUG=1]="DEBUG",E[E.INFO=2]="INFO",E[E.WARNING=3]="WARNING",E[E.ERROR=4]="ERROR",E),g=((l=g||{})[l.NONE=0]="NONE",l[l.CONNECT=1]="CONNECT",l[l.DISCONNECT=2]="DISCONNECT",l[l.OPEN=3]="OPEN",l[l.QUERY=4]="QUERY",l[l.INSTANTIATE=5]="INSTANTIATE",l),k=((_=k||{})[_.NONE=0]="NONE",_[_.OK=1]="OK",_[_.ERROR=2]="ERROR",_[_.START=3]="START",_[_.RUN=4]="RUN",_[_.CAPTURE=5]="CAPTURE",_),f=((R=f||{})[R.NONE=0]="NONE",R[R.WEB_WORKER=1]="WEB_WORKER",R[R.NODE_WORKER=2]="NODE_WORKER",R[R.BINDINGS=3]="BINDINGS",R[R.ASYNC_DUCKDB=4]="ASYNC_DUCKDB",R),b=class{constructor(e=2){this.level=e}log(e){e.level>=this.level&&console.log(e)}},v=((T=v||{})[T.SUCCESS=0]="SUCCESS",T),G=class{constructor(e,t){this._bindings=e,this._conn=t}get bindings(){return this._bindings}async close(){return this._bindings.disconnect(this._conn)}useUnsafe(e){return e(this._bindings,this._conn)}async query(e){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let t=await this._bindings.runQuery(this._conn,e),s=p.so.from(t);return console.assert(s.isSync(),"Reader is not sync"),console.assert(s.isFile(),"Reader is not file"),new d.iA(s)}async send(e){this._bindings.logger.log({timestamp:new Date,level:2,origin:4,topic:4,event:4,value:e});let t=await this._bindings.startPendingQuery(this._conn,e);for(;null==t;)t=await this._bindings.pollPendingQuery(this._conn);let s=new M(this._bindings,this._conn,t),n=await p.so.from(s);return console.assert(n.isAsync()),console.assert(n.isStream()),n}async cancelSent(){return await this._bindings.cancelPendingQuery(this._conn)}async getTableNames(e){return await this._bindings.getTableNames(this._conn,e)}async prepare(e){let t=await this._bindings.createPrepared(this._conn,e);return new Y(this._bindings,this._conn,t)}async insertArrowTable(e,t){let s=N.U(e,"stream");await this.insertArrowFromIPCStream(s,t)}async insertArrowFromIPCStream(e,t){await this._bindings.insertArrowFromIPCStream(this._conn,e,t)}async insertCSVFromPath(e,t){await this._bindings.insertCSVFromPath(this._conn,e,t)}async insertJSONFromPath(e,t){await this._bindings.insertJSONFromPath(this._conn,e,t)}},M=class{constructor(e,t,s){this.db=e,this.conn=t,this.header=s,this._first=!0,this._depleted=!1,this._inFlight=null}async next(){let e;return this._first?(this._first=!1,{done:!1,value:this.header}):this._depleted?{done:!0,value:null}:(null!=this._inFlight?(e=await this._inFlight,this._inFlight=null):e=await this.db.fetchQueryResults(this.conn),this._depleted=0==e.length,this._depleted||(this._inFlight=this.db.fetchQueryResults(this.conn)),{done:this._depleted,value:e})}[Symbol.asyncIterator](){return this}},Y=class{constructor(e,t,s){this.bindings=e,this.connectionId=t,this.statementId=s}async close(){await this.bindings.closePrepared(this.connectionId,this.statementId)}async query(...e){let t=await this.bindings.runPrepared(this.connectionId,this.statementId,e),s=p.so.from(t);return console.assert(s.isSync()),console.assert(s.isFile()),new d.iA(s)}async send(...e){let t=await this.bindings.sendPrepared(this.connectionId,this.statementId,e),s=new M(this.bindings,this.connectionId,t),n=await p.so.from(s);return console.assert(n.isAsync()),console.assert(n.isStream()),n}},q=((c=q||{}).CANCEL_PENDING_QUERY="CANCEL_PENDING_QUERY",c.CLOSE_PREPARED="CLOSE_PREPARED",c.COLLECT_FILE_STATISTICS="COLLECT_FILE_STATISTICS",c.CONNECT="CONNECT",c.COPY_FILE_TO_BUFFER="COPY_FILE_TO_BUFFER",c.COPY_FILE_TO_PATH="COPY_FILE_TO_PATH",c.CREATE_PREPARED="CREATE_PREPARED",c.DISCONNECT="DISCONNECT",c.DROP_FILE="DROP_FILE",c.DROP_FILES="DROP_FILES",c.EXPORT_FILE_STATISTICS="EXPORT_FILE_STATISTICS",c.FETCH_QUERY_RESULTS="FETCH_QUERY_RESULTS",c.FLUSH_FILES="FLUSH_FILES",c.GET_FEATURE_FLAGS="GET_FEATURE_FLAGS",c.GET_TABLE_NAMES="GET_TABLE_NAMES",c.GET_VERSION="GET_VERSION",c.GLOB_FILE_INFOS="GLOB_FILE_INFOS",c.INSERT_ARROW_FROM_IPC_STREAM="INSERT_ARROW_FROM_IPC_STREAM",c.INSERT_CSV_FROM_PATH="IMPORT_CSV_FROM_PATH",c.INSERT_JSON_FROM_PATH="IMPORT_JSON_FROM_PATH",c.INSTANTIATE="INSTANTIATE",c.OPEN="OPEN",c.PING="PING",c.POLL_PENDING_QUERY="POLL_PENDING_QUERY",c.REGISTER_FILE_BUFFER="REGISTER_FILE_BUFFER",c.REGISTER_FILE_HANDLE="REGISTER_FILE_HANDLE",c.REGISTER_FILE_URL="REGISTER_FILE_URL",c.RESET="RESET",c.RUN_PREPARED="RUN_PREPARED",c.RUN_QUERY="RUN_QUERY",c.SEND_PREPARED="SEND_PREPARED",c.START_PENDING_QUERY="START_PENDING_QUERY",c.TOKENIZE="TOKENIZE",c),B=((u=B||{}).CONNECTION_INFO="CONNECTION_INFO",u.ERROR="ERROR",u.FEATURE_FLAGS="FEATURE_FLAGS",u.FILE_BUFFER="FILE_BUFFER",u.FILE_INFOS="FILE_INFOS",u.FILE_SIZE="FILE_SIZE",u.FILE_STATISTICS="FILE_STATISTICS",u.INSTANTIATE_PROGRESS="INSTANTIATE_PROGRESS",u.LOG="LOG",u.OK="OK",u.PREPARED_STATEMENT_ID="PREPARED_STATEMENT_ID",u.QUERY_PLAN="QUERY_PLAN",u.QUERY_RESULT="QUERY_RESULT",u.QUERY_RESULT_CHUNK="QUERY_RESULT_CHUNK",u.QUERY_RESULT_HEADER="QUERY_RESULT_HEADER",u.QUERY_RESULT_HEADER_OR_NULL="QUERY_RESULT_HEADER_OR_NULL",u.REGISTERED_FILE="REGISTERED_FILE",u.SCRIPT_TOKENS="SCRIPT_TOKENS",u.SUCCESS="SUCCESS",u.TABLE_NAMES="TABLE_NAMES",u.VERSION_STRING="VERSION_STRING",u),Q=class{constructor(e,t){this.promiseResolver=()=>{},this.promiseRejecter=()=>{},this.type=e,this.data=t,this.promise=new Promise((e,t)=>{this.promiseResolver=e,this.promiseRejecter=t})}};function H(e,t){let s=function e(t){switch(t.typeId){case y.Dy.Binary:return{sqlType:"binary"};case y.Dy.Bool:return{sqlType:"bool"};case y.Dy.Date:return{sqlType:"date"};case y.Dy.DateDay:return{sqlType:"date32[d]"};case y.Dy.DateMillisecond:return{sqlType:"date64[ms]"};case y.Dy.Decimal:return{sqlType:"decimal",precision:t.precision,scale:t.scale};case y.Dy.Float:return{sqlType:"float"};case y.Dy.Float16:return{sqlType:"float16"};case y.Dy.Float32:return{sqlType:"float32"};case y.Dy.Float64:return{sqlType:"float64"};case y.Dy.Int:return{sqlType:"int32"};case y.Dy.Int16:return{sqlType:"int16"};case y.Dy.Int32:return{sqlType:"int32"};case y.Dy.Int64:return{sqlType:"int64"};case y.Dy.Uint16:return{sqlType:"uint16"};case y.Dy.Uint32:return{sqlType:"uint32"};case y.Dy.Uint64:return{sqlType:"uint64"};case y.Dy.Uint8:return{sqlType:"uint8"};case y.Dy.IntervalDayTime:return{sqlType:"interval[dt]"};case y.Dy.IntervalYearMonth:return{sqlType:"interval[m]"};case y.Dy.List:return{sqlType:"list",valueType:e(t.valueType)};case y.Dy.FixedSizeBinary:return{sqlType:"fixedsizebinary",byteWidth:t.byteWidth};case y.Dy.Null:return{sqlType:"null"};case y.Dy.Utf8:return{sqlType:"utf8"};case y.Dy.Struct:return{sqlType:"struct",fields:t.children.map(e=>H(e.name,e.type))};case y.Dy.Map:return{sqlType:"map",keyType:e(t.keyType),valueType:e(t.valueType)};case y.Dy.Time:return{sqlType:"time[s]"};case y.Dy.TimeMicrosecond:return{sqlType:"time[us]"};case y.Dy.TimeMillisecond:return{sqlType:"time[ms]"};case y.Dy.TimeNanosecond:return{sqlType:"time[ns]"};case y.Dy.TimeSecond:return{sqlType:"time[s]"};case y.Dy.Timestamp:return{sqlType:"timestamp",timezone:t.timezone||void 0};case y.Dy.TimestampSecond:return{sqlType:"timestamp[s]",timezone:t.timezone||void 0};case y.Dy.TimestampMicrosecond:return{sqlType:"timestamp[us]",timezone:t.timezone||void 0};case y.Dy.TimestampNanosecond:return{sqlType:"timestamp[ns]",timezone:t.timezone||void 0};case y.Dy.TimestampMillisecond:return{sqlType:"timestamp[ms]",timezone:t.timezone||void 0}}throw Error("unsupported arrow type: ".concat(t.toString()))}(t);return s.name=e,s}var W=new TextEncoder,K=class{constructor(e,t=null){this._onInstantiationProgress=[],this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{},this._nextMessageId=0,this._pendingRequests=new Map,this._logger=e,this._onMessageHandler=this.onMessage.bind(this),this._onErrorHandler=this.onError.bind(this),this._onCloseHandler=this.onClose.bind(this),null!=t&&this.attach(t)}get logger(){return this._logger}attach(e){this._worker=e,this._worker.addEventListener("message",this._onMessageHandler),this._worker.addEventListener("error",this._onErrorHandler),this._worker.addEventListener("close",this._onCloseHandler),this._workerShutdownPromise=new Promise((e,t)=>{this._workerShutdownResolver=e})}detach(){this._worker&&(this._worker.removeEventListener("message",this._onMessageHandler),this._worker.removeEventListener("error",this._onErrorHandler),this._worker.removeEventListener("close",this._onCloseHandler),this._worker=null,this._workerShutdownResolver(null),this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async terminate(){this._worker&&(this._worker.terminate(),this._worker=null,this._workerShutdownPromise=null,this._workerShutdownResolver=()=>{})}async postTask(e,t=[]){if(!this._worker){console.error("cannot send a message since the worker is not set!");return}let s=this._nextMessageId++;return this._pendingRequests.set(s,e),this._worker.postMessage({messageId:s,type:e.type,data:e.data},t),await e.promise}onMessage(e){var t;let s=e.data;switch(s.type){case"LOG":this._logger.log(s.data);return;case"INSTANTIATE_PROGRESS":for(let e of this._onInstantiationProgress)e(s.data);return}let n=this._pendingRequests.get(s.requestId);if(!n){console.warn("unassociated response: [".concat(s.requestId,", ").concat(s.type.toString(),"]"));return}if(this._pendingRequests.delete(s.requestId),"ERROR"==s.type){let e=Error(s.data.message);e.name=s.data.name,null!=(t=Object.getOwnPropertyDescriptor(e,"stack"))&&t.writable&&(e.stack=s.data.stack),n.promiseRejecter(e);return}switch(n.type){case"CLOSE_PREPARED":case"COLLECT_FILE_STATISTICS":case"COPY_FILE_TO_PATH":case"DISCONNECT":case"DROP_FILE":case"DROP_FILES":case"FLUSH_FILES":case"INSERT_ARROW_FROM_IPC_STREAM":case"IMPORT_CSV_FROM_PATH":case"IMPORT_JSON_FROM_PATH":case"OPEN":case"PING":case"REGISTER_FILE_BUFFER":case"REGISTER_FILE_HANDLE":case"REGISTER_FILE_URL":case"RESET":if("OK"==s.type){n.promiseResolver(s.data);return}break;case"INSTANTIATE":if(this._onInstantiationProgress=[],"OK"==s.type){n.promiseResolver(s.data);return}break;case"GLOB_FILE_INFOS":if("FILE_INFOS"==s.type){n.promiseResolver(s.data);return}break;case"GET_VERSION":if("VERSION_STRING"==s.type){n.promiseResolver(s.data);return}break;case"GET_FEATURE_FLAGS":if("FEATURE_FLAGS"==s.type){n.promiseResolver(s.data);return}break;case"GET_TABLE_NAMES":if("TABLE_NAMES"==s.type){n.promiseResolver(s.data);return}break;case"TOKENIZE":if("SCRIPT_TOKENS"==s.type){n.promiseResolver(s.data);return}break;case"COPY_FILE_TO_BUFFER":if("FILE_BUFFER"==s.type){n.promiseResolver(s.data);return}break;case"EXPORT_FILE_STATISTICS":if("FILE_STATISTICS"==s.type){n.promiseResolver(s.data);return}break;case"CONNECT":if("CONNECTION_INFO"==s.type){n.promiseResolver(s.data);return}break;case"RUN_PREPARED":case"RUN_QUERY":if("QUERY_RESULT"==s.type){n.promiseResolver(s.data);return}break;case"SEND_PREPARED":if("QUERY_RESULT_HEADER"==s.type){n.promiseResolver(s.data);return}break;case"START_PENDING_QUERY":case"POLL_PENDING_QUERY":if("QUERY_RESULT_HEADER_OR_NULL"==s.type){n.promiseResolver(s.data);return}break;case"CANCEL_PENDING_QUERY":if(this._onInstantiationProgress=[],"SUCCESS"==s.type){n.promiseResolver(s.data);return}break;case"FETCH_QUERY_RESULTS":if("QUERY_RESULT_CHUNK"==s.type){n.promiseResolver(s.data);return}break;case"CREATE_PREPARED":if("PREPARED_STATEMENT_ID"==s.type){n.promiseResolver(s.data);return}}n.promiseRejecter(Error("unexpected response type: ".concat(s.type.toString())))}onError(e){console.error(e),console.error("error in duckdb worker: ".concat(e.message)),this._pendingRequests.clear()}onClose(){if(this._workerShutdownResolver(null),0!=this._pendingRequests.size){console.warn("worker terminated with ".concat(this._pendingRequests.size," pending requests"));return}this._pendingRequests.clear()}async reset(){let e=new Q("RESET",null);return await this.postTask(e)}async ping(){let e=new Q("PING",null);await this.postTask(e)}async dropFile(e){let t=new Q("DROP_FILE",e);return await this.postTask(t)}async dropFiles(){let e=new Q("DROP_FILES",null);return await this.postTask(e)}async flushFiles(){let e=new Q("FLUSH_FILES",null);return await this.postTask(e)}async instantiate(e,t=null,s=e=>{}){this._onInstantiationProgress.push(s);let n=new Q("INSTANTIATE",[e,t]);return await this.postTask(n)}async getVersion(){let e=new Q("GET_VERSION",null);return await this.postTask(e)}async getFeatureFlags(){let e=new Q("GET_FEATURE_FLAGS",null);return await this.postTask(e)}async open(e){let t=new Q("OPEN",e);await this.postTask(t)}async tokenize(e){let t=new Q("TOKENIZE",e);return await this.postTask(t)}async connectInternal(){let e=new Q("CONNECT",null);return await this.postTask(e)}async connect(){return new G(this,await this.connectInternal())}async disconnect(e){let t=new Q("DISCONNECT",e);await this.postTask(t)}async runQuery(e,t){let s=new Q("RUN_QUERY",[e,t]);return await this.postTask(s)}async startPendingQuery(e,t){let s=new Q("START_PENDING_QUERY",[e,t]);return await this.postTask(s)}async pollPendingQuery(e){let t=new Q("POLL_PENDING_QUERY",e);return await this.postTask(t)}async cancelPendingQuery(e){let t=new Q("CANCEL_PENDING_QUERY",e);return await this.postTask(t)}async fetchQueryResults(e){let t=new Q("FETCH_QUERY_RESULTS",e);return await this.postTask(t)}async getTableNames(e,t){let s=new Q("GET_TABLE_NAMES",[e,t]);return await this.postTask(s)}async createPrepared(e,t){let s=new Q("CREATE_PREPARED",[e,t]);return await this.postTask(s)}async closePrepared(e,t){let s=new Q("CLOSE_PREPARED",[e,t]);await this.postTask(s)}async runPrepared(e,t,s){let n=new Q("RUN_PREPARED",[e,t,s]);return await this.postTask(n)}async sendPrepared(e,t,s){let n=new Q("SEND_PREPARED",[e,t,s]);return await this.postTask(n)}async globFiles(e){let t=new Q("GLOB_FILE_INFOS",e);return await this.postTask(t)}async registerFileText(e,t){let s=W.encode(t);await this.registerFileBuffer(e,s)}async registerFileURL(e,t,s,n){void 0===t&&(t=e);let r=new Q("REGISTER_FILE_URL",[e,t,s,n]);await this.postTask(r)}async registerEmptyFileBuffer(e){let t=new Q("REGISTER_FILE_BUFFER",[e,new Uint8Array]);await this.postTask(t)}async registerFileBuffer(e,t){let s=new Q("REGISTER_FILE_BUFFER",[e,t]);await this.postTask(s,[t.buffer])}async registerFileHandle(e,t,s,n){let r=new Q("REGISTER_FILE_HANDLE",[e,t,s,n]);await this.postTask(r,[])}async collectFileStatistics(e,t){let s=new Q("COLLECT_FILE_STATISTICS",[e,t]);await this.postTask(s,[])}async exportFileStatistics(e){let t=new Q("EXPORT_FILE_STATISTICS",e);return await this.postTask(t,[])}async copyFileToBuffer(e){let t=new Q("COPY_FILE_TO_BUFFER",e);return await this.postTask(t)}async copyFileToPath(e,t){let s=new Q("COPY_FILE_TO_PATH",[e,t]);await this.postTask(s)}async insertArrowFromIPCStream(e,t,s){if(0==t.length)return;let n=new Q("INSERT_ARROW_FROM_IPC_STREAM",[e,t,s]);await this.postTask(n,[t.buffer])}async insertCSVFromPath(e,t,s){if(void 0!==s.columns){let e=[];for(let t in s.columns){let n=s.columns[t];e.push(H(t,n))}s.columnsFlat=e,delete s.columns}let n=new Q("IMPORT_CSV_FROM_PATH",[e,t,s]);await this.postTask(n)}async insertJSONFromPath(e,t,s){if(void 0!==s.columns){let e=[];for(let t in s.columns){let n=s.columns[t];e.push(H(t,n))}s.columnsFlat=e,delete s.columns}let n=new Q("IMPORT_JSON_FROM_PATH",[e,t,s]);await this.postTask(n)}},x=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),z=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),V=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),j=()=>(async e=>{try{return"u">typeof MessageChannel&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])),J={name:"@duckdb/duckdb-wasm",version:"1.28.0"};J.name,J.version;var Z=J.version.split(".");Z[0],Z[1],Z[2];var X=()=>typeof navigator>"u",$=null,ee=null,et=null,es=null,en=null;async function er(){return null==$&&($="u">typeof BigInt64Array),null==ee&&(ee=await z()),null==et&&(et=await j()),null==es&&(es=await V()),null==en&&(en=await x()),{bigInt64Array:$,crossOriginIsolated:X()||globalThis.crossOriginIsolated||!1,wasmExceptions:ee,wasmSIMD:es,wasmThreads:et,wasmBulkMemory:en}}async function ea(e){let t=await er();if(t.wasmExceptions){if(t.wasmSIMD&&t.wasmThreads&&t.crossOriginIsolated&&e.coi)return{mainModule:e.coi.mainModule,mainWorker:e.coi.mainWorker,pthreadWorker:e.coi.pthreadWorker};if(e.eh)return{mainModule:e.eh.mainModule,mainWorker:e.eh.mainWorker,pthreadWorker:null}}return{mainModule:e.mvp.mainModule,mainWorker:e.mvp.mainWorker,pthreadWorker:null}}I=null!=(S=L())?O(A(S)):{},((e,t,s,n)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of m(t))P.call(e,s)||void 0===s||w(e,s,{get:()=>t[s],enumerable:!(n=F(t,s))||n.enumerable})})(S&&S.__esModule?I:w(I,"default",{value:S,enumerable:!0}),S),n=new TextDecoder,e=>("u">typeof SharedArrayBuffer&&e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),n.decode(e));var ei=((h=ei||{})[h.BUFFER=0]="BUFFER",h[h.NODE_FS=1]="NODE_FS",h[h.BROWSER_FILEREADER=2]="BROWSER_FILEREADER",h[h.BROWSER_FSACCESS=3]="BROWSER_FSACCESS",h[h.HTTP=4]="HTTP",h[h.S3=5]="S3",h)}}]);